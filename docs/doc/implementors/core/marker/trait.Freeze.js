(function() {var implementors = {};
implementors["adler"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"adler/struct.Adler32.html\" title=\"struct adler::Adler32\">Adler32</a>","synthetic":true,"types":["adler::Adler32"]}];
implementors["adler32"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"adler32/struct.RollingAdler32.html\" title=\"struct adler32::RollingAdler32\">RollingAdler32</a>","synthetic":true,"types":["adler32::RollingAdler32"]}];
implementors["ahash"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ahash/struct.AHasher.html\" title=\"struct ahash::AHasher\">AHasher</a>","synthetic":true,"types":["ahash::fallback_hash::AHasher"]},{"text":"impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"ahash/struct.AHashMap.html\" title=\"struct ahash::AHashMap\">AHashMap</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["ahash::hash_map::AHashMap"]},{"text":"impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"ahash/struct.AHashSet.html\" title=\"struct ahash::AHashSet\">AHashSet</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["ahash::hash_set::AHashSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ahash/struct.RandomState.html\" title=\"struct ahash::RandomState\">RandomState</a>","synthetic":true,"types":["ahash::random_state::RandomState"]}];
implementors["aho_corasick"] = [{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/struct.AhoCorasick.html\" title=\"struct aho_corasick::AhoCorasick\">AhoCorasick</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["aho_corasick::ahocorasick::AhoCorasick"]},{"text":"impl&lt;'a, 'b, S&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/struct.FindIter.html\" title=\"struct aho_corasick::FindIter\">FindIter</a>&lt;'a, 'b, S&gt;","synthetic":true,"types":["aho_corasick::ahocorasick::FindIter"]},{"text":"impl&lt;'a, 'b, S&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/struct.FindOverlappingIter.html\" title=\"struct aho_corasick::FindOverlappingIter\">FindOverlappingIter</a>&lt;'a, 'b, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["aho_corasick::ahocorasick::FindOverlappingIter"]},{"text":"impl&lt;'a, R, S&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/struct.StreamFindIter.html\" title=\"struct aho_corasick::StreamFindIter\">StreamFindIter</a>&lt;'a, R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["aho_corasick::ahocorasick::StreamFindIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/struct.AhoCorasickBuilder.html\" title=\"struct aho_corasick::AhoCorasickBuilder\">AhoCorasickBuilder</a>","synthetic":true,"types":["aho_corasick::ahocorasick::AhoCorasickBuilder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aho_corasick/enum.MatchKind.html\" title=\"enum aho_corasick::MatchKind\">MatchKind</a>","synthetic":true,"types":["aho_corasick::ahocorasick::MatchKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/struct.Error.html\" title=\"struct aho_corasick::Error\">Error</a>","synthetic":true,"types":["aho_corasick::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aho_corasick/enum.ErrorKind.html\" title=\"enum aho_corasick::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["aho_corasick::error::ErrorKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aho_corasick/packed/enum.MatchKind.html\" title=\"enum aho_corasick::packed::MatchKind\">MatchKind</a>","synthetic":true,"types":["aho_corasick::packed::api::MatchKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/packed/struct.Config.html\" title=\"struct aho_corasick::packed::Config\">Config</a>","synthetic":true,"types":["aho_corasick::packed::api::Config"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/packed/struct.Builder.html\" title=\"struct aho_corasick::packed::Builder\">Builder</a>","synthetic":true,"types":["aho_corasick::packed::api::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/packed/struct.Searcher.html\" title=\"struct aho_corasick::packed::Searcher\">Searcher</a>","synthetic":true,"types":["aho_corasick::packed::api::Searcher"]},{"text":"impl&lt;'s, 'h&gt; Freeze for <a class=\"struct\" href=\"aho_corasick/packed/struct.FindIter.html\" title=\"struct aho_corasick::packed::FindIter\">FindIter</a>&lt;'s, 'h&gt;","synthetic":true,"types":["aho_corasick::packed::api::FindIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aho_corasick/struct.Match.html\" title=\"struct aho_corasick::Match\">Match</a>","synthetic":true,"types":["aho_corasick::Match"]}];
implementors["anyhow"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>","synthetic":true,"types":["anyhow::Error"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"anyhow/struct.Chain.html\" title=\"struct anyhow::Chain\">Chain</a>&lt;'a&gt;","synthetic":true,"types":["anyhow::Chain"]}];
implementors["approx"] = [{"text":"impl&lt;A:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, B:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"approx/struct.AbsDiff.html\" title=\"struct approx::AbsDiff\">AbsDiff</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as <a class=\"trait\" href=\"approx/trait.AbsDiffEq.html\" title=\"trait approx::AbsDiffEq\">AbsDiffEq</a>&lt;B&gt;&gt;::<a class=\"associatedtype\" href=\"approx/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::AbsDiffEq::Epsilon\">Epsilon</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["approx::AbsDiff"]},{"text":"impl&lt;A:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, B:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"approx/struct.Relative.html\" title=\"struct approx::Relative\">Relative</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as <a class=\"trait\" href=\"approx/trait.AbsDiffEq.html\" title=\"trait approx::AbsDiffEq\">AbsDiffEq</a>&lt;B&gt;&gt;::<a class=\"associatedtype\" href=\"approx/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::AbsDiffEq::Epsilon\">Epsilon</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["approx::Relative"]},{"text":"impl&lt;A:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, B:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"approx/struct.Ulps.html\" title=\"struct approx::Ulps\">Ulps</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as <a class=\"trait\" href=\"approx/trait.AbsDiffEq.html\" title=\"trait approx::AbsDiffEq\">AbsDiffEq</a>&lt;B&gt;&gt;::<a class=\"associatedtype\" href=\"approx/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::AbsDiffEq::Epsilon\">Epsilon</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["approx::Ulps"]}];
implementors["base64"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"base64/display/struct.Base64Display.html\" title=\"struct base64::display::Base64Display\">Base64Display</a>&lt;'a&gt;","synthetic":true,"types":["base64::display::Base64Display"]},{"text":"impl&lt;'a, R&gt; Freeze for <a class=\"struct\" href=\"base64/read/struct.DecoderReader.html\" title=\"struct base64::read::DecoderReader\">DecoderReader</a>&lt;'a, R&gt;","synthetic":true,"types":["base64::read::decoder::DecoderReader"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"base64/write/struct.EncoderWriter.html\" title=\"struct base64::write::EncoderWriter\">EncoderWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["base64::write::encoder::EncoderWriter"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"base64/write/struct.EncoderStringWriter.html\" title=\"struct base64::write::EncoderStringWriter\">EncoderStringWriter</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["base64::write::encoder_string_writer::EncoderStringWriter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"base64/enum.DecodeError.html\" title=\"enum base64::DecodeError\">DecodeError</a>","synthetic":true,"types":["base64::decode::DecodeError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"base64/enum.CharacterSet.html\" title=\"enum base64::CharacterSet\">CharacterSet</a>","synthetic":true,"types":["base64::CharacterSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"base64/struct.Config.html\" title=\"struct base64::Config\">Config</a>","synthetic":true,"types":["base64::Config"]}];
implementors["bio"] = [{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"bio/alignment/pairwise/banded/struct.Aligner.html\" title=\"struct bio::alignment::pairwise::banded::Aligner\">Aligner</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::alignment::pairwise::banded::Aligner"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/alignment/pairwise/struct.MatchParams.html\" title=\"struct bio::alignment::pairwise::MatchParams\">MatchParams</a>","synthetic":true,"types":["bio::alignment::pairwise::MatchParams"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"bio/alignment/pairwise/struct.Scoring.html\" title=\"struct bio::alignment::pairwise::Scoring\">Scoring</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::alignment::pairwise::Scoring"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"bio/alignment/pairwise/struct.Aligner.html\" title=\"struct bio::alignment::pairwise::Aligner\">Aligner</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::alignment::pairwise::Aligner"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/alignment/pairwise/struct.TracebackCell.html\" title=\"struct bio::alignment::pairwise::TracebackCell\">TracebackCell</a>","synthetic":true,"types":["bio::alignment::pairwise::TracebackCell"]},{"text":"impl Freeze for <a class=\"enum\" href=\"bio/alignment/poa/enum.AlignmentOperation.html\" title=\"enum bio::alignment::poa::AlignmentOperation\">AlignmentOperation</a>","synthetic":true,"types":["bio::alignment::poa::AlignmentOperation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/alignment/poa/struct.Alignment.html\" title=\"struct bio::alignment::poa::Alignment\">Alignment</a>","synthetic":true,"types":["bio::alignment::poa::Alignment"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/alignment/poa/struct.TracebackCell.html\" title=\"struct bio::alignment::poa::TracebackCell\">TracebackCell</a>","synthetic":true,"types":["bio::alignment::poa::TracebackCell"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/alignment/poa/struct.Traceback.html\" title=\"struct bio::alignment::poa::Traceback\">Traceback</a>","synthetic":true,"types":["bio::alignment::poa::Traceback"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"bio/alignment/poa/struct.Aligner.html\" title=\"struct bio::alignment::poa::Aligner\">Aligner</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::alignment::poa::Aligner"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"bio/alignment/poa/struct.Poa.html\" title=\"struct bio::alignment::poa::Poa\">Poa</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::alignment::poa::Poa"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/alignment/sparse/struct.SparseAlignmentResult.html\" title=\"struct bio::alignment::sparse::SparseAlignmentResult\">SparseAlignmentResult</a>","synthetic":true,"types":["bio::alignment::sparse::SparseAlignmentResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/alphabets/struct.Alphabet.html\" title=\"struct bio::alphabets::Alphabet\">Alphabet</a>","synthetic":true,"types":["bio::alphabets::Alphabet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/alphabets/struct.RankTransform.html\" title=\"struct bio::alphabets::RankTransform\">RankTransform</a>","synthetic":true,"types":["bio::alphabets::RankTransform"]},{"text":"impl&lt;'a, C, T&gt; Freeze for <a class=\"struct\" href=\"bio/alphabets/struct.QGrams.html\" title=\"struct bio::alphabets::QGrams\">QGrams</a>&lt;'a, C, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::alphabets::QGrams"]},{"text":"impl&lt;R, T&gt; Freeze for <a class=\"struct\" href=\"bio/data_structures/annot_map/struct.AnnotMap.html\" title=\"struct bio::data_structures::annot_map::AnnotMap\">AnnotMap</a>&lt;R, T&gt;","synthetic":true,"types":["bio::data_structures::annot_map::AnnotMap"]},{"text":"impl&lt;'a, R, T&gt; Freeze for <a class=\"struct\" href=\"bio/data_structures/annot_map/struct.Entry.html\" title=\"struct bio::data_structures::annot_map::Entry\">Entry</a>&lt;'a, R, T&gt;","synthetic":true,"types":["bio::data_structures::annot_map::Entry"]},{"text":"impl&lt;'a, R, T&gt; Freeze for <a class=\"struct\" href=\"bio/data_structures/annot_map/struct.AnnotMapIterator.html\" title=\"struct bio::data_structures::annot_map::AnnotMapIterator\">AnnotMapIterator</a>&lt;'a, R, T&gt;","synthetic":true,"types":["bio::data_structures::annot_map::AnnotMapIterator"]},{"text":"impl&lt;T, Op&gt; Freeze for <a class=\"struct\" href=\"bio/data_structures/bit_tree/struct.FenwickTree.html\" title=\"struct bio::data_structures::bit_tree::FenwickTree\">FenwickTree</a>&lt;T, Op&gt;","synthetic":true,"types":["bio::data_structures::bit_tree::FenwickTree"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/data_structures/bit_tree/struct.MaxOp.html\" title=\"struct bio::data_structures::bit_tree::MaxOp\">MaxOp</a>","synthetic":true,"types":["bio::data_structures::bit_tree::MaxOp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/data_structures/bit_tree/struct.SumOp.html\" title=\"struct bio::data_structures::bit_tree::SumOp\">SumOp</a>","synthetic":true,"types":["bio::data_structures::bit_tree::SumOp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/data_structures/bitenc/struct.BitEnc.html\" title=\"struct bio::data_structures::bitenc::BitEnc\">BitEnc</a>","synthetic":true,"types":["bio::data_structures::bitenc::BitEnc"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bio/data_structures/bitenc/struct.BitEncIter.html\" title=\"struct bio::data_structures::bitenc::BitEncIter\">BitEncIter</a>&lt;'a&gt;","synthetic":true,"types":["bio::data_structures::bitenc::BitEncIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/data_structures/bwt/struct.Occ.html\" title=\"struct bio::data_structures::bwt::Occ\">Occ</a>","synthetic":true,"types":["bio::data_structures::bwt::Occ"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/data_structures/fmindex/struct.Interval.html\" title=\"struct bio::data_structures::fmindex::Interval\">Interval</a>","synthetic":true,"types":["bio::data_structures::fmindex::Interval"]},{"text":"impl Freeze for <a class=\"enum\" href=\"bio/data_structures/fmindex/enum.BackwardSearchResult.html\" title=\"enum bio::data_structures::fmindex::BackwardSearchResult\">BackwardSearchResult</a>","synthetic":true,"types":["bio::data_structures::fmindex::BackwardSearchResult"]},{"text":"impl&lt;DBWT, DLess, DOcc&gt; Freeze for <a class=\"struct\" href=\"bio/data_structures/fmindex/struct.FMIndex.html\" title=\"struct bio::data_structures::fmindex::FMIndex\">FMIndex</a>&lt;DBWT, DLess, DOcc&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DBWT: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;DLess: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;DOcc: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::data_structures::fmindex::FMIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/data_structures/fmindex/struct.BiInterval.html\" title=\"struct bio::data_structures::fmindex::BiInterval\">BiInterval</a>","synthetic":true,"types":["bio::data_structures::fmindex::BiInterval"]},{"text":"impl&lt;DBWT, DLess, DOcc&gt; Freeze for <a class=\"struct\" href=\"bio/data_structures/fmindex/struct.FMDIndex.html\" title=\"struct bio::data_structures::fmindex::FMDIndex\">FMDIndex</a>&lt;DBWT, DLess, DOcc&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DBWT: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;DLess: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;DOcc: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::data_structures::fmindex::FMDIndex"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"bio/data_structures/interpolation_table/struct.InterpolationTable.html\" title=\"struct bio::data_structures::interpolation_table::InterpolationTable\">InterpolationTable</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::data_structures::interpolation_table::InterpolationTable"]},{"text":"impl&lt;N, D&gt; Freeze for <a class=\"struct\" href=\"bio/data_structures/interval_tree/struct.ArrayBackedIntervalTree.html\" title=\"struct bio::data_structures::interval_tree::ArrayBackedIntervalTree\">ArrayBackedIntervalTree</a>&lt;N, D&gt;","synthetic":true,"types":["bio::data_structures::interval_tree::array_backed_interval_tree::ArrayBackedIntervalTree"]},{"text":"impl&lt;N, D&gt; Freeze for <a class=\"struct\" href=\"bio/data_structures/interval_tree/struct.IntervalTree.html\" title=\"struct bio::data_structures::interval_tree::IntervalTree\">IntervalTree</a>&lt;N, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::data_structures::interval_tree::avl_interval_tree::IntervalTree"]},{"text":"impl&lt;'a, N, D&gt; Freeze for <a class=\"struct\" href=\"bio/data_structures/interval_tree/struct.Entry.html\" title=\"struct bio::data_structures::interval_tree::Entry\">Entry</a>&lt;'a, N, D&gt;","synthetic":true,"types":["bio::data_structures::interval_tree::avl_interval_tree::Entry"]},{"text":"impl&lt;'a, N, D&gt; Freeze for <a class=\"struct\" href=\"bio/data_structures/interval_tree/struct.IntervalTreeIterator.html\" title=\"struct bio::data_structures::interval_tree::IntervalTreeIterator\">IntervalTreeIterator</a>&lt;'a, N, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::data_structures::interval_tree::avl_interval_tree::IntervalTreeIterator"]},{"text":"impl&lt;'a, N, D&gt; Freeze for <a class=\"struct\" href=\"bio/data_structures/interval_tree/struct.EntryMut.html\" title=\"struct bio::data_structures::interval_tree::EntryMut\">EntryMut</a>&lt;'a, N, D&gt;","synthetic":true,"types":["bio::data_structures::interval_tree::avl_interval_tree::EntryMut"]},{"text":"impl&lt;'a, N, D&gt; Freeze for <a class=\"struct\" href=\"bio/data_structures/interval_tree/struct.IntervalTreeIteratorMut.html\" title=\"struct bio::data_structures::interval_tree::IntervalTreeIteratorMut\">IntervalTreeIteratorMut</a>&lt;'a, N, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::data_structures::interval_tree::avl_interval_tree::IntervalTreeIteratorMut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/data_structures/qgram_index/struct.QGramIndex.html\" title=\"struct bio::data_structures::qgram_index::QGramIndex\">QGramIndex</a>","synthetic":true,"types":["bio::data_structures::qgram_index::QGramIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/data_structures/qgram_index/struct.Interval.html\" title=\"struct bio::data_structures::qgram_index::Interval\">Interval</a>","synthetic":true,"types":["bio::data_structures::qgram_index::Interval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/data_structures/qgram_index/struct.Match.html\" title=\"struct bio::data_structures::qgram_index::Match\">Match</a>","synthetic":true,"types":["bio::data_structures::qgram_index::Match"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/data_structures/qgram_index/struct.ExactMatch.html\" title=\"struct bio::data_structures::qgram_index::ExactMatch\">ExactMatch</a>","synthetic":true,"types":["bio::data_structures::qgram_index::ExactMatch"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/data_structures/rank_select/struct.RankSelect.html\" title=\"struct bio::data_structures::rank_select::RankSelect\">RankSelect</a>","synthetic":true,"types":["bio::data_structures::rank_select::RankSelect"]},{"text":"impl Freeze for <a class=\"enum\" href=\"bio/data_structures/rank_select/enum.SuperblockRank.html\" title=\"enum bio::data_structures::rank_select::SuperblockRank\">SuperblockRank</a>","synthetic":true,"types":["bio::data_structures::rank_select::SuperblockRank"]},{"text":"impl&lt;F, B&gt; Freeze for <a class=\"struct\" href=\"bio/data_structures/smallints/struct.SmallInts.html\" title=\"struct bio::data_structures::smallints::SmallInts\">SmallInts</a>&lt;F, B&gt;","synthetic":true,"types":["bio::data_structures::smallints::SmallInts"]},{"text":"impl&lt;'a, S, B&gt; Freeze for <a class=\"struct\" href=\"bio/data_structures/smallints/struct.Iter.html\" title=\"struct bio::data_structures::smallints::Iter\">Iter</a>&lt;'a, S, B&gt;","synthetic":true,"types":["bio::data_structures::smallints::Iter"]},{"text":"impl&lt;DBWT, DLess, DOcc&gt; Freeze for <a class=\"struct\" href=\"bio/data_structures/suffix_array/struct.SampledSuffixArray.html\" title=\"struct bio::data_structures::suffix_array::SampledSuffixArray\">SampledSuffixArray</a>&lt;DBWT, DLess, DOcc&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DBWT: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;DLess: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;DOcc: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::data_structures::suffix_array::SampledSuffixArray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/data_structures/wavelet_matrix/struct.WaveletMatrix.html\" title=\"struct bio::data_structures::wavelet_matrix::WaveletMatrix\">WaveletMatrix</a>","synthetic":true,"types":["bio::data_structures::wavelet_matrix::WaveletMatrix"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"bio/io/bed/struct.Reader.html\" title=\"struct bio::io::bed::Reader\">Reader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::io::bed::Reader"]},{"text":"impl&lt;'a, R&gt; Freeze for <a class=\"struct\" href=\"bio/io/bed/struct.Records.html\" title=\"struct bio::io::bed::Records\">Records</a>&lt;'a, R&gt;","synthetic":true,"types":["bio::io::bed::Records"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"bio/io/bed/struct.Writer.html\" title=\"struct bio::io::bed::Writer\">Writer</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::io::bed::Writer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/io/bed/struct.Record.html\" title=\"struct bio::io::bed::Record\">Record</a>","synthetic":true,"types":["bio::io::bed::Record"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bio/io/fasta/struct.Reader.html\" title=\"struct bio::io::fasta::Reader\">Reader</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::io::fasta::Reader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/io/fasta/struct.Index.html\" title=\"struct bio::io::fasta::Index\">Index</a>","synthetic":true,"types":["bio::io::fasta::Index"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"bio/io/fasta/struct.IndexedReader.html\" title=\"struct bio::io::fasta::IndexedReader\">IndexedReader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::io::fasta::IndexedReader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/io/fasta/struct.Sequence.html\" title=\"struct bio::io::fasta::Sequence\">Sequence</a>","synthetic":true,"types":["bio::io::fasta::Sequence"]},{"text":"impl&lt;'a, R&gt; Freeze for <a class=\"struct\" href=\"bio/io/fasta/struct.IndexedReaderIterator.html\" title=\"struct bio::io::fasta::IndexedReaderIterator\">IndexedReaderIterator</a>&lt;'a, R&gt;","synthetic":true,"types":["bio::io::fasta::IndexedReaderIterator"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"bio/io/fasta/struct.Writer.html\" title=\"struct bio::io::fasta::Writer\">Writer</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::io::fasta::Writer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/io/fasta/struct.Record.html\" title=\"struct bio::io::fasta::Record\">Record</a>","synthetic":true,"types":["bio::io::fasta::Record"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bio/io/fasta/struct.Records.html\" title=\"struct bio::io::fasta::Records\">Records</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::io::fasta::Records"]},{"text":"impl Freeze for <a class=\"enum\" href=\"bio/io/fastq/enum.Error.html\" title=\"enum bio::io::fastq::Error\">Error</a>","synthetic":true,"types":["bio::io::fastq::Error"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bio/io/fastq/struct.Reader.html\" title=\"struct bio::io::fastq::Reader\">Reader</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::io::fastq::Reader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/io/fastq/struct.Record.html\" title=\"struct bio::io::fastq::Record\">Record</a>","synthetic":true,"types":["bio::io::fastq::Record"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"bio/io/fastq/struct.Records.html\" title=\"struct bio::io::fastq::Records\">Records</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::io::fastq::Records"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"bio/io/fastq/struct.Writer.html\" title=\"struct bio::io::fastq::Writer\">Writer</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::io::fastq::Writer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"bio/io/gff/enum.GffType.html\" title=\"enum bio::io::gff::GffType\">GffType</a>","synthetic":true,"types":["bio::io::gff::GffType"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"bio/io/gff/struct.Reader.html\" title=\"struct bio::io::gff::Reader\">Reader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::io::gff::Reader"]},{"text":"impl&lt;'a, R&gt; Freeze for <a class=\"struct\" href=\"bio/io/gff/struct.Records.html\" title=\"struct bio::io::gff::Records\">Records</a>&lt;'a, R&gt;","synthetic":true,"types":["bio::io::gff::Records"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"bio/io/gff/struct.Writer.html\" title=\"struct bio::io::gff::Writer\">Writer</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::io::gff::Writer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/io/gff/struct.Record.html\" title=\"struct bio::io::gff::Record\">Record</a>","synthetic":true,"types":["bio::io::gff::Record"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/pattern_matching/bndm/struct.BNDM.html\" title=\"struct bio::pattern_matching::bndm::BNDM\">BNDM</a>","synthetic":true,"types":["bio::pattern_matching::bndm::BNDM"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bio/pattern_matching/bndm/struct.Matches.html\" title=\"struct bio::pattern_matching::bndm::Matches\">Matches</a>&lt;'a&gt;","synthetic":true,"types":["bio::pattern_matching::bndm::Matches"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/pattern_matching/bom/struct.BOM.html\" title=\"struct bio::pattern_matching::bom::BOM\">BOM</a>","synthetic":true,"types":["bio::pattern_matching::bom::BOM"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bio/pattern_matching/bom/struct.Matches.html\" title=\"struct bio::pattern_matching::bom::Matches\">Matches</a>&lt;'a&gt;","synthetic":true,"types":["bio::pattern_matching::bom::Matches"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bio/pattern_matching/horspool/struct.Horspool.html\" title=\"struct bio::pattern_matching::horspool::Horspool\">Horspool</a>&lt;'a&gt;","synthetic":true,"types":["bio::pattern_matching::horspool::Horspool"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bio/pattern_matching/horspool/struct.Matches.html\" title=\"struct bio::pattern_matching::horspool::Matches\">Matches</a>&lt;'a&gt;","synthetic":true,"types":["bio::pattern_matching::horspool::Matches"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bio/pattern_matching/kmp/struct.KMP.html\" title=\"struct bio::pattern_matching::kmp::KMP\">KMP</a>&lt;'a&gt;","synthetic":true,"types":["bio::pattern_matching::kmp::KMP"]},{"text":"impl&lt;'a, C, T&gt; Freeze for <a class=\"struct\" href=\"bio/pattern_matching/kmp/struct.Matches.html\" title=\"struct bio::pattern_matching::kmp::Matches\">Matches</a>&lt;'a, C, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::pattern_matching::kmp::Matches"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/pattern_matching/myers/struct.MyersBuilder.html\" title=\"struct bio::pattern_matching::myers::MyersBuilder\">MyersBuilder</a>","synthetic":true,"types":["bio::pattern_matching::myers::builder::MyersBuilder"]},{"text":"impl&lt;'a, T, C, I&gt; Freeze for <a class=\"struct\" href=\"bio/pattern_matching/myers/long/struct.Matches.html\" title=\"struct bio::pattern_matching::myers::long::Matches\">Matches</a>&lt;'a, T, C, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::pattern_matching::myers::long::myers_impl::Matches"]},{"text":"impl&lt;'a, T, C, I&gt; Freeze for <a class=\"struct\" href=\"bio/pattern_matching/myers/long/struct.FullMatches.html\" title=\"struct bio::pattern_matching::myers::long::FullMatches\">FullMatches</a>&lt;'a, T, C, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::pattern_matching::myers::long::myers_impl::FullMatches"]},{"text":"impl&lt;'a, T, C, I&gt; Freeze for <a class=\"struct\" href=\"bio/pattern_matching/myers/long/struct.LazyMatches.html\" title=\"struct bio::pattern_matching::myers::long::LazyMatches\">LazyMatches</a>&lt;'a, T, C, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::pattern_matching::myers::long::myers_impl::LazyMatches"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bio/pattern_matching/myers/long/struct.Myers.html\" title=\"struct bio::pattern_matching::myers::long::Myers\">Myers</a>&lt;T&gt;","synthetic":true,"types":["bio::pattern_matching::myers::long::Myers"]},{"text":"impl&lt;'a, T, C, I&gt; Freeze for <a class=\"struct\" href=\"bio/pattern_matching/myers/struct.Matches.html\" title=\"struct bio::pattern_matching::myers::Matches\">Matches</a>&lt;'a, T, C, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as <a class=\"trait\" href=\"bio/pattern_matching/myers/trait.BitVec.html\" title=\"trait bio::pattern_matching::myers::BitVec\">BitVec</a>&gt;::<a class=\"associatedtype\" href=\"bio/pattern_matching/myers/trait.BitVec.html#associatedtype.DistType\" title=\"type bio::pattern_matching::myers::BitVec::DistType\">DistType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::pattern_matching::myers::simple::myers_impl::Matches"]},{"text":"impl&lt;'a, T, C, I&gt; Freeze for <a class=\"struct\" href=\"bio/pattern_matching/myers/struct.FullMatches.html\" title=\"struct bio::pattern_matching::myers::FullMatches\">FullMatches</a>&lt;'a, T, C, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as <a class=\"trait\" href=\"bio/pattern_matching/myers/trait.BitVec.html\" title=\"trait bio::pattern_matching::myers::BitVec\">BitVec</a>&gt;::<a class=\"associatedtype\" href=\"bio/pattern_matching/myers/trait.BitVec.html#associatedtype.DistType\" title=\"type bio::pattern_matching::myers::BitVec::DistType\">DistType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::pattern_matching::myers::simple::myers_impl::FullMatches"]},{"text":"impl&lt;'a, T, C, I&gt; Freeze for <a class=\"struct\" href=\"bio/pattern_matching/myers/struct.LazyMatches.html\" title=\"struct bio::pattern_matching::myers::LazyMatches\">LazyMatches</a>&lt;'a, T, C, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as <a class=\"trait\" href=\"bio/pattern_matching/myers/trait.BitVec.html\" title=\"trait bio::pattern_matching::myers::BitVec\">BitVec</a>&gt;::<a class=\"associatedtype\" href=\"bio/pattern_matching/myers/trait.BitVec.html#associatedtype.DistType\" title=\"type bio::pattern_matching::myers::BitVec::DistType\">DistType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::pattern_matching::myers::simple::myers_impl::LazyMatches"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bio/pattern_matching/myers/struct.Myers.html\" title=\"struct bio::pattern_matching::myers::Myers\">Myers</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as <a class=\"trait\" href=\"bio/pattern_matching/myers/trait.BitVec.html\" title=\"trait bio::pattern_matching::myers::BitVec\">BitVec</a>&gt;::<a class=\"associatedtype\" href=\"bio/pattern_matching/myers/trait.BitVec.html#associatedtype.DistType\" title=\"type bio::pattern_matching::myers::BitVec::DistType\">DistType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::pattern_matching::myers::simple::Myers"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/pattern_matching/pssm/struct.DNAMotif.html\" title=\"struct bio::pattern_matching::pssm::DNAMotif\">DNAMotif</a>","synthetic":true,"types":["bio::pattern_matching::pssm::dnamotif::DNAMotif"]},{"text":"impl Freeze for <a class=\"enum\" href=\"bio/pattern_matching/pssm/errors/enum.Error.html\" title=\"enum bio::pattern_matching::pssm::errors::Error\">Error</a>","synthetic":true,"types":["bio::pattern_matching::pssm::errors::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/pattern_matching/pssm/struct.ProtMotif.html\" title=\"struct bio::pattern_matching::pssm::ProtMotif\">ProtMotif</a>","synthetic":true,"types":["bio::pattern_matching::pssm::protmotif::ProtMotif"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/pattern_matching/pssm/struct.ScoredPos.html\" title=\"struct bio::pattern_matching::pssm::ScoredPos\">ScoredPos</a>","synthetic":true,"types":["bio::pattern_matching::pssm::ScoredPos"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/pattern_matching/shift_and/struct.ShiftAnd.html\" title=\"struct bio::pattern_matching::shift_and::ShiftAnd\">ShiftAnd</a>","synthetic":true,"types":["bio::pattern_matching::shift_and::ShiftAnd"]},{"text":"impl&lt;'a, C, T&gt; Freeze for <a class=\"struct\" href=\"bio/pattern_matching/shift_and/struct.Matches.html\" title=\"struct bio::pattern_matching::shift_and::Matches\">Matches</a>&lt;'a, C, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::pattern_matching::shift_and::Matches"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"bio/pattern_matching/ukkonen/struct.Ukkonen.html\" title=\"struct bio::pattern_matching::ukkonen::Ukkonen\">Ukkonen</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::pattern_matching::ukkonen::Ukkonen"]},{"text":"impl&lt;'a, F, C, T&gt; Freeze for <a class=\"struct\" href=\"bio/pattern_matching/ukkonen/struct.Matches.html\" title=\"struct bio::pattern_matching::ukkonen::Matches\">Matches</a>&lt;'a, F, C, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::pattern_matching::ukkonen::Matches"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/seq_analysis/orf/struct.Finder.html\" title=\"struct bio::seq_analysis::orf::Finder\">Finder</a>","synthetic":true,"types":["bio::seq_analysis::orf::Finder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/seq_analysis/orf/struct.Orf.html\" title=\"struct bio::seq_analysis::orf::Orf\">Orf</a>","synthetic":true,"types":["bio::seq_analysis::orf::Orf"]},{"text":"impl&lt;'a, C, T&gt; Freeze for <a class=\"struct\" href=\"bio/seq_analysis/orf/struct.Matches.html\" title=\"struct bio::seq_analysis::orf::Matches\">Matches</a>&lt;'a, C, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::seq_analysis::orf::Matches"]},{"text":"impl Freeze for <a class=\"enum\" href=\"bio/stats/bayesian/bayes_factors/evidence/enum.KassRaftery.html\" title=\"enum bio::stats::bayesian::bayes_factors::evidence::KassRaftery\">KassRaftery</a>","synthetic":true,"types":["bio::stats::bayesian::bayes_factors::evidence::KassRaftery"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/stats/bayesian/bayes_factors/evidence/struct.KassRafteryIter.html\" title=\"struct bio::stats::bayesian::bayes_factors::evidence::KassRafteryIter\">KassRafteryIter</a>","synthetic":true,"types":["bio::stats::bayesian::bayes_factors::evidence::KassRafteryIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/stats/bayesian/bayes_factors/struct.BayesFactor.html\" title=\"struct bio::stats::bayesian::bayes_factors::BayesFactor\">BayesFactor</a>","synthetic":true,"types":["bio::stats::bayesian::bayes_factors::BayesFactor"]},{"text":"impl&lt;L, Pr, Po, Payload&gt; Freeze for <a class=\"struct\" href=\"bio/stats/bayesian/model/struct.Model.html\" title=\"struct bio::stats::bayesian::model::Model\">Model</a>&lt;L, Pr, Po, Payload&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Po: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Pr: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::stats::bayesian::model::Model"]},{"text":"impl&lt;Event, PosteriorEvent&gt; Freeze for <a class=\"struct\" href=\"bio/stats/bayesian/model/struct.ModelInstance.html\" title=\"struct bio::stats::bayesian::model::ModelInstance\">ModelInstance</a>&lt;Event, PosteriorEvent&gt;","synthetic":true,"types":["bio::stats::bayesian::model::ModelInstance"]},{"text":"impl Freeze for <a class=\"enum\" href=\"bio/stats/hmm/errors/enum.Error.html\" title=\"enum bio::stats::hmm::errors::Error\">Error</a>","synthetic":true,"types":["bio::stats::hmm::errors::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/stats/hmm/discrete_emission/struct.Model.html\" title=\"struct bio::stats::hmm::discrete_emission::Model\">Model</a>","synthetic":true,"types":["bio::stats::hmm::discrete_emission::Model"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"bio/stats/hmm/discrete_emission_opt_end/struct.Model.html\" title=\"struct bio::stats::hmm::discrete_emission_opt_end::Model\">Model</a>","synthetic":true,"types":["bio::stats::hmm::discrete_emission_opt_end::Model"]},{"text":"impl&lt;Dist&gt; Freeze for <a class=\"struct\" href=\"bio/stats/hmm/univariate_continuous_emission/struct.Model.html\" title=\"struct bio::stats::hmm::univariate_continuous_emission::Model\">Model</a>&lt;Dist&gt;","synthetic":true,"types":["bio::stats::hmm::univariate_continuous_emission::Model"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/stats/hmm/struct.State.html\" title=\"struct bio::stats::hmm::State\">State</a>","synthetic":true,"types":["bio::stats::hmm::State"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/stats/hmm/struct.StateIter.html\" title=\"struct bio::stats::hmm::StateIter\">StateIter</a>","synthetic":true,"types":["bio::stats::hmm::StateIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/stats/hmm/struct.StateTransition.html\" title=\"struct bio::stats::hmm::StateTransition\">StateTransition</a>","synthetic":true,"types":["bio::stats::hmm::StateTransition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/stats/hmm/struct.StateTransitionIter.html\" title=\"struct bio::stats::hmm::StateTransitionIter\">StateTransitionIter</a>","synthetic":true,"types":["bio::stats::hmm::StateTransitionIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/stats/pairhmm/struct.HomopolyPairHMM.html\" title=\"struct bio::stats::pairhmm::HomopolyPairHMM\">HomopolyPairHMM</a>","synthetic":true,"types":["bio::stats::pairhmm::homopolypairhmm::HomopolyPairHMM"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/stats/pairhmm/struct.PairHMM.html\" title=\"struct bio::stats::pairhmm::PairHMM\">PairHMM</a>","synthetic":true,"types":["bio::stats::pairhmm::pairhmm::PairHMM"]},{"text":"impl Freeze for <a class=\"enum\" href=\"bio/stats/pairhmm/enum.XYEmission.html\" title=\"enum bio::stats::pairhmm::XYEmission\">XYEmission</a>","synthetic":true,"types":["bio::stats::pairhmm::XYEmission"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bio/stats/probs/cdf/struct.Entry.html\" title=\"struct bio::stats::probs::cdf::Entry\">Entry</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::stats::probs::cdf::Entry"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bio/stats/probs/cdf/struct.CDF.html\" title=\"struct bio::stats::probs::cdf::CDF\">CDF</a>&lt;T&gt;","synthetic":true,"types":["bio::stats::probs::cdf::CDF"]},{"text":"impl Freeze for <a class=\"enum\" href=\"bio/stats/probs/errors/enum.Error.html\" title=\"enum bio::stats::probs::errors::Error\">Error</a>","synthetic":true,"types":["bio::stats::probs::errors::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/stats/probs/struct.Prob.html\" title=\"struct bio::stats::probs::Prob\">Prob</a>","synthetic":true,"types":["bio::stats::probs::Prob"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/stats/probs/struct.LogProb.html\" title=\"struct bio::stats::probs::LogProb\">LogProb</a>","synthetic":true,"types":["bio::stats::probs::LogProb"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio/stats/probs/struct.PHREDProb.html\" title=\"struct bio::stats::probs::PHREDProb\">PHREDProb</a>","synthetic":true,"types":["bio::stats::probs::PHREDProb"]},{"text":"impl&lt;N&gt; Freeze for <a class=\"struct\" href=\"bio/utils/struct.Interval.html\" title=\"struct bio::utils::Interval\">Interval</a>&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["bio::utils::interval::Interval"]}];
implementors["bio_types"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"bio_types/alignment/enum.AlignmentOperation.html\" title=\"enum bio_types::alignment::AlignmentOperation\">AlignmentOperation</a>","synthetic":true,"types":["bio_types::alignment::AlignmentOperation"]},{"text":"impl Freeze for <a class=\"enum\" href=\"bio_types/alignment/enum.AlignmentMode.html\" title=\"enum bio_types::alignment::AlignmentMode\">AlignmentMode</a>","synthetic":true,"types":["bio_types::alignment::AlignmentMode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio_types/alignment/struct.Alignment.html\" title=\"struct bio_types::alignment::Alignment\">Alignment</a>","synthetic":true,"types":["bio_types::alignment::Alignment"]},{"text":"impl&lt;R, S&gt; Freeze for <a class=\"struct\" href=\"bio_types/annot/contig/struct.Contig.html\" title=\"struct bio_types::annot::contig::Contig\">Contig</a>&lt;R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["bio_types::annot::contig::Contig"]},{"text":"impl&lt;R, S&gt; Freeze for <a class=\"struct\" href=\"bio_types/annot/pos/struct.Pos.html\" title=\"struct bio_types::annot::pos::Pos\">Pos</a>&lt;R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["bio_types::annot::pos::Pos"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"bio_types/annot/refids/struct.RefIDSet.html\" title=\"struct bio_types::annot::refids::RefIDSet\">RefIDSet</a>&lt;R&gt;","synthetic":true,"types":["bio_types::annot::refids::RefIDSet"]},{"text":"impl&lt;R, S&gt; Freeze for <a class=\"struct\" href=\"bio_types/annot/spliced/struct.Spliced.html\" title=\"struct bio_types::annot::spliced::Spliced\">Spliced</a>&lt;R, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["bio_types::annot::spliced::Spliced"]},{"text":"impl Freeze for <a class=\"enum\" href=\"bio_types/annot/spliced/enum.SplicingError.html\" title=\"enum bio_types::annot::spliced::SplicingError\">SplicingError</a>","synthetic":true,"types":["bio_types::annot::spliced::SplicingError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"bio_types/annot/enum.ParseAnnotError.html\" title=\"enum bio_types::annot::ParseAnnotError\">ParseAnnotError</a>","synthetic":true,"types":["bio_types::annot::ParseAnnotError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"bio_types/annot/enum.AnnotError.html\" title=\"enum bio_types::annot::AnnotError\">AnnotError</a>","synthetic":true,"types":["bio_types::annot::AnnotError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio_types/genome/struct.Interval.html\" title=\"struct bio_types::genome::Interval\">Interval</a>","synthetic":true,"types":["bio_types::genome::Interval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bio_types/genome/struct.Locus.html\" title=\"struct bio_types::genome::Locus\">Locus</a>","synthetic":true,"types":["bio_types::genome::Locus"]},{"text":"impl Freeze for <a class=\"enum\" href=\"bio_types/sequence/enum.SequenceReadPairOrientation.html\" title=\"enum bio_types::sequence::SequenceReadPairOrientation\">SequenceReadPairOrientation</a>","synthetic":true,"types":["bio_types::sequence::SequenceReadPairOrientation"]},{"text":"impl Freeze for <a class=\"enum\" href=\"bio_types/strand/enum.Strand.html\" title=\"enum bio_types::strand::Strand\">Strand</a>","synthetic":true,"types":["bio_types::strand::Strand"]},{"text":"impl Freeze for <a class=\"enum\" href=\"bio_types/strand/enum.ReqStrand.html\" title=\"enum bio_types::strand::ReqStrand\">ReqStrand</a>","synthetic":true,"types":["bio_types::strand::ReqStrand"]},{"text":"impl Freeze for <a class=\"enum\" href=\"bio_types/strand/enum.NoStrand.html\" title=\"enum bio_types::strand::NoStrand\">NoStrand</a>","synthetic":true,"types":["bio_types::strand::NoStrand"]},{"text":"impl Freeze for <a class=\"enum\" href=\"bio_types/strand/enum.StrandError.html\" title=\"enum bio_types::strand::StrandError\">StrandError</a>","synthetic":true,"types":["bio_types::strand::StrandError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"bio_types/variant/enum.Kind.html\" title=\"enum bio_types::variant::Kind\">Kind</a>","synthetic":true,"types":["bio_types::variant::Kind"]}];
implementors["bit_set"] = [{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bit_set/struct.BitSet.html\" title=\"struct bit_set::BitSet\">BitSet</a>&lt;B&gt;","synthetic":true,"types":["bit_set::BitSet"]},{"text":"impl&lt;'a, B&gt; Freeze for <a class=\"struct\" href=\"bit_set/struct.Iter.html\" title=\"struct bit_set::Iter\">Iter</a>&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["bit_set::Iter"]},{"text":"impl&lt;'a, B&gt; Freeze for <a class=\"struct\" href=\"bit_set/struct.Union.html\" title=\"struct bit_set::Union\">Union</a>&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["bit_set::Union"]},{"text":"impl&lt;'a, B&gt; Freeze for <a class=\"struct\" href=\"bit_set/struct.Intersection.html\" title=\"struct bit_set::Intersection\">Intersection</a>&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["bit_set::Intersection"]},{"text":"impl&lt;'a, B&gt; Freeze for <a class=\"struct\" href=\"bit_set/struct.Difference.html\" title=\"struct bit_set::Difference\">Difference</a>&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["bit_set::Difference"]},{"text":"impl&lt;'a, B&gt; Freeze for <a class=\"struct\" href=\"bit_set/struct.SymmetricDifference.html\" title=\"struct bit_set::SymmetricDifference\">SymmetricDifference</a>&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["bit_set::SymmetricDifference"]}];
implementors["bit_vec"] = [{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bit_vec/struct.BitVec.html\" title=\"struct bit_vec::BitVec\">BitVec</a>&lt;B&gt;","synthetic":true,"types":["bit_vec::BitVec"]},{"text":"impl&lt;'a, B&gt; Freeze for <a class=\"struct\" href=\"bit_vec/struct.Iter.html\" title=\"struct bit_vec::Iter\">Iter</a>&lt;'a, B&gt;","synthetic":true,"types":["bit_vec::Iter"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bit_vec/struct.IntoIter.html\" title=\"struct bit_vec::IntoIter\">IntoIter</a>&lt;B&gt;","synthetic":true,"types":["bit_vec::IntoIter"]},{"text":"impl&lt;'a, B&gt; Freeze for <a class=\"struct\" href=\"bit_vec/struct.Blocks.html\" title=\"struct bit_vec::Blocks\">Blocks</a>&lt;'a, B&gt;","synthetic":true,"types":["bit_vec::Blocks"]}];
implementors["block_buffer"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"block_buffer/struct.Eager.html\" title=\"struct block_buffer::Eager\">Eager</a>","synthetic":true,"types":["block_buffer::Eager"]},{"text":"impl Freeze for <a class=\"struct\" href=\"block_buffer/struct.Lazy.html\" title=\"struct block_buffer::Lazy\">Lazy</a>","synthetic":true,"types":["block_buffer::Lazy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"block_buffer/struct.Error.html\" title=\"struct block_buffer::Error\">Error</a>","synthetic":true,"types":["block_buffer::Error"]},{"text":"impl&lt;BlockSize, Kind&gt; Freeze for <a class=\"struct\" href=\"block_buffer/struct.BlockBuffer.html\" title=\"struct block_buffer::BlockBuffer\">BlockBuffer</a>&lt;BlockSize, Kind&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;BlockSize as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.1/core/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["block_buffer::BlockBuffer"]}];
implementors["bstr"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"bstr/struct.BStr.html\" title=\"struct bstr::BStr\">BStr</a>","synthetic":true,"types":["bstr::bstr::BStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bstr/struct.BString.html\" title=\"struct bstr::BString\">BString</a>","synthetic":true,"types":["bstr::bstring::BString"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Finder.html\" title=\"struct bstr::Finder\">Finder</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::Finder"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.FinderReverse.html\" title=\"struct bstr::FinderReverse\">FinderReverse</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::FinderReverse"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Find.html\" title=\"struct bstr::Find\">Find</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::Find"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.FindReverse.html\" title=\"struct bstr::FindReverse\">FindReverse</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::FindReverse"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Bytes.html\" title=\"struct bstr::Bytes\">Bytes</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::Bytes"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Fields.html\" title=\"struct bstr::Fields\">Fields</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::Fields"]},{"text":"impl&lt;'a, F&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.FieldsWith.html\" title=\"struct bstr::FieldsWith\">FieldsWith</a>&lt;'a, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["bstr::ext_slice::FieldsWith"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Split.html\" title=\"struct bstr::Split\">Split</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::Split"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.SplitReverse.html\" title=\"struct bstr::SplitReverse\">SplitReverse</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::SplitReverse"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.SplitN.html\" title=\"struct bstr::SplitN\">SplitN</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::SplitN"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.SplitNReverse.html\" title=\"struct bstr::SplitNReverse\">SplitNReverse</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::SplitNReverse"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Lines.html\" title=\"struct bstr::Lines\">Lines</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::Lines"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.LinesWithTerminator.html\" title=\"struct bstr::LinesWithTerminator\">LinesWithTerminator</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_slice::LinesWithTerminator"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.DrainBytes.html\" title=\"struct bstr::DrainBytes\">DrainBytes</a>&lt;'a&gt;","synthetic":true,"types":["bstr::ext_vec::DrainBytes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bstr/struct.FromUtf8Error.html\" title=\"struct bstr::FromUtf8Error\">FromUtf8Error</a>","synthetic":true,"types":["bstr::ext_vec::FromUtf8Error"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bstr/io/struct.ByteLines.html\" title=\"struct bstr::io::ByteLines\">ByteLines</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["bstr::io::ByteLines"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bstr/io/struct.ByteRecords.html\" title=\"struct bstr::io::ByteRecords\">ByteRecords</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["bstr::io::ByteRecords"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Graphemes.html\" title=\"struct bstr::Graphemes\">Graphemes</a>&lt;'a&gt;","synthetic":true,"types":["bstr::unicode::grapheme::Graphemes"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.GraphemeIndices.html\" title=\"struct bstr::GraphemeIndices\">GraphemeIndices</a>&lt;'a&gt;","synthetic":true,"types":["bstr::unicode::grapheme::GraphemeIndices"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Sentences.html\" title=\"struct bstr::Sentences\">Sentences</a>&lt;'a&gt;","synthetic":true,"types":["bstr::unicode::sentence::Sentences"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.SentenceIndices.html\" title=\"struct bstr::SentenceIndices\">SentenceIndices</a>&lt;'a&gt;","synthetic":true,"types":["bstr::unicode::sentence::SentenceIndices"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Words.html\" title=\"struct bstr::Words\">Words</a>&lt;'a&gt;","synthetic":true,"types":["bstr::unicode::word::Words"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.WordIndices.html\" title=\"struct bstr::WordIndices\">WordIndices</a>&lt;'a&gt;","synthetic":true,"types":["bstr::unicode::word::WordIndices"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.WordsWithBreaks.html\" title=\"struct bstr::WordsWithBreaks\">WordsWithBreaks</a>&lt;'a&gt;","synthetic":true,"types":["bstr::unicode::word::WordsWithBreaks"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.WordsWithBreakIndices.html\" title=\"struct bstr::WordsWithBreakIndices\">WordsWithBreakIndices</a>&lt;'a&gt;","synthetic":true,"types":["bstr::unicode::word::WordsWithBreakIndices"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Chars.html\" title=\"struct bstr::Chars\">Chars</a>&lt;'a&gt;","synthetic":true,"types":["bstr::utf8::Chars"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.CharIndices.html\" title=\"struct bstr::CharIndices\">CharIndices</a>&lt;'a&gt;","synthetic":true,"types":["bstr::utf8::CharIndices"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Utf8Chunks.html\" title=\"struct bstr::Utf8Chunks\">Utf8Chunks</a>&lt;'a&gt;","synthetic":true,"types":["bstr::utf8::Utf8Chunks"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"bstr/struct.Utf8Chunk.html\" title=\"struct bstr::Utf8Chunk\">Utf8Chunk</a>&lt;'a&gt;","synthetic":true,"types":["bstr::utf8::Utf8Chunk"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bstr/struct.Utf8Error.html\" title=\"struct bstr::Utf8Error\">Utf8Error</a>","synthetic":true,"types":["bstr::utf8::Utf8Error"]}];
implementors["bv"] = [{"text":"impl&lt;'a, Block&gt; Freeze for <a class=\"struct\" href=\"bv/struct.BitSlice.html\" title=\"struct bv::BitSlice\">BitSlice</a>&lt;'a, Block&gt;","synthetic":true,"types":["bv::slice::BitSlice"]},{"text":"impl&lt;'a, Block&gt; Freeze for <a class=\"struct\" href=\"bv/struct.BitSliceMut.html\" title=\"struct bv::BitSliceMut\">BitSliceMut</a>&lt;'a, Block&gt;","synthetic":true,"types":["bv::slice::BitSliceMut"]},{"text":"impl&lt;Block&gt; Freeze for <a class=\"struct\" href=\"bv/struct.BitVec.html\" title=\"struct bv::BitVec\">BitVec</a>&lt;Block&gt;","synthetic":true,"types":["bv::bit_vec::BitVec"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bv/adapter/struct.BitSliceAdapter.html\" title=\"struct bv::adapter::BitSliceAdapter\">BitSliceAdapter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bv::adapter::bit_slice_adapter::BitSliceAdapter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bv/adapter/struct.BitNot.html\" title=\"struct bv::adapter::BitNot\">BitNot</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bv::adapter::logic::BitNot"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"bv/adapter/struct.BitAnd.html\" title=\"struct bv::adapter::BitAnd\">BitAnd</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["bv::adapter::logic::BitAnd"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"bv/adapter/struct.BitOr.html\" title=\"struct bv::adapter::BitOr\">BitOr</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["bv::adapter::logic::BitOr"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"bv/adapter/struct.BitXor.html\" title=\"struct bv::adapter::BitXor\">BitXor</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["bv::adapter::logic::BitXor"]},{"text":"impl&lt;T, U, F&gt; Freeze for <a class=\"struct\" href=\"bv/adapter/struct.BitZip.html\" title=\"struct bv::adapter::BitZip\">BitZip</a>&lt;T, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["bv::adapter::logic::BitZip"]},{"text":"impl&lt;Block&gt; Freeze for <a class=\"struct\" href=\"bv/adapter/struct.BitFill.html\" title=\"struct bv::adapter::BitFill\">BitFill</a>&lt;Block&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Block: Freeze,&nbsp;</span>","synthetic":true,"types":["bv::adapter::bit_fill::BitFill"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"bv/adapter/struct.BitConcat.html\" title=\"struct bv::adapter::BitConcat\">BitConcat</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["bv::adapter::bit_concat::BitConcat"]},{"text":"impl&lt;Block, T&gt; Freeze for <a class=\"struct\" href=\"bv/adapter/struct.BoolAdapter.html\" title=\"struct bv::adapter::BoolAdapter\">BoolAdapter</a>&lt;Block, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bv::adapter::bool_adapter::BoolAdapter"]}];
implementors["bytemuck"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"bytemuck/checked/enum.CheckedCastError.html\" title=\"enum bytemuck::checked::CheckedCastError\">CheckedCastError</a>","synthetic":true,"types":["bytemuck::checked::CheckedCastError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"bytemuck/enum.PodCastError.html\" title=\"enum bytemuck::PodCastError\">PodCastError</a>","synthetic":true,"types":["bytemuck::PodCastError"]}];
implementors["byteorder"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a>","synthetic":true,"types":["byteorder::BigEndian"]},{"text":"impl Freeze for <a class=\"enum\" href=\"byteorder/enum.LittleEndian.html\" title=\"enum byteorder::LittleEndian\">LittleEndian</a>","synthetic":true,"types":["byteorder::LittleEndian"]}];
implementors["bytes"] = [{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Chain.html\" title=\"struct bytes::buf::Chain\">Chain</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::chain::Chain"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.IntoIter.html\" title=\"struct bytes::buf::IntoIter\">IntoIter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::iter::IntoIter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Limit.html\" title=\"struct bytes::buf::Limit\">Limit</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::limit::Limit"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Reader.html\" title=\"struct bytes::buf::Reader\">Reader</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::reader::Reader"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Take.html\" title=\"struct bytes::buf::Take\">Take</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::take::Take"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bytes/buf/struct.UninitSlice.html\" title=\"struct bytes::buf::UninitSlice\">UninitSlice</a>","synthetic":true,"types":["bytes::buf::uninit_slice::UninitSlice"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"bytes/buf/struct.Writer.html\" title=\"struct bytes::buf::Writer\">Writer</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["bytes::buf::writer::Writer"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"bytes/struct.Bytes.html\" title=\"struct bytes::Bytes\">Bytes</a>","synthetic":true,"types":["bytes::bytes::Bytes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"bytes/struct.BytesMut.html\" title=\"struct bytes::BytesMut\">BytesMut</a>","synthetic":true,"types":["bytes::bytes_mut::BytesMut"]}];
implementors["cfb"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"cfb/struct.Entry.html\" title=\"struct cfb::Entry\">Entry</a>","synthetic":true,"types":["cfb::internal::entry::Entry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"cfb/struct.Entries.html\" title=\"struct cfb::Entries\">Entries</a>&lt;'a&gt;","synthetic":true,"types":["cfb::internal::entry::Entries"]},{"text":"impl Freeze for <a class=\"enum\" href=\"cfb/enum.Version.html\" title=\"enum cfb::Version\">Version</a>","synthetic":true,"types":["cfb::internal::version::Version"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"cfb/struct.CompoundFile.html\" title=\"struct cfb::CompoundFile\">CompoundFile</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["cfb::CompoundFile"]},{"text":"impl&lt;'a, F&gt; Freeze for <a class=\"struct\" href=\"cfb/struct.Stream.html\" title=\"struct cfb::Stream\">Stream</a>&lt;'a, F&gt;","synthetic":true,"types":["cfb::Stream"]}];
implementors["chrono"] = [{"text":"impl&lt;Tz&gt; Freeze for <a class=\"struct\" href=\"chrono/struct.Date.html\" title=\"struct chrono::Date\">Date</a>&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>&gt;::<a class=\"associatedtype\" href=\"chrono/offset/trait.TimeZone.html#associatedtype.Offset\" title=\"type chrono::offset::TimeZone::Offset\">Offset</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["chrono::date::Date"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/enum.SecondsFormat.html\" title=\"enum chrono::SecondsFormat\">SecondsFormat</a>","synthetic":true,"types":["chrono::datetime::SecondsFormat"]},{"text":"impl&lt;Tz&gt; Freeze for <a class=\"struct\" href=\"chrono/struct.DateTime.html\" title=\"struct chrono::DateTime\">DateTime</a>&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as <a class=\"trait\" href=\"chrono/offset/trait.TimeZone.html\" title=\"trait chrono::offset::TimeZone\">TimeZone</a>&gt;::<a class=\"associatedtype\" href=\"chrono/offset/trait.TimeZone.html#associatedtype.Offset\" title=\"type chrono::offset::TimeZone::Offset\">Offset</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["chrono::datetime::DateTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/format/struct.Parsed.html\" title=\"struct chrono::format::Parsed\">Parsed</a>","synthetic":true,"types":["chrono::format::parsed::Parsed"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"chrono/format/strftime/struct.StrftimeItems.html\" title=\"struct chrono::format::strftime::StrftimeItems\">StrftimeItems</a>&lt;'a&gt;","synthetic":true,"types":["chrono::format::strftime::StrftimeItems"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/format/enum.Pad.html\" title=\"enum chrono::format::Pad\">Pad</a>","synthetic":true,"types":["chrono::format::Pad"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/format/enum.Numeric.html\" title=\"enum chrono::format::Numeric\">Numeric</a>","synthetic":true,"types":["chrono::format::Numeric"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/format/struct.InternalNumeric.html\" title=\"struct chrono::format::InternalNumeric\">InternalNumeric</a>","synthetic":true,"types":["chrono::format::InternalNumeric"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/format/enum.Fixed.html\" title=\"enum chrono::format::Fixed\">Fixed</a>","synthetic":true,"types":["chrono::format::Fixed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/format/struct.InternalFixed.html\" title=\"struct chrono::format::InternalFixed\">InternalFixed</a>","synthetic":true,"types":["chrono::format::InternalFixed"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"chrono/format/enum.Item.html\" title=\"enum chrono::format::Item\">Item</a>&lt;'a&gt;","synthetic":true,"types":["chrono::format::Item"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/format/struct.ParseError.html\" title=\"struct chrono::format::ParseError\">ParseError</a>","synthetic":true,"types":["chrono::format::ParseError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/format/enum.ParseErrorKind.html\" title=\"enum chrono::format::ParseErrorKind\">ParseErrorKind</a>","synthetic":true,"types":["chrono::format::ParseErrorKind"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"chrono/format/struct.DelayedFormat.html\" title=\"struct chrono::format::DelayedFormat\">DelayedFormat</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["chrono::format::DelayedFormat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/naive/struct.NaiveWeek.html\" title=\"struct chrono::naive::NaiveWeek\">NaiveWeek</a>","synthetic":true,"types":["chrono::naive::date::NaiveWeek"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/naive/struct.NaiveDate.html\" title=\"struct chrono::naive::NaiveDate\">NaiveDate</a>","synthetic":true,"types":["chrono::naive::date::NaiveDate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/naive/struct.NaiveDateTime.html\" title=\"struct chrono::naive::NaiveDateTime\">NaiveDateTime</a>","synthetic":true,"types":["chrono::naive::datetime::NaiveDateTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/naive/struct.IsoWeek.html\" title=\"struct chrono::naive::IsoWeek\">IsoWeek</a>","synthetic":true,"types":["chrono::naive::isoweek::IsoWeek"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/naive/struct.NaiveTime.html\" title=\"struct chrono::naive::NaiveTime\">NaiveTime</a>","synthetic":true,"types":["chrono::naive::time::NaiveTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/offset/struct.FixedOffset.html\" title=\"struct chrono::offset::FixedOffset\">FixedOffset</a>","synthetic":true,"types":["chrono::offset::fixed::FixedOffset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/offset/struct.Local.html\" title=\"struct chrono::offset::Local\">Local</a>","synthetic":true,"types":["chrono::offset::local::Local"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/offset/struct.Utc.html\" title=\"struct chrono::offset::Utc\">Utc</a>","synthetic":true,"types":["chrono::offset::utc::Utc"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"chrono/offset/enum.LocalResult.html\" title=\"enum chrono::offset::LocalResult\">LocalResult</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["chrono::offset::LocalResult"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/enum.RoundingError.html\" title=\"enum chrono::RoundingError\">RoundingError</a>","synthetic":true,"types":["chrono::round::RoundingError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/enum.Weekday.html\" title=\"enum chrono::Weekday\">Weekday</a>","synthetic":true,"types":["chrono::weekday::Weekday"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/struct.ParseWeekdayError.html\" title=\"struct chrono::ParseWeekdayError\">ParseWeekdayError</a>","synthetic":true,"types":["chrono::weekday::ParseWeekdayError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"chrono/enum.Month.html\" title=\"enum chrono::Month\">Month</a>","synthetic":true,"types":["chrono::month::Month"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/struct.Months.html\" title=\"struct chrono::Months\">Months</a>","synthetic":true,"types":["chrono::month::Months"]},{"text":"impl Freeze for <a class=\"struct\" href=\"chrono/struct.ParseMonthError.html\" title=\"struct chrono::ParseMonthError\">ParseMonthError</a>","synthetic":true,"types":["chrono::month::ParseMonthError"]}];
implementors["color_quant"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"color_quant/struct.NeuQuant.html\" title=\"struct color_quant::NeuQuant\">NeuQuant</a>","synthetic":true,"types":["color_quant::NeuQuant"]}];
implementors["cookie"] = [{"text":"impl&lt;'c&gt; Freeze for <a class=\"struct\" href=\"cookie/struct.CookieBuilder.html\" title=\"struct cookie::CookieBuilder\">CookieBuilder</a>&lt;'c&gt;","synthetic":true,"types":["cookie::builder::CookieBuilder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"cookie/enum.ParseError.html\" title=\"enum cookie::ParseError\">ParseError</a>","synthetic":true,"types":["cookie::parse::ParseError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"cookie/struct.CookieJar.html\" title=\"struct cookie::CookieJar\">CookieJar</a>","synthetic":true,"types":["cookie::jar::CookieJar"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"cookie/struct.Delta.html\" title=\"struct cookie::Delta\">Delta</a>&lt;'a&gt;","synthetic":true,"types":["cookie::jar::Delta"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"cookie/struct.Iter.html\" title=\"struct cookie::Iter\">Iter</a>&lt;'a&gt;","synthetic":true,"types":["cookie::jar::Iter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"cookie/enum.SameSite.html\" title=\"enum cookie::SameSite\">SameSite</a>","synthetic":true,"types":["cookie::draft::SameSite"]},{"text":"impl Freeze for <a class=\"enum\" href=\"cookie/enum.Expiration.html\" title=\"enum cookie::Expiration\">Expiration</a>","synthetic":true,"types":["cookie::expiration::Expiration"]},{"text":"impl&lt;'c&gt; Freeze for <a class=\"struct\" href=\"cookie/struct.Cookie.html\" title=\"struct cookie::Cookie\">Cookie</a>&lt;'c&gt;","synthetic":true,"types":["cookie::Cookie"]},{"text":"impl&lt;'a, 'c&gt; Freeze for <a class=\"struct\" href=\"cookie/struct.Display.html\" title=\"struct cookie::Display\">Display</a>&lt;'a, 'c&gt;","synthetic":true,"types":["cookie::Display"]}];
implementors["cookie_store"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"cookie_store/enum.CookieError.html\" title=\"enum cookie_store::CookieError\">Error</a>","synthetic":true,"types":["cookie_store::cookie::Error"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"cookie_store/struct.Cookie.html\" title=\"struct cookie_store::Cookie\">Cookie</a>&lt;'a&gt;","synthetic":true,"types":["cookie_store::cookie::Cookie"]},{"text":"impl Freeze for <a class=\"enum\" href=\"cookie_store/enum.CookieDomain.html\" title=\"enum cookie_store::CookieDomain\">CookieDomain</a>","synthetic":true,"types":["cookie_store::cookie_domain::CookieDomain"]},{"text":"impl Freeze for <a class=\"enum\" href=\"cookie_store/enum.CookieExpiration.html\" title=\"enum cookie_store::CookieExpiration\">CookieExpiration</a>","synthetic":true,"types":["cookie_store::cookie_expiration::CookieExpiration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"cookie_store/struct.CookiePath.html\" title=\"struct cookie_store::CookiePath\">CookiePath</a>","synthetic":true,"types":["cookie_store::cookie_path::CookiePath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"cookie_store/struct.CookieStore.html\" title=\"struct cookie_store::CookieStore\">CookieStore</a>","synthetic":true,"types":["cookie_store::cookie_store::CookieStore"]},{"text":"impl Freeze for <a class=\"struct\" href=\"cookie_store/struct.IdnaErrors.html\" title=\"struct cookie_store::IdnaErrors\">IdnaErrors</a>","synthetic":true,"types":["cookie_store::IdnaErrors"]}];
implementors["crc32fast"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"crc32fast/struct.Hasher.html\" title=\"struct crc32fast::Hasher\">Hasher</a>","synthetic":true,"types":["crc32fast::Hasher"]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.Sender.html\" title=\"struct crossbeam_channel::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_channel::channel::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.Receiver.html\" title=\"struct crossbeam_channel::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_channel::channel::Receiver"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.Iter.html\" title=\"struct crossbeam_channel::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["crossbeam_channel::channel::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.TryIter.html\" title=\"struct crossbeam_channel::TryIter\">TryIter</a>&lt;'a, T&gt;","synthetic":true,"types":["crossbeam_channel::channel::TryIter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.IntoIter.html\" title=\"struct crossbeam_channel::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_channel::channel::IntoIter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.SendError.html\" title=\"struct crossbeam_channel::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_channel::err::SendError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"crossbeam_channel/enum.TrySendError.html\" title=\"enum crossbeam_channel::TrySendError\">TrySendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_channel::err::TrySendError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"crossbeam_channel/enum.SendTimeoutError.html\" title=\"enum crossbeam_channel::SendTimeoutError\">SendTimeoutError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_channel::err::SendTimeoutError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.RecvError.html\" title=\"struct crossbeam_channel::RecvError\">RecvError</a>","synthetic":true,"types":["crossbeam_channel::err::RecvError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossbeam_channel/enum.TryRecvError.html\" title=\"enum crossbeam_channel::TryRecvError\">TryRecvError</a>","synthetic":true,"types":["crossbeam_channel::err::TryRecvError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crossbeam_channel/enum.RecvTimeoutError.html\" title=\"enum crossbeam_channel::RecvTimeoutError\">RecvTimeoutError</a>","synthetic":true,"types":["crossbeam_channel::err::RecvTimeoutError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.TrySelectError.html\" title=\"struct crossbeam_channel::TrySelectError\">TrySelectError</a>","synthetic":true,"types":["crossbeam_channel::err::TrySelectError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.SelectTimeoutError.html\" title=\"struct crossbeam_channel::SelectTimeoutError\">SelectTimeoutError</a>","synthetic":true,"types":["crossbeam_channel::err::SelectTimeoutError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.TryReadyError.html\" title=\"struct crossbeam_channel::TryReadyError\">TryReadyError</a>","synthetic":true,"types":["crossbeam_channel::err::TryReadyError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.ReadyTimeoutError.html\" title=\"struct crossbeam_channel::ReadyTimeoutError\">ReadyTimeoutError</a>","synthetic":true,"types":["crossbeam_channel::err::ReadyTimeoutError"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.Select.html\" title=\"struct crossbeam_channel::Select\">Select</a>&lt;'a&gt;","synthetic":true,"types":["crossbeam_channel::select::Select"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"crossbeam_channel/struct.SelectedOperation.html\" title=\"struct crossbeam_channel::SelectedOperation\">SelectedOperation</a>&lt;'a&gt;","synthetic":true,"types":["crossbeam_channel::select::SelectedOperation"]}];
implementors["crossbeam_deque"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_deque/struct.Worker.html\" title=\"struct crossbeam_deque::Worker\">Worker</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_deque::deque::Worker"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_deque/struct.Stealer.html\" title=\"struct crossbeam_deque::Stealer\">Stealer</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_deque::deque::Stealer"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_deque/struct.Injector.html\" title=\"struct crossbeam_deque::Injector\">Injector</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_deque::deque::Injector"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"crossbeam_deque/enum.Steal.html\" title=\"enum crossbeam_deque::Steal\">Steal</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_deque::deque::Steal"]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;'g, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, P&gt; Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.CompareExchangeError.html\" title=\"struct crossbeam_epoch::CompareExchangeError\">CompareExchangeError</a>&lt;'g, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_epoch::atomic::CompareExchangeError"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Atomic.html\" title=\"struct crossbeam_epoch::Atomic\">Atomic</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_epoch::atomic::Atomic"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Owned.html\" title=\"struct crossbeam_epoch::Owned\">Owned</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_epoch::atomic::Owned"]},{"text":"impl&lt;'g, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Shared.html\" title=\"struct crossbeam_epoch::Shared\">Shared</a>&lt;'g, T&gt;","synthetic":true,"types":["crossbeam_epoch::atomic::Shared"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Collector.html\" title=\"struct crossbeam_epoch::Collector\">Collector</a>","synthetic":true,"types":["crossbeam_epoch::collector::Collector"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.LocalHandle.html\" title=\"struct crossbeam_epoch::LocalHandle\">LocalHandle</a>","synthetic":true,"types":["crossbeam_epoch::collector::LocalHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Guard.html\" title=\"struct crossbeam_epoch::Guard\">Guard</a>","synthetic":true,"types":["crossbeam_epoch::guard::Guard"]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_utils/atomic/struct.AtomicCell.html\" title=\"struct crossbeam_utils::atomic::AtomicCell\">AtomicCell</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_utils::atomic::atomic_cell::AtomicCell"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/struct.CachePadded.html\" title=\"struct crossbeam_utils::CachePadded\">CachePadded</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_utils::cache_padded::CachePadded"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"crossbeam_utils/struct.Backoff.html\" title=\"struct crossbeam_utils::Backoff\">Backoff</a>","synthetic":true,"types":["crossbeam_utils::backoff::Backoff"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.Parker.html\" title=\"struct crossbeam_utils::sync::Parker\">Parker</a>","synthetic":true,"types":["crossbeam_utils::sync::parker::Parker"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.Unparker.html\" title=\"struct crossbeam_utils::sync::Unparker\">Unparker</a>","synthetic":true,"types":["crossbeam_utils::sync::parker::Unparker"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.ShardedLock.html\" title=\"struct crossbeam_utils::sync::ShardedLock\">ShardedLock</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_utils::sync::sharded_lock::ShardedLock"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.ShardedLockReadGuard.html\" title=\"struct crossbeam_utils::sync::ShardedLockReadGuard\">ShardedLockReadGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["crossbeam_utils::sync::sharded_lock::ShardedLockReadGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.ShardedLockWriteGuard.html\" title=\"struct crossbeam_utils::sync::ShardedLockWriteGuard\">ShardedLockWriteGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["crossbeam_utils::sync::sharded_lock::ShardedLockWriteGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.WaitGroup.html\" title=\"struct crossbeam_utils::sync::WaitGroup\">WaitGroup</a>","synthetic":true,"types":["crossbeam_utils::sync::wait_group::WaitGroup"]},{"text":"impl&lt;'env&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/thread/struct.Scope.html\" title=\"struct crossbeam_utils::thread::Scope\">Scope</a>&lt;'env&gt;","synthetic":true,"types":["crossbeam_utils::thread::Scope"]},{"text":"impl&lt;'scope, 'env&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/thread/struct.ScopedThreadBuilder.html\" title=\"struct crossbeam_utils::thread::ScopedThreadBuilder\">ScopedThreadBuilder</a>&lt;'scope, 'env&gt;","synthetic":true,"types":["crossbeam_utils::thread::ScopedThreadBuilder"]},{"text":"impl&lt;'scope, T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/thread/struct.ScopedJoinHandle.html\" title=\"struct crossbeam_utils::thread::ScopedJoinHandle\">ScopedJoinHandle</a>&lt;'scope, T&gt;","synthetic":true,"types":["crossbeam_utils::thread::ScopedJoinHandle"]}];
implementors["crypto"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"crypto/aes/enum.KeySize.html\" title=\"enum crypto::aes::KeySize\">KeySize</a>","synthetic":true,"types":["crypto::aes::KeySize"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"crypto/aes_gcm/struct.AesGcm.html\" title=\"struct crypto::aes_gcm::AesGcm\">AesGcm</a>&lt;'a&gt;","synthetic":true,"types":["crypto::aes_gcm::AesGcm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/aessafe/struct.AesSafe128Encryptor.html\" title=\"struct crypto::aessafe::AesSafe128Encryptor\">AesSafe128Encryptor</a>","synthetic":true,"types":["crypto::aessafe::AesSafe128Encryptor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/aessafe/struct.AesSafe128Decryptor.html\" title=\"struct crypto::aessafe::AesSafe128Decryptor\">AesSafe128Decryptor</a>","synthetic":true,"types":["crypto::aessafe::AesSafe128Decryptor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/aessafe/struct.AesSafe192Encryptor.html\" title=\"struct crypto::aessafe::AesSafe192Encryptor\">AesSafe192Encryptor</a>","synthetic":true,"types":["crypto::aessafe::AesSafe192Encryptor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/aessafe/struct.AesSafe192Decryptor.html\" title=\"struct crypto::aessafe::AesSafe192Decryptor\">AesSafe192Decryptor</a>","synthetic":true,"types":["crypto::aessafe::AesSafe192Decryptor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/aessafe/struct.AesSafe256Encryptor.html\" title=\"struct crypto::aessafe::AesSafe256Encryptor\">AesSafe256Encryptor</a>","synthetic":true,"types":["crypto::aessafe::AesSafe256Encryptor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/aessafe/struct.AesSafe256Decryptor.html\" title=\"struct crypto::aessafe::AesSafe256Decryptor\">AesSafe256Decryptor</a>","synthetic":true,"types":["crypto::aessafe::AesSafe256Decryptor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/aessafe/struct.AesSafe128EncryptorX8.html\" title=\"struct crypto::aessafe::AesSafe128EncryptorX8\">AesSafe128EncryptorX8</a>","synthetic":true,"types":["crypto::aessafe::AesSafe128EncryptorX8"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/aessafe/struct.AesSafe128DecryptorX8.html\" title=\"struct crypto::aessafe::AesSafe128DecryptorX8\">AesSafe128DecryptorX8</a>","synthetic":true,"types":["crypto::aessafe::AesSafe128DecryptorX8"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/aessafe/struct.AesSafe192EncryptorX8.html\" title=\"struct crypto::aessafe::AesSafe192EncryptorX8\">AesSafe192EncryptorX8</a>","synthetic":true,"types":["crypto::aessafe::AesSafe192EncryptorX8"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/aessafe/struct.AesSafe192DecryptorX8.html\" title=\"struct crypto::aessafe::AesSafe192DecryptorX8\">AesSafe192DecryptorX8</a>","synthetic":true,"types":["crypto::aessafe::AesSafe192DecryptorX8"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/aessafe/struct.AesSafe256EncryptorX8.html\" title=\"struct crypto::aessafe::AesSafe256EncryptorX8\">AesSafe256EncryptorX8</a>","synthetic":true,"types":["crypto::aessafe::AesSafe256EncryptorX8"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/aessafe/struct.AesSafe256DecryptorX8.html\" title=\"struct crypto::aessafe::AesSafe256DecryptorX8\">AesSafe256DecryptorX8</a>","synthetic":true,"types":["crypto::aessafe::AesSafe256DecryptorX8"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/blake2b/struct.Blake2b.html\" title=\"struct crypto::blake2b::Blake2b\">Blake2b</a>","synthetic":true,"types":["crypto::blake2b::Blake2b"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/blake2s/struct.Blake2s.html\" title=\"struct crypto::blake2s::Blake2s\">Blake2s</a>","synthetic":true,"types":["crypto::blake2s::Blake2s"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/blockmodes/struct.NoPadding.html\" title=\"struct crypto::blockmodes::NoPadding\">NoPadding</a>","synthetic":true,"types":["crypto::blockmodes::NoPadding"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/blockmodes/struct.PkcsPadding.html\" title=\"struct crypto::blockmodes::PkcsPadding\">PkcsPadding</a>","synthetic":true,"types":["crypto::blockmodes::PkcsPadding"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"crypto/blockmodes/struct.EncPadding.html\" title=\"struct crypto::blockmodes::EncPadding\">EncPadding</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["crypto::blockmodes::EncPadding"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"crypto/blockmodes/struct.DecPadding.html\" title=\"struct crypto::blockmodes::DecPadding\">DecPadding</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["crypto::blockmodes::DecPadding"]},{"text":"impl&lt;T, X&gt; Freeze for <a class=\"struct\" href=\"crypto/blockmodes/struct.EcbEncryptor.html\" title=\"struct crypto::blockmodes::EcbEncryptor\">EcbEncryptor</a>&lt;T, X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["crypto::blockmodes::EcbEncryptor"]},{"text":"impl&lt;T, X&gt; Freeze for <a class=\"struct\" href=\"crypto/blockmodes/struct.EcbDecryptor.html\" title=\"struct crypto::blockmodes::EcbDecryptor\">EcbDecryptor</a>&lt;T, X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["crypto::blockmodes::EcbDecryptor"]},{"text":"impl&lt;T, X&gt; Freeze for <a class=\"struct\" href=\"crypto/blockmodes/struct.CbcEncryptor.html\" title=\"struct crypto::blockmodes::CbcEncryptor\">CbcEncryptor</a>&lt;T, X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["crypto::blockmodes::CbcEncryptor"]},{"text":"impl&lt;T, X&gt; Freeze for <a class=\"struct\" href=\"crypto/blockmodes/struct.CbcDecryptor.html\" title=\"struct crypto::blockmodes::CbcDecryptor\">CbcDecryptor</a>&lt;T, X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["crypto::blockmodes::CbcDecryptor"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"crypto/blockmodes/struct.CtrMode.html\" title=\"struct crypto::blockmodes::CtrMode\">CtrMode</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["crypto::blockmodes::CtrMode"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"crypto/blockmodes/struct.CtrModeX8.html\" title=\"struct crypto::blockmodes::CtrModeX8\">CtrModeX8</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["crypto::blockmodes::CtrModeX8"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/blowfish/struct.Blowfish.html\" title=\"struct crypto::blowfish::Blowfish\">Blowfish</a>","synthetic":true,"types":["crypto::blowfish::Blowfish"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crypto/buffer/enum.BufferResult.html\" title=\"enum crypto::buffer::BufferResult\">BufferResult</a>","synthetic":true,"types":["crypto::buffer::BufferResult"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"crypto/buffer/struct.RefReadBuffer.html\" title=\"struct crypto::buffer::RefReadBuffer\">RefReadBuffer</a>&lt;'a&gt;","synthetic":true,"types":["crypto::buffer::RefReadBuffer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/buffer/struct.OwnedReadBuffer.html\" title=\"struct crypto::buffer::OwnedReadBuffer\">OwnedReadBuffer</a>","synthetic":true,"types":["crypto::buffer::OwnedReadBuffer"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"crypto/buffer/struct.RefWriteBuffer.html\" title=\"struct crypto::buffer::RefWriteBuffer\">RefWriteBuffer</a>&lt;'a&gt;","synthetic":true,"types":["crypto::buffer::RefWriteBuffer"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"crypto/buffer/struct.BorrowedWriteBuffer.html\" title=\"struct crypto::buffer::BorrowedWriteBuffer\">BorrowedWriteBuffer</a>&lt;'a&gt;","synthetic":true,"types":["crypto::buffer::BorrowedWriteBuffer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/buffer/struct.OwnedWriteBuffer.html\" title=\"struct crypto::buffer::OwnedWriteBuffer\">OwnedWriteBuffer</a>","synthetic":true,"types":["crypto::buffer::OwnedWriteBuffer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/chacha20/struct.ChaCha20.html\" title=\"struct crypto::chacha20::ChaCha20\">ChaCha20</a>","synthetic":true,"types":["crypto::chacha20::ChaCha20"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/chacha20poly1305/struct.ChaCha20Poly1305.html\" title=\"struct crypto::chacha20poly1305::ChaCha20Poly1305\">ChaCha20Poly1305</a>","synthetic":true,"types":["crypto::chacha20poly1305::ChaCha20Poly1305"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/curve25519/struct.Fe.html\" title=\"struct crypto::curve25519::Fe\">Fe</a>","synthetic":true,"types":["crypto::curve25519::Fe"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/curve25519/struct.GeP2.html\" title=\"struct crypto::curve25519::GeP2\">GeP2</a>","synthetic":true,"types":["crypto::curve25519::GeP2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/curve25519/struct.GeP3.html\" title=\"struct crypto::curve25519::GeP3\">GeP3</a>","synthetic":true,"types":["crypto::curve25519::GeP3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/curve25519/struct.GeP1P1.html\" title=\"struct crypto::curve25519::GeP1P1\">GeP1P1</a>","synthetic":true,"types":["crypto::curve25519::GeP1P1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/curve25519/struct.GePrecomp.html\" title=\"struct crypto::curve25519::GePrecomp\">GePrecomp</a>","synthetic":true,"types":["crypto::curve25519::GePrecomp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/curve25519/struct.GeCached.html\" title=\"struct crypto::curve25519::GeCached\">GeCached</a>","synthetic":true,"types":["crypto::curve25519::GeCached"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/fortuna/struct.Fortuna.html\" title=\"struct crypto::fortuna::Fortuna\">Fortuna</a>","synthetic":true,"types":["crypto::fortuna::Fortuna"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/ghash/struct.Ghash.html\" title=\"struct crypto::ghash::Ghash\">Ghash</a>","synthetic":true,"types":["crypto::ghash::Ghash"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/ghash/struct.GhashWithC.html\" title=\"struct crypto::ghash::GhashWithC\">GhashWithC</a>","synthetic":true,"types":["crypto::ghash::GhashWithC"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/hc128/struct.Hc128.html\" title=\"struct crypto::hc128::Hc128\">Hc128</a>","synthetic":true,"types":["crypto::hc128::Hc128"]},{"text":"impl&lt;D&gt; Freeze for <a class=\"struct\" href=\"crypto/hmac/struct.Hmac.html\" title=\"struct crypto::hmac::Hmac\">Hmac</a>&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["crypto::hmac::Hmac"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/mac/struct.MacResult.html\" title=\"struct crypto::mac::MacResult\">MacResult</a>","synthetic":true,"types":["crypto::mac::MacResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/md5/struct.Md5.html\" title=\"struct crypto::md5::Md5\">Md5</a>","synthetic":true,"types":["crypto::md5::Md5"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/poly1305/struct.Poly1305.html\" title=\"struct crypto::poly1305::Poly1305\">Poly1305</a>","synthetic":true,"types":["crypto::poly1305::Poly1305"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/rc4/struct.Rc4.html\" title=\"struct crypto::rc4::Rc4\">Rc4</a>","synthetic":true,"types":["crypto::rc4::Rc4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/ripemd160/struct.Ripemd160.html\" title=\"struct crypto::ripemd160::Ripemd160\">Ripemd160</a>","synthetic":true,"types":["crypto::ripemd160::Ripemd160"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/salsa20/struct.Salsa20.html\" title=\"struct crypto::salsa20::Salsa20\">Salsa20</a>","synthetic":true,"types":["crypto::salsa20::Salsa20"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/scrypt/struct.ScryptParams.html\" title=\"struct crypto::scrypt::ScryptParams\">ScryptParams</a>","synthetic":true,"types":["crypto::scrypt::ScryptParams"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/sha1/struct.Sha1.html\" title=\"struct crypto::sha1::Sha1\">Sha1</a>","synthetic":true,"types":["crypto::sha1::Sha1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/sha2/struct.Sha512.html\" title=\"struct crypto::sha2::Sha512\">Sha512</a>","synthetic":true,"types":["crypto::sha2::Sha512"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/sha2/struct.Sha384.html\" title=\"struct crypto::sha2::Sha384\">Sha384</a>","synthetic":true,"types":["crypto::sha2::Sha384"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/sha2/struct.Sha512Trunc256.html\" title=\"struct crypto::sha2::Sha512Trunc256\">Sha512Trunc256</a>","synthetic":true,"types":["crypto::sha2::Sha512Trunc256"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/sha2/struct.Sha512Trunc224.html\" title=\"struct crypto::sha2::Sha512Trunc224\">Sha512Trunc224</a>","synthetic":true,"types":["crypto::sha2::Sha512Trunc224"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/sha2/struct.Sha256.html\" title=\"struct crypto::sha2::Sha256\">Sha256</a>","synthetic":true,"types":["crypto::sha2::Sha256"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/sha2/struct.Sha224.html\" title=\"struct crypto::sha2::Sha224\">Sha224</a>","synthetic":true,"types":["crypto::sha2::Sha224"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crypto/sha3/enum.Sha3Mode.html\" title=\"enum crypto::sha3::Sha3Mode\">Sha3Mode</a>","synthetic":true,"types":["crypto::sha3::Sha3Mode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/sha3/struct.Sha3.html\" title=\"struct crypto::sha3::Sha3\">Sha3</a>","synthetic":true,"types":["crypto::sha3::Sha3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/sosemanuk/struct.Sosemanuk.html\" title=\"struct crypto::sosemanuk::Sosemanuk\">Sosemanuk</a>","synthetic":true,"types":["crypto::sosemanuk::Sosemanuk"]},{"text":"impl Freeze for <a class=\"enum\" href=\"crypto/symmetriccipher/enum.SymmetricCipherError.html\" title=\"enum crypto::symmetriccipher::SymmetricCipherError\">SymmetricCipherError</a>","synthetic":true,"types":["crypto::symmetriccipher::SymmetricCipherError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/whirlpool/struct.Whirlpool.html\" title=\"struct crypto::whirlpool::Whirlpool\">Whirlpool</a>","synthetic":true,"types":["crypto::whirlpool::Whirlpool"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/aesni/struct.AesNiEncryptor.html\" title=\"struct crypto::aesni::AesNiEncryptor\">AesNiEncryptor</a>","synthetic":true,"types":["crypto::aesni::AesNiEncryptor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crypto/aesni/struct.AesNiDecryptor.html\" title=\"struct crypto::aesni::AesNiDecryptor\">AesNiDecryptor</a>","synthetic":true,"types":["crypto::aesni::AesNiDecryptor"]}];
implementors["crypto_common"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"crypto_common/struct.InvalidLength.html\" title=\"struct crypto_common::InvalidLength\">InvalidLength</a>","synthetic":true,"types":["crypto_common::InvalidLength"]}];
implementors["csv"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"csv/struct.ByteRecord.html\" title=\"struct csv::ByteRecord\">ByteRecord</a>","synthetic":true,"types":["csv::byte_record::ByteRecord"]},{"text":"impl Freeze for <a class=\"struct\" href=\"csv/struct.Position.html\" title=\"struct csv::Position\">Position</a>","synthetic":true,"types":["csv::byte_record::Position"]},{"text":"impl&lt;'r&gt; Freeze for <a class=\"struct\" href=\"csv/struct.ByteRecordIter.html\" title=\"struct csv::ByteRecordIter\">ByteRecordIter</a>&lt;'r&gt;","synthetic":true,"types":["csv::byte_record::ByteRecordIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"csv/struct.DeserializeError.html\" title=\"struct csv::DeserializeError\">DeserializeError</a>","synthetic":true,"types":["csv::deserializer::DeserializeError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"csv/enum.DeserializeErrorKind.html\" title=\"enum csv::DeserializeErrorKind\">DeserializeErrorKind</a>","synthetic":true,"types":["csv::deserializer::DeserializeErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"csv/struct.Error.html\" title=\"struct csv::Error\">Error</a>","synthetic":true,"types":["csv::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"csv/enum.ErrorKind.html\" title=\"enum csv::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["csv::error::ErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"csv/struct.FromUtf8Error.html\" title=\"struct csv::FromUtf8Error\">FromUtf8Error</a>","synthetic":true,"types":["csv::error::FromUtf8Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"csv/struct.Utf8Error.html\" title=\"struct csv::Utf8Error\">Utf8Error</a>","synthetic":true,"types":["csv::error::Utf8Error"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"csv/struct.IntoInnerError.html\" title=\"struct csv::IntoInnerError\">IntoInnerError</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["csv::error::IntoInnerError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"csv/struct.ReaderBuilder.html\" title=\"struct csv::ReaderBuilder\">ReaderBuilder</a>","synthetic":true,"types":["csv::reader::ReaderBuilder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"csv/struct.Reader.html\" title=\"struct csv::Reader\">Reader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["csv::reader::Reader"]},{"text":"impl&lt;R, D&gt; Freeze for <a class=\"struct\" href=\"csv/struct.DeserializeRecordsIntoIter.html\" title=\"struct csv::DeserializeRecordsIntoIter\">DeserializeRecordsIntoIter</a>&lt;R, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["csv::reader::DeserializeRecordsIntoIter"]},{"text":"impl&lt;'r, R, D&gt; Freeze for <a class=\"struct\" href=\"csv/struct.DeserializeRecordsIter.html\" title=\"struct csv::DeserializeRecordsIter\">DeserializeRecordsIter</a>&lt;'r, R, D&gt;","synthetic":true,"types":["csv::reader::DeserializeRecordsIter"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"csv/struct.StringRecordsIntoIter.html\" title=\"struct csv::StringRecordsIntoIter\">StringRecordsIntoIter</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["csv::reader::StringRecordsIntoIter"]},{"text":"impl&lt;'r, R&gt; Freeze for <a class=\"struct\" href=\"csv/struct.StringRecordsIter.html\" title=\"struct csv::StringRecordsIter\">StringRecordsIter</a>&lt;'r, R&gt;","synthetic":true,"types":["csv::reader::StringRecordsIter"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"csv/struct.ByteRecordsIntoIter.html\" title=\"struct csv::ByteRecordsIntoIter\">ByteRecordsIntoIter</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["csv::reader::ByteRecordsIntoIter"]},{"text":"impl&lt;'r, R&gt; Freeze for <a class=\"struct\" href=\"csv/struct.ByteRecordsIter.html\" title=\"struct csv::ByteRecordsIter\">ByteRecordsIter</a>&lt;'r, R&gt;","synthetic":true,"types":["csv::reader::ByteRecordsIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"csv/struct.StringRecord.html\" title=\"struct csv::StringRecord\">StringRecord</a>","synthetic":true,"types":["csv::string_record::StringRecord"]},{"text":"impl&lt;'r&gt; Freeze for <a class=\"struct\" href=\"csv/struct.StringRecordIter.html\" title=\"struct csv::StringRecordIter\">StringRecordIter</a>&lt;'r&gt;","synthetic":true,"types":["csv::string_record::StringRecordIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"csv/struct.WriterBuilder.html\" title=\"struct csv::WriterBuilder\">WriterBuilder</a>","synthetic":true,"types":["csv::writer::WriterBuilder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"csv/struct.Writer.html\" title=\"struct csv::Writer\">Writer</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["csv::writer::Writer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"csv/enum.QuoteStyle.html\" title=\"enum csv::QuoteStyle\">QuoteStyle</a>","synthetic":true,"types":["csv::QuoteStyle"]},{"text":"impl Freeze for <a class=\"enum\" href=\"csv/enum.Terminator.html\" title=\"enum csv::Terminator\">Terminator</a>","synthetic":true,"types":["csv::Terminator"]},{"text":"impl Freeze for <a class=\"enum\" href=\"csv/enum.Trim.html\" title=\"enum csv::Trim\">Trim</a>","synthetic":true,"types":["csv::Trim"]}];
implementors["csv_core"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"csv_core/struct.Reader.html\" title=\"struct csv_core::Reader\">Reader</a>","synthetic":true,"types":["csv_core::reader::Reader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"csv_core/struct.ReaderBuilder.html\" title=\"struct csv_core::ReaderBuilder\">ReaderBuilder</a>","synthetic":true,"types":["csv_core::reader::ReaderBuilder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"csv_core/enum.ReadFieldResult.html\" title=\"enum csv_core::ReadFieldResult\">ReadFieldResult</a>","synthetic":true,"types":["csv_core::reader::ReadFieldResult"]},{"text":"impl Freeze for <a class=\"enum\" href=\"csv_core/enum.ReadFieldNoCopyResult.html\" title=\"enum csv_core::ReadFieldNoCopyResult\">ReadFieldNoCopyResult</a>","synthetic":true,"types":["csv_core::reader::ReadFieldNoCopyResult"]},{"text":"impl Freeze for <a class=\"enum\" href=\"csv_core/enum.ReadRecordResult.html\" title=\"enum csv_core::ReadRecordResult\">ReadRecordResult</a>","synthetic":true,"types":["csv_core::reader::ReadRecordResult"]},{"text":"impl Freeze for <a class=\"enum\" href=\"csv_core/enum.ReadRecordNoCopyResult.html\" title=\"enum csv_core::ReadRecordNoCopyResult\">ReadRecordNoCopyResult</a>","synthetic":true,"types":["csv_core::reader::ReadRecordNoCopyResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"csv_core/struct.WriterBuilder.html\" title=\"struct csv_core::WriterBuilder\">WriterBuilder</a>","synthetic":true,"types":["csv_core::writer::WriterBuilder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"csv_core/enum.WriteResult.html\" title=\"enum csv_core::WriteResult\">WriteResult</a>","synthetic":true,"types":["csv_core::writer::WriteResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"csv_core/struct.Writer.html\" title=\"struct csv_core::Writer\">Writer</a>","synthetic":true,"types":["csv_core::writer::Writer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"csv_core/enum.Terminator.html\" title=\"enum csv_core::Terminator\">Terminator</a>","synthetic":true,"types":["csv_core::Terminator"]},{"text":"impl Freeze for <a class=\"enum\" href=\"csv_core/enum.QuoteStyle.html\" title=\"enum csv_core::QuoteStyle\">QuoteStyle</a>","synthetic":true,"types":["csv_core::QuoteStyle"]}];
implementors["deflate"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"deflate/enum.Compression.html\" title=\"enum deflate::Compression\">Compression</a>","synthetic":true,"types":["deflate::compression_options::Compression"]},{"text":"impl Freeze for <a class=\"enum\" href=\"deflate/enum.SpecialOptions.html\" title=\"enum deflate::SpecialOptions\">SpecialOptions</a>","synthetic":true,"types":["deflate::compression_options::SpecialOptions"]},{"text":"impl Freeze for <a class=\"struct\" href=\"deflate/struct.CompressionOptions.html\" title=\"struct deflate::CompressionOptions\">CompressionOptions</a>","synthetic":true,"types":["deflate::compression_options::CompressionOptions"]},{"text":"impl Freeze for <a class=\"enum\" href=\"deflate/enum.MatchingType.html\" title=\"enum deflate::MatchingType\">MatchingType</a>","synthetic":true,"types":["deflate::lz77::MatchingType"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"deflate/write/struct.DeflateEncoder.html\" title=\"struct deflate::write::DeflateEncoder\">DeflateEncoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["deflate::writer::DeflateEncoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"deflate/write/struct.ZlibEncoder.html\" title=\"struct deflate::write::ZlibEncoder\">ZlibEncoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["deflate::writer::ZlibEncoder"]}];
implementors["digest"] = [{"text":"impl&lt;T, OutSize&gt; Freeze for <a class=\"struct\" href=\"digest/core_api/struct.CtVariableCoreWrapper.html\" title=\"struct digest::core_api::CtVariableCoreWrapper\">CtVariableCoreWrapper</a>&lt;T, OutSize&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["digest::core_api::ct_variable::CtVariableCoreWrapper"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"digest/core_api/struct.RtVariableCoreWrapper.html\" title=\"struct digest::core_api::RtVariableCoreWrapper\">RtVariableCoreWrapper</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as <a class=\"trait\" href=\"digest/core_api/trait.BlockSizeUser.html\" title=\"trait digest::core_api::BlockSizeUser\">BlockSizeUser</a>&gt;::<a class=\"associatedtype\" href=\"digest/core_api/trait.BlockSizeUser.html#associatedtype.BlockSize\" title=\"type digest::core_api::BlockSizeUser::BlockSize\">BlockSize</a> as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.1/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["digest::core_api::rt_variable::RtVariableCoreWrapper"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"digest/core_api/struct.CoreWrapper.html\" title=\"struct digest::core_api::CoreWrapper\">CoreWrapper</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as <a class=\"trait\" href=\"digest/core_api/trait.BlockSizeUser.html\" title=\"trait digest::core_api::BlockSizeUser\">BlockSizeUser</a>&gt;::<a class=\"associatedtype\" href=\"digest/core_api/trait.BlockSizeUser.html#associatedtype.BlockSize\" title=\"type digest::core_api::BlockSizeUser::BlockSize\">BlockSize</a> as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.1/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["digest::core_api::wrapper::CoreWrapper"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"digest/core_api/struct.XofReaderCoreWrapper.html\" title=\"struct digest::core_api::XofReaderCoreWrapper\">XofReaderCoreWrapper</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as <a class=\"trait\" href=\"digest/core_api/trait.BlockSizeUser.html\" title=\"trait digest::core_api::BlockSizeUser\">BlockSizeUser</a>&gt;::<a class=\"associatedtype\" href=\"digest/core_api/trait.BlockSizeUser.html#associatedtype.BlockSize\" title=\"type digest::core_api::BlockSizeUser::BlockSize\">BlockSize</a> as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.1/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["digest::core_api::xof_reader::XofReaderCoreWrapper"]},{"text":"impl Freeze for <a class=\"enum\" href=\"digest/core_api/enum.TruncSide.html\" title=\"enum digest::core_api::TruncSide\">TruncSide</a>","synthetic":true,"types":["digest::core_api::TruncSide"]},{"text":"impl Freeze for <a class=\"struct\" href=\"digest/struct.InvalidOutputSize.html\" title=\"struct digest::InvalidOutputSize\">InvalidOutputSize</a>","synthetic":true,"types":["digest::InvalidOutputSize"]},{"text":"impl Freeze for <a class=\"struct\" href=\"digest/struct.InvalidBufferSize.html\" title=\"struct digest::InvalidBufferSize\">InvalidBufferSize</a>","synthetic":true,"types":["digest::InvalidBufferSize"]}];
implementors["either"] = [{"text":"impl&lt;L, R&gt; Freeze for <a class=\"enum\" href=\"either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["either::Either"]}];
implementors["encoding_rs"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"encoding_rs/mem/enum.Latin1Bidi.html\" title=\"enum encoding_rs::mem::Latin1Bidi\">Latin1Bidi</a>","synthetic":true,"types":["encoding_rs::mem::Latin1Bidi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"encoding_rs/struct.Encoding.html\" title=\"struct encoding_rs::Encoding\">Encoding</a>","synthetic":true,"types":["encoding_rs::Encoding"]},{"text":"impl Freeze for <a class=\"enum\" href=\"encoding_rs/enum.CoderResult.html\" title=\"enum encoding_rs::CoderResult\">CoderResult</a>","synthetic":true,"types":["encoding_rs::CoderResult"]},{"text":"impl Freeze for <a class=\"enum\" href=\"encoding_rs/enum.DecoderResult.html\" title=\"enum encoding_rs::DecoderResult\">DecoderResult</a>","synthetic":true,"types":["encoding_rs::DecoderResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"encoding_rs/struct.Decoder.html\" title=\"struct encoding_rs::Decoder\">Decoder</a>","synthetic":true,"types":["encoding_rs::Decoder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"encoding_rs/enum.EncoderResult.html\" title=\"enum encoding_rs::EncoderResult\">EncoderResult</a>","synthetic":true,"types":["encoding_rs::EncoderResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"encoding_rs/struct.Encoder.html\" title=\"struct encoding_rs::Encoder\">Encoder</a>","synthetic":true,"types":["encoding_rs::Encoder"]}];
implementors["enum_map"] = [{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"enum_map/struct.Iter.html\" title=\"struct enum_map::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["enum_map::iter::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"enum_map/struct.IterMut.html\" title=\"struct enum_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["enum_map::iter::IterMut"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"enum_map/struct.IntoIter.html\" title=\"struct enum_map::IntoIter\">IntoIter</a>&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as <a class=\"trait\" href=\"enum_map/trait.Enum.html\" title=\"trait enum_map::Enum\">Enum</a>&lt;V&gt;&gt;::<a class=\"associatedtype\" href=\"enum_map/trait.Enum.html#associatedtype.Array\" title=\"type enum_map::Enum::Array\">Array</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["enum_map::iter::IntoIter"]},{"text":"impl&lt;'a, V&gt; Freeze for <a class=\"struct\" href=\"enum_map/struct.Values.html\" title=\"struct enum_map::Values\">Values</a>&lt;'a, V&gt;","synthetic":true,"types":["enum_map::iter::Values"]},{"text":"impl&lt;'a, V&gt; Freeze for <a class=\"struct\" href=\"enum_map/struct.ValuesMut.html\" title=\"struct enum_map::ValuesMut\">ValuesMut</a>&lt;'a, V&gt;","synthetic":true,"types":["enum_map::iter::ValuesMut"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"enum_map/struct.EnumMap.html\" title=\"struct enum_map::EnumMap\">EnumMap</a>&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;K as <a class=\"trait\" href=\"enum_map/trait.Enum.html\" title=\"trait enum_map::Enum\">Enum</a>&lt;V&gt;&gt;::<a class=\"associatedtype\" href=\"enum_map/trait.Enum.html#associatedtype.Array\" title=\"type enum_map::Enum::Array\">Array</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["enum_map::EnumMap"]}];
implementors["exr"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"exr/math/struct.Vec2.html\" title=\"struct exr::math::Vec2\">Vec2</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::math::Vec2"]},{"text":"impl Freeze for <a class=\"enum\" href=\"exr/math/enum.RoundingMode.html\" title=\"enum exr::math::RoundingMode\">RoundingMode</a>","synthetic":true,"types":["exr::math::RoundingMode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"exr/compression/enum.Compression.html\" title=\"enum exr::compression::Compression\">Compression</a>","synthetic":true,"types":["exr::compression::Compression"]},{"text":"impl Freeze for <a class=\"enum\" href=\"exr/meta/attribute/enum.AttributeValue.html\" title=\"enum exr::meta::attribute::AttributeValue\">AttributeValue</a>","synthetic":true,"types":["exr::meta::attribute::AttributeValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/meta/attribute/struct.Text.html\" title=\"struct exr::meta::attribute::Text\">Text</a>","synthetic":true,"types":["exr::meta::attribute::Text"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/meta/attribute/struct.TimeCode.html\" title=\"struct exr::meta::attribute::TimeCode\">TimeCode</a>","synthetic":true,"types":["exr::meta::attribute::TimeCode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"exr/meta/attribute/enum.BlockType.html\" title=\"enum exr::meta::attribute::BlockType\">BlockType</a>","synthetic":true,"types":["exr::meta::attribute::BlockType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/meta/attribute/struct.IntegerBounds.html\" title=\"struct exr::meta::attribute::IntegerBounds\">IntegerBounds</a>","synthetic":true,"types":["exr::meta::attribute::IntegerBounds"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/meta/attribute/struct.FloatRect.html\" title=\"struct exr::meta::attribute::FloatRect\">FloatRect</a>","synthetic":true,"types":["exr::meta::attribute::FloatRect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/meta/attribute/struct.ChannelList.html\" title=\"struct exr::meta::attribute::ChannelList\">ChannelList</a>","synthetic":true,"types":["exr::meta::attribute::ChannelList"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/meta/attribute/struct.ChannelDescription.html\" title=\"struct exr::meta::attribute::ChannelDescription\">ChannelDescription</a>","synthetic":true,"types":["exr::meta::attribute::ChannelDescription"]},{"text":"impl Freeze for <a class=\"enum\" href=\"exr/meta/attribute/enum.SampleType.html\" title=\"enum exr::meta::attribute::SampleType\">SampleType</a>","synthetic":true,"types":["exr::meta::attribute::SampleType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/meta/attribute/struct.Chromaticities.html\" title=\"struct exr::meta::attribute::Chromaticities\">Chromaticities</a>","synthetic":true,"types":["exr::meta::attribute::Chromaticities"]},{"text":"impl Freeze for <a class=\"enum\" href=\"exr/meta/attribute/enum.EnvironmentMap.html\" title=\"enum exr::meta::attribute::EnvironmentMap\">EnvironmentMap</a>","synthetic":true,"types":["exr::meta::attribute::EnvironmentMap"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/meta/attribute/struct.KeyCode.html\" title=\"struct exr::meta::attribute::KeyCode\">KeyCode</a>","synthetic":true,"types":["exr::meta::attribute::KeyCode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"exr/meta/attribute/enum.LineOrder.html\" title=\"enum exr::meta::attribute::LineOrder\">LineOrder</a>","synthetic":true,"types":["exr::meta::attribute::LineOrder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/meta/attribute/struct.Preview.html\" title=\"struct exr::meta::attribute::Preview\">Preview</a>","synthetic":true,"types":["exr::meta::attribute::Preview"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/meta/attribute/struct.TileDescription.html\" title=\"struct exr::meta::attribute::TileDescription\">TileDescription</a>","synthetic":true,"types":["exr::meta::attribute::TileDescription"]},{"text":"impl Freeze for <a class=\"enum\" href=\"exr/meta/attribute/enum.LevelMode.html\" title=\"enum exr::meta::attribute::LevelMode\">LevelMode</a>","synthetic":true,"types":["exr::meta::attribute::LevelMode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/meta/header/struct.Header.html\" title=\"struct exr::meta::header::Header\">Header</a>","synthetic":true,"types":["exr::meta::header::Header"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/meta/header/struct.ImageAttributes.html\" title=\"struct exr::meta::header::ImageAttributes\">ImageAttributes</a>","synthetic":true,"types":["exr::meta::header::ImageAttributes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/meta/header/struct.LayerAttributes.html\" title=\"struct exr::meta::header::LayerAttributes\">LayerAttributes</a>","synthetic":true,"types":["exr::meta::header::LayerAttributes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/meta/struct.MetaData.html\" title=\"struct exr::meta::MetaData\">MetaData</a>","synthetic":true,"types":["exr::meta::MetaData"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/meta/struct.Requirements.html\" title=\"struct exr::meta::Requirements\">Requirements</a>","synthetic":true,"types":["exr::meta::Requirements"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/meta/struct.TileIndices.html\" title=\"struct exr::meta::TileIndices\">TileIndices</a>","synthetic":true,"types":["exr::meta::TileIndices"]},{"text":"impl Freeze for <a class=\"enum\" href=\"exr/meta/enum.BlockDescription.html\" title=\"enum exr::meta::BlockDescription\">BlockDescription</a>","synthetic":true,"types":["exr::meta::BlockDescription"]},{"text":"impl&lt;OnProgress, ReadLayers&gt; Freeze for <a class=\"struct\" href=\"exr/image/read/image/struct.ReadImage.html\" title=\"struct exr::image::read::image::ReadImage\">ReadImage</a>&lt;OnProgress, ReadLayers&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;OnProgress: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;ReadLayers: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::read::image::ReadImage"]},{"text":"impl&lt;L&gt; Freeze for <a class=\"struct\" href=\"exr/image/read/image/struct.ImageWithAttributesReader.html\" title=\"struct exr::image::read::image::ImageWithAttributesReader\">ImageWithAttributesReader</a>&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::read::image::ImageWithAttributesReader"]},{"text":"impl&lt;ReadChannels&gt; Freeze for <a class=\"struct\" href=\"exr/image/read/layers/struct.ReadAllLayers.html\" title=\"struct exr::image::read::layers::ReadAllLayers\">ReadAllLayers</a>&lt;ReadChannels&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ReadChannels: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::read::layers::ReadAllLayers"]},{"text":"impl&lt;ReadChannels&gt; Freeze for <a class=\"struct\" href=\"exr/image/read/layers/struct.ReadFirstValidLayer.html\" title=\"struct exr::image::read::layers::ReadFirstValidLayer\">ReadFirstValidLayer</a>&lt;ReadChannels&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ReadChannels: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::read::layers::ReadFirstValidLayer"]},{"text":"impl&lt;ChannelsReader&gt; Freeze for <a class=\"struct\" href=\"exr/image/read/layers/struct.AllLayersReader.html\" title=\"struct exr::image::read::layers::AllLayersReader\">AllLayersReader</a>&lt;ChannelsReader&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ChannelsReader: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::read::layers::AllLayersReader"]},{"text":"impl&lt;ChannelsReader&gt; Freeze for <a class=\"struct\" href=\"exr/image/read/layers/struct.FirstValidLayerReader.html\" title=\"struct exr::image::read::layers::FirstValidLayerReader\">FirstValidLayerReader</a>&lt;ChannelsReader&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ChannelsReader: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::read::layers::FirstValidLayerReader"]},{"text":"impl&lt;ChannelsReader&gt; Freeze for <a class=\"struct\" href=\"exr/image/read/layers/struct.LayerReader.html\" title=\"struct exr::image::read::layers::LayerReader\">LayerReader</a>&lt;ChannelsReader&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ChannelsReader: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::read::layers::LayerReader"]},{"text":"impl&lt;ReadSamples&gt; Freeze for <a class=\"struct\" href=\"exr/image/read/any_channels/struct.ReadAnyChannels.html\" title=\"struct exr::image::read::any_channels::ReadAnyChannels\">ReadAnyChannels</a>&lt;ReadSamples&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ReadSamples: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::read::any_channels::ReadAnyChannels"]},{"text":"impl&lt;SamplesReader&gt; Freeze for <a class=\"struct\" href=\"exr/image/read/any_channels/struct.AnyChannelsReader.html\" title=\"struct exr::image::read::any_channels::AnyChannelsReader\">AnyChannelsReader</a>&lt;SamplesReader&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;SamplesReader: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::read::any_channels::AnyChannelsReader"]},{"text":"impl&lt;SamplesReader&gt; Freeze for <a class=\"struct\" href=\"exr/image/read/any_channels/struct.AnyChannelReader.html\" title=\"struct exr::image::read::any_channels::AnyChannelReader\">AnyChannelReader</a>&lt;SamplesReader&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;SamplesReader: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::read::any_channels::AnyChannelReader"]},{"text":"impl&lt;DeepOrFlatSamples&gt; Freeze for <a class=\"struct\" href=\"exr/image/read/levels/struct.ReadLargestLevel.html\" title=\"struct exr::image::read::levels::ReadLargestLevel\">ReadLargestLevel</a>&lt;DeepOrFlatSamples&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DeepOrFlatSamples: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::read::levels::ReadLargestLevel"]},{"text":"impl&lt;DeepOrFlatSamples&gt; Freeze for <a class=\"struct\" href=\"exr/image/read/levels/struct.ReadAllLevels.html\" title=\"struct exr::image::read::levels::ReadAllLevels\">ReadAllLevels</a>&lt;DeepOrFlatSamples&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DeepOrFlatSamples: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::read::levels::ReadAllLevels"]},{"text":"impl&lt;SamplesReader&gt; Freeze for <a class=\"struct\" href=\"exr/image/read/levels/struct.AllLevelsReader.html\" title=\"struct exr::image::read::levels::AllLevelsReader\">AllLevelsReader</a>&lt;SamplesReader&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;SamplesReader: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::read::levels::AllLevelsReader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/image/read/samples/struct.ReadFlatSamples.html\" title=\"struct exr::image::read::samples::ReadFlatSamples\">ReadFlatSamples</a>","synthetic":true,"types":["exr::image::read::samples::ReadFlatSamples"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/image/read/samples/struct.FlatSamplesReader.html\" title=\"struct exr::image::read::samples::FlatSamplesReader\">FlatSamplesReader</a>","synthetic":true,"types":["exr::image::read::samples::FlatSamplesReader"]},{"text":"impl&lt;ReadChannels, Sample&gt; Freeze for <a class=\"struct\" href=\"exr/image/read/specific_channels/struct.ReadOptionalChannel.html\" title=\"struct exr::image::read::specific_channels::ReadOptionalChannel\">ReadOptionalChannel</a>&lt;ReadChannels, Sample&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ReadChannels: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Sample: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::read::specific_channels::ReadOptionalChannel"]},{"text":"impl&lt;ReadChannels, Sample&gt; Freeze for <a class=\"struct\" href=\"exr/image/read/specific_channels/struct.ReadRequiredChannel.html\" title=\"struct exr::image::read::specific_channels::ReadRequiredChannel\">ReadRequiredChannel</a>&lt;ReadChannels, Sample&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ReadChannels: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::read::specific_channels::ReadRequiredChannel"]},{"text":"impl&lt;ReadChannels, Pixel, PixelStorage, CreatePixels, SetPixel&gt; Freeze for <a class=\"struct\" href=\"exr/image/read/specific_channels/struct.CollectPixels.html\" title=\"struct exr::image::read::specific_channels::CollectPixels\">CollectPixels</a>&lt;ReadChannels, Pixel, PixelStorage, CreatePixels, SetPixel&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;CreatePixels: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;ReadChannels: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;SetPixel: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::read::specific_channels::CollectPixels"]},{"text":"impl&lt;PixelStorage, SetPixel, PixelReader, Pixel&gt; Freeze for <a class=\"struct\" href=\"exr/image/read/specific_channels/struct.SpecificChannelsReader.html\" title=\"struct exr::image::read::specific_channels::SpecificChannelsReader\">SpecificChannelsReader</a>&lt;PixelStorage, SetPixel, PixelReader, Pixel&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PixelReader: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;PixelStorage: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;SetPixel: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::read::specific_channels::SpecificChannelsReader"]},{"text":"impl&lt;Sample&gt; Freeze for <a class=\"struct\" href=\"exr/image/read/specific_channels/struct.SampleReader.html\" title=\"struct exr::image::read::specific_channels::SampleReader\">SampleReader</a>&lt;Sample&gt;","synthetic":true,"types":["exr::image::read::specific_channels::SampleReader"]},{"text":"impl&lt;DefaultSample&gt; Freeze for <a class=\"struct\" href=\"exr/image/read/specific_channels/struct.OptionalSampleReader.html\" title=\"struct exr::image::read::specific_channels::OptionalSampleReader\">OptionalSampleReader</a>&lt;DefaultSample&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultSample: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::read::specific_channels::OptionalSampleReader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/image/read/struct.ReadBuilder.html\" title=\"struct exr::image::read::ReadBuilder\">ReadBuilder</a>","synthetic":true,"types":["exr::image::read::ReadBuilder"]},{"text":"impl&lt;ChannelsWriter&gt; Freeze for <a class=\"struct\" href=\"exr/image/write/layers/struct.AllLayersWriter.html\" title=\"struct exr::image::write::layers::AllLayersWriter\">AllLayersWriter</a>&lt;ChannelsWriter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ChannelsWriter: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::write::layers::AllLayersWriter"]},{"text":"impl&lt;ChannelsWriter&gt; Freeze for <a class=\"struct\" href=\"exr/image/write/layers/struct.LayerWriter.html\" title=\"struct exr::image::write::layers::LayerWriter\">LayerWriter</a>&lt;ChannelsWriter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ChannelsWriter: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::write::layers::LayerWriter"]},{"text":"impl&lt;'samples&gt; Freeze for <a class=\"struct\" href=\"exr/image/write/samples/struct.FlatSamplesWriter.html\" title=\"struct exr::image::write::samples::FlatSamplesWriter\">FlatSamplesWriter</a>&lt;'samples&gt;","synthetic":true,"types":["exr::image::write::samples::FlatSamplesWriter"]},{"text":"impl&lt;SamplesWriter&gt; Freeze for <a class=\"struct\" href=\"exr/image/write/samples/struct.LevelsWriter.html\" title=\"struct exr::image::write::samples::LevelsWriter\">LevelsWriter</a>&lt;SamplesWriter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;SamplesWriter: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::write::samples::LevelsWriter"]},{"text":"impl&lt;SamplesWriter&gt; Freeze for <a class=\"struct\" href=\"exr/image/write/channels/struct.AnyChannelsWriter.html\" title=\"struct exr::image::write::channels::AnyChannelsWriter\">AnyChannelsWriter</a>&lt;SamplesWriter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;SamplesWriter: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::write::channels::AnyChannelsWriter"]},{"text":"impl&lt;'channels, PixelWriter, Storage, Channels&gt; Freeze for <a class=\"struct\" href=\"exr/image/write/channels/struct.SpecificChannelsWriter.html\" title=\"struct exr::image::write::channels::SpecificChannelsWriter\">SpecificChannelsWriter</a>&lt;'channels, PixelWriter, Storage, Channels&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PixelWriter: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::write::channels::SpecificChannelsWriter"]},{"text":"impl&lt;Sample&gt; Freeze for <a class=\"struct\" href=\"exr/image/write/channels/struct.SampleWriter.html\" title=\"struct exr::image::write::channels::SampleWriter\">SampleWriter</a>&lt;Sample&gt;","synthetic":true,"types":["exr::image::write::channels::SampleWriter"]},{"text":"impl&lt;'img, Layers, OnProgress&gt; Freeze for <a class=\"struct\" href=\"exr/image/write/struct.WriteImageWithOptions.html\" title=\"struct exr::image::write::WriteImageWithOptions\">WriteImageWithOptions</a>&lt;'img, Layers, OnProgress&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;OnProgress: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::write::WriteImageWithOptions"]},{"text":"impl&lt;Cropped, Old&gt; Freeze for <a class=\"enum\" href=\"exr/image/crop/enum.CropResult.html\" title=\"enum exr::image::crop::CropResult\">CropResult</a>&lt;Cropped, Old&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Cropped: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Old: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::crop::CropResult"]},{"text":"impl&lt;Channels&gt; Freeze for <a class=\"struct\" href=\"exr/image/crop/struct.CroppedChannels.html\" title=\"struct exr::image::crop::CroppedChannels\">CroppedChannels</a>&lt;Channels&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Channels: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::crop::CroppedChannels"]},{"text":"impl&lt;ChannelsWriter&gt; Freeze for <a class=\"struct\" href=\"exr/image/crop/struct.CroppedWriter.html\" title=\"struct exr::image::crop::CroppedWriter\">CroppedWriter</a>&lt;ChannelsWriter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ChannelsWriter: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::crop::CroppedWriter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"exr/image/pixel_vec/struct.PixelVec.html\" title=\"struct exr::image::pixel_vec::PixelVec\">PixelVec</a>&lt;T&gt;","synthetic":true,"types":["exr::image::pixel_vec::PixelVec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a>","synthetic":true,"types":["exr::image::recursive::NoneMore"]},{"text":"impl&lt;Inner, Value&gt; Freeze for <a class=\"struct\" href=\"exr/image/recursive/struct.Recursive.html\" title=\"struct exr::image::recursive::Recursive\">Recursive</a>&lt;Inner, Value&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Inner: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Value: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::recursive::Recursive"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/image/validate_results/struct.ValidationOptions.html\" title=\"struct exr::image::validate_results::ValidationOptions\">ValidationOptions</a>","synthetic":true,"types":["exr::image::validate_results::ValidationOptions"]},{"text":"impl&lt;Layers&gt; Freeze for <a class=\"struct\" href=\"exr/image/struct.Image.html\" title=\"struct exr::image::Image\">Image</a>&lt;Layers&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Layers: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::Image"]},{"text":"impl&lt;Channels&gt; Freeze for <a class=\"struct\" href=\"exr/image/struct.Layer.html\" title=\"struct exr::image::Layer\">Layer</a>&lt;Channels&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Channels: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::Layer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/image/struct.Encoding.html\" title=\"struct exr::image::Encoding\">Encoding</a>","synthetic":true,"types":["exr::image::Encoding"]},{"text":"impl Freeze for <a class=\"enum\" href=\"exr/image/enum.Blocks.html\" title=\"enum exr::image::Blocks\">Blocks</a>","synthetic":true,"types":["exr::image::Blocks"]},{"text":"impl&lt;Pixels, ChannelsDescription&gt; Freeze for <a class=\"struct\" href=\"exr/image/struct.SpecificChannels.html\" title=\"struct exr::image::SpecificChannels\">SpecificChannels</a>&lt;Pixels, ChannelsDescription&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ChannelsDescription: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Pixels: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::SpecificChannels"]},{"text":"impl&lt;Samples&gt; Freeze for <a class=\"struct\" href=\"exr/image/struct.AnyChannels.html\" title=\"struct exr::image::AnyChannels\">AnyChannels</a>&lt;Samples&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Samples: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::AnyChannels"]},{"text":"impl&lt;Samples&gt; Freeze for <a class=\"struct\" href=\"exr/image/struct.AnyChannel.html\" title=\"struct exr::image::AnyChannel\">AnyChannel</a>&lt;Samples&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Samples: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::AnyChannel"]},{"text":"impl&lt;Samples&gt; Freeze for <a class=\"enum\" href=\"exr/image/enum.Levels.html\" title=\"enum exr::image::Levels\">Levels</a>&lt;Samples&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Samples: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::Levels"]},{"text":"impl&lt;Samples&gt; Freeze for <a class=\"struct\" href=\"exr/image/struct.RipMaps.html\" title=\"struct exr::image::RipMaps\">RipMaps</a>&lt;Samples&gt;","synthetic":true,"types":["exr::image::RipMaps"]},{"text":"impl Freeze for <a class=\"enum\" href=\"exr/image/enum.FlatSamples.html\" title=\"enum exr::image::FlatSamples\">FlatSamples</a>","synthetic":true,"types":["exr::image::FlatSamples"]},{"text":"impl&lt;RecursiveChannels, RecursivePixel&gt; Freeze for <a class=\"struct\" href=\"exr/image/struct.SpecificChannelsBuilder.html\" title=\"struct exr::image::SpecificChannelsBuilder\">SpecificChannelsBuilder</a>&lt;RecursiveChannels, RecursivePixel&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;RecursiveChannels: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::image::SpecificChannelsBuilder"]},{"text":"impl&lt;'s&gt; Freeze for <a class=\"struct\" href=\"exr/image/struct.FlatSampleIterator.html\" title=\"struct exr::image::FlatSampleIterator\">FlatSampleIterator</a>&lt;'s&gt;","synthetic":true,"types":["exr::image::FlatSampleIterator"]},{"text":"impl Freeze for <a class=\"enum\" href=\"exr/error/enum.Error.html\" title=\"enum exr::error::Error\">Error</a>","synthetic":true,"types":["exr::error::Error"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"exr/block/writer/struct.ChunkWriter.html\" title=\"struct exr::block::writer::ChunkWriter\">ChunkWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::block::writer::ChunkWriter"]},{"text":"impl&lt;'w, W, F&gt; Freeze for <a class=\"struct\" href=\"exr/block/writer/struct.OnProgressChunkWriter.html\" title=\"struct exr::block::writer::OnProgressChunkWriter\">OnProgressChunkWriter</a>&lt;'w, W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::block::writer::OnProgressChunkWriter"]},{"text":"impl&lt;'w, W&gt; Freeze for <a class=\"struct\" href=\"exr/block/writer/struct.SortedBlocksWriter.html\" title=\"struct exr::block::writer::SortedBlocksWriter\">SortedBlocksWriter</a>&lt;'w, W&gt;","synthetic":true,"types":["exr::block::writer::SortedBlocksWriter"]},{"text":"impl&lt;'w, W&gt; Freeze for <a class=\"struct\" href=\"exr/block/writer/struct.SequentialBlocksCompressor.html\" title=\"struct exr::block::writer::SequentialBlocksCompressor\">SequentialBlocksCompressor</a>&lt;'w, W&gt;","synthetic":true,"types":["exr::block::writer::SequentialBlocksCompressor"]},{"text":"impl&lt;'w, W&gt; !Freeze for <a class=\"struct\" href=\"exr/block/writer/struct.ParallelBlocksCompressor.html\" title=\"struct exr::block::writer::ParallelBlocksCompressor\">ParallelBlocksCompressor</a>&lt;'w, W&gt;","synthetic":true,"types":["exr::block::writer::ParallelBlocksCompressor"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"exr/block/reader/struct.Reader.html\" title=\"struct exr::block::reader::Reader\">Reader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::block::reader::Reader"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"exr/block/reader/struct.FilteredChunksReader.html\" title=\"struct exr::block::reader::FilteredChunksReader\">FilteredChunksReader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::block::reader::FilteredChunksReader"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"exr/block/reader/struct.AllChunksReader.html\" title=\"struct exr::block::reader::AllChunksReader\">AllChunksReader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::block::reader::AllChunksReader"]},{"text":"impl&lt;R, F&gt; Freeze for <a class=\"struct\" href=\"exr/block/reader/struct.OnProgressChunksReader.html\" title=\"struct exr::block::reader::OnProgressChunksReader\">OnProgressChunksReader</a>&lt;R, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::block::reader::OnProgressChunksReader"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"exr/block/reader/struct.SequentialBlockDecompressor.html\" title=\"struct exr::block::reader::SequentialBlockDecompressor\">SequentialBlockDecompressor</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::block::reader::SequentialBlockDecompressor"]},{"text":"impl&lt;R&gt; !Freeze for <a class=\"struct\" href=\"exr/block/reader/struct.ParallelBlockDecompressor.html\" title=\"struct exr::block::reader::ParallelBlockDecompressor\">ParallelBlockDecompressor</a>&lt;R&gt;","synthetic":true,"types":["exr::block::reader::ParallelBlockDecompressor"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"exr/block/lines/struct.LineSlice.html\" title=\"struct exr::block::lines::LineSlice\">LineSlice</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["exr::block::lines::LineSlice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/block/lines/struct.LineIndex.html\" title=\"struct exr::block::lines::LineIndex\">LineIndex</a>","synthetic":true,"types":["exr::block::lines::LineIndex"]},{"text":"impl Freeze for <a class=\"enum\" href=\"exr/block/samples/enum.Sample.html\" title=\"enum exr::block::samples::Sample\">Sample</a>","synthetic":true,"types":["exr::block::samples::Sample"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/block/chunk/struct.Chunk.html\" title=\"struct exr::block::chunk::Chunk\">Chunk</a>","synthetic":true,"types":["exr::block::chunk::Chunk"]},{"text":"impl Freeze for <a class=\"enum\" href=\"exr/block/chunk/enum.CompressedBlock.html\" title=\"enum exr::block::chunk::CompressedBlock\">CompressedBlock</a>","synthetic":true,"types":["exr::block::chunk::CompressedBlock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/block/chunk/struct.CompressedScanLineBlock.html\" title=\"struct exr::block::chunk::CompressedScanLineBlock\">CompressedScanLineBlock</a>","synthetic":true,"types":["exr::block::chunk::CompressedScanLineBlock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/block/chunk/struct.CompressedTileBlock.html\" title=\"struct exr::block::chunk::CompressedTileBlock\">CompressedTileBlock</a>","synthetic":true,"types":["exr::block::chunk::CompressedTileBlock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/block/chunk/struct.TileCoordinates.html\" title=\"struct exr::block::chunk::TileCoordinates\">TileCoordinates</a>","synthetic":true,"types":["exr::block::chunk::TileCoordinates"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/block/chunk/struct.CompressedDeepScanLineBlock.html\" title=\"struct exr::block::chunk::CompressedDeepScanLineBlock\">CompressedDeepScanLineBlock</a>","synthetic":true,"types":["exr::block::chunk::CompressedDeepScanLineBlock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/block/chunk/struct.CompressedDeepTileBlock.html\" title=\"struct exr::block::chunk::CompressedDeepTileBlock\">CompressedDeepTileBlock</a>","synthetic":true,"types":["exr::block::chunk::CompressedDeepTileBlock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/block/struct.BlockIndex.html\" title=\"struct exr::block::BlockIndex\">BlockIndex</a>","synthetic":true,"types":["exr::block::BlockIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"exr/block/struct.UncompressedBlock.html\" title=\"struct exr::block::UncompressedBlock\">UncompressedBlock</a>","synthetic":true,"types":["exr::block::UncompressedBlock"]}];
implementors["extendr_api"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"extendr_api/error/enum.Error.html\" title=\"enum extendr_api::error::Error\">Error</a>","synthetic":true,"types":["extendr_api::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"extendr_api/io/enum.PstreamFormat.html\" title=\"enum extendr_api::io::PstreamFormat\">PstreamFormat</a>","synthetic":true,"types":["extendr_api::io::PstreamFormat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/iter/struct.StrIter.html\" title=\"struct extendr_api::iter::StrIter\">StrIter</a>","synthetic":true,"types":["extendr_api::iter::StrIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/metadata/struct.Arg.html\" title=\"struct extendr_api::metadata::Arg\">Arg</a>","synthetic":true,"types":["extendr_api::metadata::Arg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/metadata/struct.Func.html\" title=\"struct extendr_api::metadata::Func\">Func</a>","synthetic":true,"types":["extendr_api::metadata::Func"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/metadata/struct.Impl.html\" title=\"struct extendr_api::metadata::Impl\">Impl</a>","synthetic":true,"types":["extendr_api::metadata::Impl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/metadata/struct.Metadata.html\" title=\"struct extendr_api::metadata::Metadata\">Metadata</a>","synthetic":true,"types":["extendr_api::metadata::Metadata"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/robj/struct.Robj.html\" title=\"struct extendr_api::robj::Robj\">Robj</a>","synthetic":true,"types":["extendr_api::robj::Robj"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/scalar/struct.Rbool.html\" title=\"struct extendr_api::scalar::Rbool\">Rbool</a>","synthetic":true,"types":["extendr_api::scalar::rbool::Rbool"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/scalar/struct.Rfloat.html\" title=\"struct extendr_api::scalar::Rfloat\">Rfloat</a>","synthetic":true,"types":["extendr_api::scalar::rfloat::Rfloat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/scalar/struct.Rint.html\" title=\"struct extendr_api::scalar::Rint\">Rint</a>","synthetic":true,"types":["extendr_api::scalar::rint::Rint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/scalar/struct.c64.html\" title=\"struct extendr_api::scalar::c64\">c64</a>","synthetic":true,"types":["extendr_api::scalar::rcplx_default::c64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/scalar/struct.Rcplx.html\" title=\"struct extendr_api::scalar::Rcplx\">Rcplx</a>","synthetic":true,"types":["extendr_api::scalar::rcplx_default::Rcplx"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/wrapper/altrep/struct.Altrep.html\" title=\"struct extendr_api::wrapper::altrep::Altrep\">Altrep</a>","synthetic":true,"types":["extendr_api::wrapper::altrep::Altrep"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/wrapper/complexes/struct.Complexes.html\" title=\"struct extendr_api::wrapper::complexes::Complexes\">Complexes</a>","synthetic":true,"types":["extendr_api::wrapper::complexes::Complexes"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"extendr_api/wrapper/dataframe/struct.Dataframe.html\" title=\"struct extendr_api::wrapper::dataframe::Dataframe\">Dataframe</a>&lt;T&gt;","synthetic":true,"types":["extendr_api::wrapper::dataframe::Dataframe"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/wrapper/doubles/struct.Doubles.html\" title=\"struct extendr_api::wrapper::doubles::Doubles\">Doubles</a>","synthetic":true,"types":["extendr_api::wrapper::doubles::Doubles"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/wrapper/environment/struct.Environment.html\" title=\"struct extendr_api::wrapper::environment::Environment\">Environment</a>","synthetic":true,"types":["extendr_api::wrapper::environment::Environment"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/wrapper/environment/struct.EnvIter.html\" title=\"struct extendr_api::wrapper::environment::EnvIter\">EnvIter</a>","synthetic":true,"types":["extendr_api::wrapper::environment::EnvIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/wrapper/expr/struct.Expressions.html\" title=\"struct extendr_api::wrapper::expr::Expressions\">Expressions</a>","synthetic":true,"types":["extendr_api::wrapper::expr::Expressions"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"extendr_api/wrapper/externalptr/struct.ExternalPtr.html\" title=\"struct extendr_api::wrapper::externalptr::ExternalPtr\">ExternalPtr</a>&lt;T&gt;","synthetic":true,"types":["extendr_api::wrapper::externalptr::ExternalPtr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/wrapper/function/struct.Function.html\" title=\"struct extendr_api::wrapper::function::Function\">Function</a>","synthetic":true,"types":["extendr_api::wrapper::function::Function"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/wrapper/integers/struct.Integers.html\" title=\"struct extendr_api::wrapper::integers::Integers\">Integers</a>","synthetic":true,"types":["extendr_api::wrapper::integers::Integers"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/wrapper/lang/struct.Language.html\" title=\"struct extendr_api::wrapper::lang::Language\">Language</a>","synthetic":true,"types":["extendr_api::wrapper::lang::Language"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/wrapper/list/struct.List.html\" title=\"struct extendr_api::wrapper::list::List\">List</a>","synthetic":true,"types":["extendr_api::wrapper::list::List"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/wrapper/list/struct.ListIter.html\" title=\"struct extendr_api::wrapper::list::ListIter\">ListIter</a>","synthetic":true,"types":["extendr_api::wrapper::list::ListIter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"extendr_api/wrapper/list/struct.FromList.html\" title=\"struct extendr_api::wrapper::list::FromList\">FromList</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["extendr_api::wrapper::list::FromList"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/wrapper/logicals/struct.Logicals.html\" title=\"struct extendr_api::wrapper::logicals::Logicals\">Logicals</a>","synthetic":true,"types":["extendr_api::wrapper::logicals::Logicals"]},{"text":"impl&lt;T, D&gt; Freeze for <a class=\"struct\" href=\"extendr_api/wrapper/matrix/struct.RArray.html\" title=\"struct extendr_api::wrapper::matrix::RArray\">RArray</a>&lt;T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["extendr_api::wrapper::matrix::RArray"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"extendr_api/wrapper/nullable/enum.Nullable.html\" title=\"enum extendr_api::wrapper::nullable::Nullable\">Nullable</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["extendr_api::wrapper::nullable::Nullable"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/wrapper/pairlist/struct.Pairlist.html\" title=\"struct extendr_api::wrapper::pairlist::Pairlist\">Pairlist</a>","synthetic":true,"types":["extendr_api::wrapper::pairlist::Pairlist"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/wrapper/pairlist/struct.PairlistIter.html\" title=\"struct extendr_api::wrapper::pairlist::PairlistIter\">PairlistIter</a>","synthetic":true,"types":["extendr_api::wrapper::pairlist::PairlistIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/wrapper/primitive/struct.Primitive.html\" title=\"struct extendr_api::wrapper::primitive::Primitive\">Primitive</a>","synthetic":true,"types":["extendr_api::wrapper::primitive::Primitive"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/wrapper/promise/struct.Promise.html\" title=\"struct extendr_api::wrapper::promise::Promise\">Promise</a>","synthetic":true,"types":["extendr_api::wrapper::promise::Promise"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/wrapper/raw/struct.Raw.html\" title=\"struct extendr_api::wrapper::raw::Raw\">Raw</a>","synthetic":true,"types":["extendr_api::wrapper::raw::Raw"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/wrapper/rstr/struct.Rstr.html\" title=\"struct extendr_api::wrapper::rstr::Rstr\">Rstr</a>","synthetic":true,"types":["extendr_api::wrapper::rstr::Rstr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/wrapper/s4/struct.S4.html\" title=\"struct extendr_api::wrapper::s4::S4\">S4</a>","synthetic":true,"types":["extendr_api::wrapper::s4::S4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/wrapper/strings/struct.Strings.html\" title=\"struct extendr_api::wrapper::strings::Strings\">Strings</a>","synthetic":true,"types":["extendr_api::wrapper::strings::Strings"]},{"text":"impl Freeze for <a class=\"struct\" href=\"extendr_api/wrapper/symbol/struct.Symbol.html\" title=\"struct extendr_api::wrapper::symbol::Symbol\">Symbol</a>","synthetic":true,"types":["extendr_api::wrapper::symbol::Symbol"]},{"text":"impl Freeze for <a class=\"enum\" href=\"extendr_api/enum.Rtype.html\" title=\"enum extendr_api::Rtype\">Rtype</a>","synthetic":true,"types":["extendr_api::Rtype"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"extendr_api/enum.Rany.html\" title=\"enum extendr_api::Rany\">Rany</a>&lt;'a&gt;","synthetic":true,"types":["extendr_api::Rany"]}];
implementors["fakeit"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"fakeit/address/struct.Info.html\" title=\"struct fakeit::address::Info\">Info</a>","synthetic":true,"types":["fakeit::address::Info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"fakeit/contact/struct.Info.html\" title=\"struct fakeit::contact::Info\">Info</a>","synthetic":true,"types":["fakeit::contact::Info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"fakeit/currency/struct.Info.html\" title=\"struct fakeit::currency::Info\">Info</a>","synthetic":true,"types":["fakeit::currency::Info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"fakeit/job/struct.Info.html\" title=\"struct fakeit::job::Info\">Info</a>","synthetic":true,"types":["fakeit::job::Info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"fakeit/payment/struct.CreditCard.html\" title=\"struct fakeit::payment::CreditCard\">CreditCard</a>","synthetic":true,"types":["fakeit::payment::CreditCard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"fakeit/person/struct.Info.html\" title=\"struct fakeit::person::Info\">Info</a>","synthetic":true,"types":["fakeit::person::Info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"fakeit/vehicle/struct.Info.html\" title=\"struct fakeit::vehicle::Info\">Info</a>","synthetic":true,"types":["fakeit::vehicle::Info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"fakeit/words/struct.ParagraphOpts.html\" title=\"struct fakeit::words::ParagraphOpts\">ParagraphOpts</a>","synthetic":true,"types":["fakeit::words::ParagraphOpts"]}];
implementors["fancy_regex"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"fancy_regex/enum.Error.html\" title=\"enum fancy_regex::Error\">Error</a>","synthetic":true,"types":["fancy_regex::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"fancy_regex/struct.Expander.html\" title=\"struct fancy_regex::Expander\">Expander</a>","synthetic":true,"types":["fancy_regex::expand::Expander"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"fancy_regex/struct.ReplacerRef.html\" title=\"struct fancy_regex::ReplacerRef\">ReplacerRef</a>&lt;'a, R&gt;","synthetic":true,"types":["fancy_regex::replacer::ReplacerRef"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"fancy_regex/struct.NoExpand.html\" title=\"struct fancy_regex::NoExpand\">NoExpand</a>&lt;'t&gt;","synthetic":true,"types":["fancy_regex::replacer::NoExpand"]},{"text":"impl Freeze for <a class=\"struct\" href=\"fancy_regex/struct.RegexBuilder.html\" title=\"struct fancy_regex::RegexBuilder\">RegexBuilder</a>","synthetic":true,"types":["fancy_regex::RegexBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"fancy_regex/struct.Regex.html\" title=\"struct fancy_regex::Regex\">Regex</a>","synthetic":true,"types":["fancy_regex::Regex"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"fancy_regex/struct.Match.html\" title=\"struct fancy_regex::Match\">Match</a>&lt;'t&gt;","synthetic":true,"types":["fancy_regex::Match"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"fancy_regex/struct.Matches.html\" title=\"struct fancy_regex::Matches\">Matches</a>&lt;'r, 't&gt;","synthetic":true,"types":["fancy_regex::Matches"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"fancy_regex/struct.CaptureMatches.html\" title=\"struct fancy_regex::CaptureMatches\">CaptureMatches</a>&lt;'r, 't&gt;","synthetic":true,"types":["fancy_regex::CaptureMatches"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"fancy_regex/struct.Captures.html\" title=\"struct fancy_regex::Captures\">Captures</a>&lt;'t&gt;","synthetic":true,"types":["fancy_regex::Captures"]},{"text":"impl&lt;'c, 't&gt; Freeze for <a class=\"struct\" href=\"fancy_regex/struct.SubCaptureMatches.html\" title=\"struct fancy_regex::SubCaptureMatches\">SubCaptureMatches</a>&lt;'c, 't&gt;","synthetic":true,"types":["fancy_regex::SubCaptureMatches"]},{"text":"impl Freeze for <a class=\"enum\" href=\"fancy_regex/enum.Expr.html\" title=\"enum fancy_regex::Expr\">Expr</a>","synthetic":true,"types":["fancy_regex::Expr"]},{"text":"impl Freeze for <a class=\"enum\" href=\"fancy_regex/enum.LookAround.html\" title=\"enum fancy_regex::LookAround\">LookAround</a>","synthetic":true,"types":["fancy_regex::LookAround"]},{"text":"impl&lt;'r&gt; Freeze for <a class=\"struct\" href=\"fancy_regex/struct.CaptureNames.html\" title=\"struct fancy_regex::CaptureNames\">CaptureNames</a>&lt;'r&gt;","synthetic":true,"types":["fancy_regex::CaptureNames"]}];
implementors["fixedbitset"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"fixedbitset/struct.FixedBitSet.html\" title=\"struct fixedbitset::FixedBitSet\">FixedBitSet</a>","synthetic":true,"types":["fixedbitset::FixedBitSet"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"fixedbitset/struct.Difference.html\" title=\"struct fixedbitset::Difference\">Difference</a>&lt;'a&gt;","synthetic":true,"types":["fixedbitset::Difference"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"fixedbitset/struct.SymmetricDifference.html\" title=\"struct fixedbitset::SymmetricDifference\">SymmetricDifference</a>&lt;'a&gt;","synthetic":true,"types":["fixedbitset::SymmetricDifference"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"fixedbitset/struct.Intersection.html\" title=\"struct fixedbitset::Intersection\">Intersection</a>&lt;'a&gt;","synthetic":true,"types":["fixedbitset::Intersection"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"fixedbitset/struct.Union.html\" title=\"struct fixedbitset::Union\">Union</a>&lt;'a&gt;","synthetic":true,"types":["fixedbitset::Union"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"fixedbitset/struct.Ones.html\" title=\"struct fixedbitset::Ones\">Ones</a>&lt;'a&gt;","synthetic":true,"types":["fixedbitset::Ones"]}];
implementors["flate2"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"flate2/struct.Crc.html\" title=\"struct flate2::Crc\">Crc</a>","synthetic":true,"types":["flate2::crc::Crc"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/struct.CrcReader.html\" title=\"struct flate2::CrcReader\">CrcReader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::crc::CrcReader"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"flate2/struct.CrcWriter.html\" title=\"struct flate2::CrcWriter\">CrcWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::crc::CrcWriter"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/bufread/struct.DeflateEncoder.html\" title=\"struct flate2::bufread::DeflateEncoder\">DeflateEncoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::deflate::bufread::DeflateEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/bufread/struct.DeflateDecoder.html\" title=\"struct flate2::bufread::DeflateDecoder\">DeflateDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::deflate::bufread::DeflateDecoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/read/struct.DeflateEncoder.html\" title=\"struct flate2::read::DeflateEncoder\">DeflateEncoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::deflate::read::DeflateEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/read/struct.DeflateDecoder.html\" title=\"struct flate2::read::DeflateDecoder\">DeflateDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::deflate::read::DeflateDecoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"flate2/write/struct.DeflateEncoder.html\" title=\"struct flate2::write::DeflateEncoder\">DeflateEncoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::deflate::write::DeflateEncoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"flate2/write/struct.DeflateDecoder.html\" title=\"struct flate2::write::DeflateDecoder\">DeflateDecoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::deflate::write::DeflateDecoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/bufread/struct.GzEncoder.html\" title=\"struct flate2::bufread::GzEncoder\">GzEncoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::gz::bufread::GzEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/bufread/struct.GzDecoder.html\" title=\"struct flate2::bufread::GzDecoder\">GzDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::gz::bufread::GzDecoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/bufread/struct.MultiGzDecoder.html\" title=\"struct flate2::bufread::MultiGzDecoder\">MultiGzDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::gz::bufread::MultiGzDecoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/read/struct.GzEncoder.html\" title=\"struct flate2::read::GzEncoder\">GzEncoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::gz::read::GzEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/read/struct.GzDecoder.html\" title=\"struct flate2::read::GzDecoder\">GzDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::gz::read::GzDecoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/read/struct.MultiGzDecoder.html\" title=\"struct flate2::read::MultiGzDecoder\">MultiGzDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::gz::read::MultiGzDecoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"flate2/write/struct.GzEncoder.html\" title=\"struct flate2::write::GzEncoder\">GzEncoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::gz::write::GzEncoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"flate2/write/struct.GzDecoder.html\" title=\"struct flate2::write::GzDecoder\">GzDecoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::gz::write::GzDecoder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"flate2/struct.GzHeader.html\" title=\"struct flate2::GzHeader\">GzHeader</a>","synthetic":true,"types":["flate2::gz::GzHeader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"flate2/struct.GzBuilder.html\" title=\"struct flate2::GzBuilder\">GzBuilder</a>","synthetic":true,"types":["flate2::gz::GzBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"flate2/struct.Compress.html\" title=\"struct flate2::Compress\">Compress</a>","synthetic":true,"types":["flate2::mem::Compress"]},{"text":"impl Freeze for <a class=\"struct\" href=\"flate2/struct.Decompress.html\" title=\"struct flate2::Decompress\">Decompress</a>","synthetic":true,"types":["flate2::mem::Decompress"]},{"text":"impl Freeze for <a class=\"enum\" href=\"flate2/enum.FlushCompress.html\" title=\"enum flate2::FlushCompress\">FlushCompress</a>","synthetic":true,"types":["flate2::mem::FlushCompress"]},{"text":"impl Freeze for <a class=\"enum\" href=\"flate2/enum.FlushDecompress.html\" title=\"enum flate2::FlushDecompress\">FlushDecompress</a>","synthetic":true,"types":["flate2::mem::FlushDecompress"]},{"text":"impl Freeze for <a class=\"struct\" href=\"flate2/struct.DecompressError.html\" title=\"struct flate2::DecompressError\">DecompressError</a>","synthetic":true,"types":["flate2::mem::DecompressError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"flate2/struct.CompressError.html\" title=\"struct flate2::CompressError\">CompressError</a>","synthetic":true,"types":["flate2::mem::CompressError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"flate2/enum.Status.html\" title=\"enum flate2::Status\">Status</a>","synthetic":true,"types":["flate2::mem::Status"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/bufread/struct.ZlibEncoder.html\" title=\"struct flate2::bufread::ZlibEncoder\">ZlibEncoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::zlib::bufread::ZlibEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/bufread/struct.ZlibDecoder.html\" title=\"struct flate2::bufread::ZlibDecoder\">ZlibDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::zlib::bufread::ZlibDecoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/read/struct.ZlibEncoder.html\" title=\"struct flate2::read::ZlibEncoder\">ZlibEncoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::zlib::read::ZlibEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"flate2/read/struct.ZlibDecoder.html\" title=\"struct flate2::read::ZlibDecoder\">ZlibDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::zlib::read::ZlibDecoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"flate2/write/struct.ZlibEncoder.html\" title=\"struct flate2::write::ZlibEncoder\">ZlibEncoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::zlib::write::ZlibEncoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"flate2/write/struct.ZlibDecoder.html\" title=\"struct flate2::write::ZlibDecoder\">ZlibDecoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["flate2::zlib::write::ZlibDecoder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"flate2/struct.Compression.html\" title=\"struct flate2::Compression\">Compression</a>","synthetic":true,"types":["flate2::Compression"]}];
implementors["flume"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"flume/select/enum.SelectError.html\" title=\"enum flume::select::SelectError\">SelectError</a>","synthetic":true,"types":["flume::select::SelectError"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"flume/select/struct.Selector.html\" title=\"struct flume::select::Selector\">Selector</a>&lt;'a, T&gt;","synthetic":true,"types":["flume::select::Selector"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"flume/async/struct.SendFut.html\" title=\"struct flume::async::SendFut\">SendFut</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["flume::async::SendFut"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"flume/async/struct.SendSink.html\" title=\"struct flume::async::SendSink\">SendSink</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["flume::async::SendSink"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"flume/async/struct.RecvFut.html\" title=\"struct flume::async::RecvFut\">RecvFut</a>&lt;'a, T&gt;","synthetic":true,"types":["flume::async::RecvFut"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"flume/async/struct.RecvStream.html\" title=\"struct flume::async::RecvStream\">RecvStream</a>&lt;'a, T&gt;","synthetic":true,"types":["flume::async::RecvStream"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"flume/struct.SendError.html\" title=\"struct flume::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["flume::SendError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"flume/enum.TrySendError.html\" title=\"enum flume::TrySendError\">TrySendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["flume::TrySendError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"flume/enum.SendTimeoutError.html\" title=\"enum flume::SendTimeoutError\">SendTimeoutError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["flume::SendTimeoutError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"flume/enum.RecvError.html\" title=\"enum flume::RecvError\">RecvError</a>","synthetic":true,"types":["flume::RecvError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"flume/enum.TryRecvError.html\" title=\"enum flume::TryRecvError\">TryRecvError</a>","synthetic":true,"types":["flume::TryRecvError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"flume/enum.RecvTimeoutError.html\" title=\"enum flume::RecvTimeoutError\">RecvTimeoutError</a>","synthetic":true,"types":["flume::RecvTimeoutError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"flume/struct.Sender.html\" title=\"struct flume::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["flume::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"flume/struct.Receiver.html\" title=\"struct flume::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["flume::Receiver"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"flume/struct.Iter.html\" title=\"struct flume::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["flume::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"flume/struct.TryIter.html\" title=\"struct flume::TryIter\">TryIter</a>&lt;'a, T&gt;","synthetic":true,"types":["flume::TryIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"flume/struct.Drain.html\" title=\"struct flume::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["flume::Drain"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"flume/struct.IntoIter.html\" title=\"struct flume::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["flume::IntoIter"]}];
implementors["fnv"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"fnv/struct.FnvHasher.html\" title=\"struct fnv::FnvHasher\">FnvHasher</a>","synthetic":true,"types":["fnv::FnvHasher"]}];
implementors["foreign_types_shared"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"foreign_types_shared/struct.Opaque.html\" title=\"struct foreign_types_shared::Opaque\">Opaque</a>","synthetic":true,"types":["foreign_types_shared::Opaque"]}];
implementors["form_urlencoded"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"form_urlencoded/struct.Parse.html\" title=\"struct form_urlencoded::Parse\">Parse</a>&lt;'a&gt;","synthetic":true,"types":["form_urlencoded::Parse"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"form_urlencoded/struct.ParseIntoOwned.html\" title=\"struct form_urlencoded::ParseIntoOwned\">ParseIntoOwned</a>&lt;'a&gt;","synthetic":true,"types":["form_urlencoded::ParseIntoOwned"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"form_urlencoded/struct.ByteSerialize.html\" title=\"struct form_urlencoded::ByteSerialize\">ByteSerialize</a>&lt;'a&gt;","synthetic":true,"types":["form_urlencoded::ByteSerialize"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"form_urlencoded/struct.Serializer.html\" title=\"struct form_urlencoded::Serializer\">Serializer</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["form_urlencoded::Serializer"]}];
implementors["futures_channel"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/mpsc/struct.Sender.html\" title=\"struct futures_channel::mpsc::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["futures_channel::mpsc::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/mpsc/struct.UnboundedSender.html\" title=\"struct futures_channel::mpsc::UnboundedSender\">UnboundedSender</a>&lt;T&gt;","synthetic":true,"types":["futures_channel::mpsc::UnboundedSender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/mpsc/struct.Receiver.html\" title=\"struct futures_channel::mpsc::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["futures_channel::mpsc::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/mpsc/struct.UnboundedReceiver.html\" title=\"struct futures_channel::mpsc::UnboundedReceiver\">UnboundedReceiver</a>&lt;T&gt;","synthetic":true,"types":["futures_channel::mpsc::UnboundedReceiver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_channel/mpsc/struct.SendError.html\" title=\"struct futures_channel::mpsc::SendError\">SendError</a>","synthetic":true,"types":["futures_channel::mpsc::SendError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/mpsc/struct.TrySendError.html\" title=\"struct futures_channel::mpsc::TrySendError\">TrySendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_channel::mpsc::TrySendError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_channel/mpsc/struct.TryRecvError.html\" title=\"struct futures_channel::mpsc::TryRecvError\">TryRecvError</a>","synthetic":true,"types":["futures_channel::mpsc::TryRecvError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/oneshot/struct.Receiver.html\" title=\"struct futures_channel::oneshot::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["futures_channel::oneshot::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/oneshot/struct.Sender.html\" title=\"struct futures_channel::oneshot::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["futures_channel::oneshot::Sender"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"futures_channel/oneshot/struct.Cancellation.html\" title=\"struct futures_channel::oneshot::Cancellation\">Cancellation</a>&lt;'a, T&gt;","synthetic":true,"types":["futures_channel::oneshot::Cancellation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_channel/oneshot/struct.Canceled.html\" title=\"struct futures_channel::oneshot::Canceled\">Canceled</a>","synthetic":true,"types":["futures_channel::oneshot::Canceled"]}];
implementors["futures_executor"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"futures_executor/struct.LocalPool.html\" title=\"struct futures_executor::LocalPool\">LocalPool</a>","synthetic":true,"types":["futures_executor::local_pool::LocalPool"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_executor/struct.LocalSpawner.html\" title=\"struct futures_executor::LocalSpawner\">LocalSpawner</a>","synthetic":true,"types":["futures_executor::local_pool::LocalSpawner"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures_executor/struct.BlockingStream.html\" title=\"struct futures_executor::BlockingStream\">BlockingStream</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_executor::local_pool::BlockingStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_executor/struct.Enter.html\" title=\"struct futures_executor::Enter\">Enter</a>","synthetic":true,"types":["futures_executor::enter::Enter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_executor/struct.EnterError.html\" title=\"struct futures_executor::EnterError\">EnterError</a>","synthetic":true,"types":["futures_executor::enter::EnterError"]}];
implementors["futures_task"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"futures_task/struct.SpawnError.html\" title=\"struct futures_task::SpawnError\">SpawnError</a>","synthetic":true,"types":["futures_task::spawn::SpawnError"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"futures_task/struct.WakerRef.html\" title=\"struct futures_task::WakerRef\">WakerRef</a>&lt;'a&gt;","synthetic":true,"types":["futures_task::waker_ref::WakerRef"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"futures_task/struct.LocalFutureObj.html\" title=\"struct futures_task::LocalFutureObj\">LocalFutureObj</a>&lt;'a, T&gt;","synthetic":true,"types":["futures_task::future_obj::LocalFutureObj"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"futures_task/struct.FutureObj.html\" title=\"struct futures_task::FutureObj\">FutureObj</a>&lt;'a, T&gt;","synthetic":true,"types":["futures_task::future_obj::FutureObj"]}];
implementors["futures_util"] = [{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Fuse.html\" title=\"struct futures_util::future::Fuse\">Fuse</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::fuse::Fuse"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.CatchUnwind.html\" title=\"struct futures_util::future::CatchUnwind\">CatchUnwind</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::catch_unwind::CatchUnwind"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.RemoteHandle.html\" title=\"struct futures_util::future::RemoteHandle\">RemoteHandle</a>&lt;T&gt;","synthetic":true,"types":["futures_util::future::future::remote_handle::RemoteHandle"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Remote.html\" title=\"struct futures_util::future::Remote\">Remote</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::remote_handle::Remote"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Shared.html\" title=\"struct futures_util::future::Shared\">Shared</a>&lt;Fut&gt;","synthetic":true,"types":["futures_util::future::future::shared::Shared"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.WeakShared.html\" title=\"struct futures_util::future::WeakShared\">WeakShared</a>&lt;Fut&gt;","synthetic":true,"types":["futures_util::future::future::shared::WeakShared"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Flatten.html\" title=\"struct futures_util::future::Flatten\">Flatten</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::Flatten"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.FlattenStream.html\" title=\"struct futures_util::future::FlattenStream\">FlattenStream</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::FlattenStream"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Map.html\" title=\"struct futures_util::future::Map\">Map</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::Map"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.IntoStream.html\" title=\"struct futures_util::future::IntoStream\">IntoStream</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::IntoStream"]},{"text":"impl&lt;Fut, T&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.MapInto.html\" title=\"struct futures_util::future::MapInto\">MapInto</a>&lt;Fut, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::MapInto"]},{"text":"impl&lt;Fut1, Fut2, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Then.html\" title=\"struct futures_util::future::Then\">Then</a>&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::Then"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Inspect.html\" title=\"struct futures_util::future::Inspect\">Inspect</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::Inspect"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.NeverError.html\" title=\"struct futures_util::future::NeverError\">NeverError</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::NeverError"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.UnitError.html\" title=\"struct futures_util::future::UnitError\">UnitError</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::UnitError"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.IntoFuture.html\" title=\"struct futures_util::future::IntoFuture\">IntoFuture</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::into_future::IntoFuture"]},{"text":"impl&lt;Fut1, Fut2&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryFlatten.html\" title=\"struct futures_util::future::TryFlatten\">TryFlatten</a>&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::TryFlatten"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryFlattenStream.html\" title=\"struct futures_util::future::TryFlattenStream\">TryFlattenStream</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::TryFlattenStream"]},{"text":"impl&lt;Fut, Si&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.FlattenSink.html\" title=\"struct futures_util::future::FlattenSink\">FlattenSink</a>&lt;Fut, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::FlattenSink"]},{"text":"impl&lt;Fut1, Fut2, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.AndThen.html\" title=\"struct futures_util::future::AndThen\">AndThen</a>&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::AndThen"]},{"text":"impl&lt;Fut1, Fut2, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.OrElse.html\" title=\"struct futures_util::future::OrElse\">OrElse</a>&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::OrElse"]},{"text":"impl&lt;Fut, E&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.ErrInto.html\" title=\"struct futures_util::future::ErrInto\">ErrInto</a>&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::ErrInto"]},{"text":"impl&lt;Fut, E&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.OkInto.html\" title=\"struct futures_util::future::OkInto\">OkInto</a>&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::OkInto"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.InspectOk.html\" title=\"struct futures_util::future::InspectOk\">InspectOk</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::InspectOk"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.InspectErr.html\" title=\"struct futures_util::future::InspectErr\">InspectErr</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::InspectErr"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.MapOk.html\" title=\"struct futures_util::future::MapOk\">MapOk</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::MapOk"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.MapErr.html\" title=\"struct futures_util::future::MapErr\">MapErr</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::MapErr"]},{"text":"impl&lt;Fut, F, G&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.MapOkOrElse.html\" title=\"struct futures_util::future::MapOkOrElse\">MapOkOrElse</a>&lt;Fut, F, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::MapOkOrElse"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.UnwrapOrElse.html\" title=\"struct futures_util::future::UnwrapOrElse\">UnwrapOrElse</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::UnwrapOrElse"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Lazy.html\" title=\"struct futures_util::future::Lazy\">Lazy</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::lazy::Lazy"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Pending.html\" title=\"struct futures_util::future::Pending\">Pending</a>&lt;T&gt;","synthetic":true,"types":["futures_util::future::pending::Pending"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"enum\" href=\"futures_util/future/enum.MaybeDone.html\" title=\"enum futures_util::future::MaybeDone\">MaybeDone</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::maybe_done::MaybeDone"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"enum\" href=\"futures_util/future/enum.TryMaybeDone.html\" title=\"enum futures_util::future::TryMaybeDone\">TryMaybeDone</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_maybe_done::TryMaybeDone"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.OptionFuture.html\" title=\"struct futures_util::future::OptionFuture\">OptionFuture</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::option::OptionFuture"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.PollFn.html\" title=\"struct futures_util::future::PollFn\">PollFn</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::poll_fn::PollFn"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.PollImmediate.html\" title=\"struct futures_util::future::PollImmediate\">PollImmediate</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::poll_immediate::PollImmediate"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Ready.html\" title=\"struct futures_util::future::Ready\">Ready</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::ready::Ready"]},{"text":"impl&lt;Fut1, Fut2&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Join.html\" title=\"struct futures_util::future::Join\">Join</a>&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::join::Join"]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Join3.html\" title=\"struct futures_util::future::Join3\">Join3</a>&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::join::Join3"]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Join4.html\" title=\"struct futures_util::future::Join4\">Join4</a>&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::join::Join4"]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Join5.html\" title=\"struct futures_util::future::Join5\">Join5</a>&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::join::Join5"]},{"text":"impl&lt;F&gt; !Freeze for <a class=\"struct\" href=\"futures_util/future/struct.JoinAll.html\" title=\"struct futures_util::future::JoinAll\">JoinAll</a>&lt;F&gt;","synthetic":true,"types":["futures_util::future::join_all::JoinAll"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Select.html\" title=\"struct futures_util::future::Select\">Select</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::select::Select"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.SelectAll.html\" title=\"struct futures_util::future::SelectAll\">SelectAll</a>&lt;Fut&gt;","synthetic":true,"types":["futures_util::future::select_all::SelectAll"]},{"text":"impl&lt;Fut1, Fut2&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryJoin.html\" title=\"struct futures_util::future::TryJoin\">TryJoin</a>&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_join::TryJoin"]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryJoin3.html\" title=\"struct futures_util::future::TryJoin3\">TryJoin3</a>&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_join::TryJoin3"]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryJoin4.html\" title=\"struct futures_util::future::TryJoin4\">TryJoin4</a>&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_join::TryJoin4"]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryJoin5.html\" title=\"struct futures_util::future::TryJoin5\">TryJoin5</a>&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_join::TryJoin5"]},{"text":"impl&lt;F&gt; !Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryJoinAll.html\" title=\"struct futures_util::future::TryJoinAll\">TryJoinAll</a>&lt;F&gt;","synthetic":true,"types":["futures_util::future::try_join_all::TryJoinAll"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TrySelect.html\" title=\"struct futures_util::future::TrySelect\">TrySelect</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_select::TrySelect"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.SelectOk.html\" title=\"struct futures_util::future::SelectOk\">SelectOk</a>&lt;Fut&gt;","synthetic":true,"types":["futures_util::future::select_ok::SelectOk"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"enum\" href=\"futures_util/future/enum.Either.html\" title=\"enum futures_util::future::Either\">Either</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::either::Either"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_util/future/struct.AbortHandle.html\" title=\"struct futures_util::future::AbortHandle\">AbortHandle</a>","synthetic":true,"types":["futures_util::abortable::AbortHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_util/future/struct.AbortRegistration.html\" title=\"struct futures_util::future::AbortRegistration\">AbortRegistration</a>","synthetic":true,"types":["futures_util::abortable::AbortRegistration"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Abortable.html\" title=\"struct futures_util::future::Abortable\">Abortable</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::abortable::Abortable"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Aborted.html\" title=\"struct futures_util::future::Aborted\">Aborted</a>","synthetic":true,"types":["futures_util::abortable::Aborted"]},{"text":"impl&lt;St1, St2&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Chain.html\" title=\"struct futures_util::stream::Chain\">Chain</a>&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::chain::Chain"]},{"text":"impl&lt;St, C&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Collect.html\" title=\"struct futures_util::stream::Collect\">Collect</a>&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::collect::Collect"]},{"text":"impl&lt;St, FromA, FromB&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Unzip.html\" title=\"struct futures_util::stream::Unzip\">Unzip</a>&lt;St, FromA, FromB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;FromA: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;FromB: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::unzip::Unzip"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Concat.html\" title=\"struct futures_util::stream::Concat\">Concat</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::concat::Concat"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Cycle.html\" title=\"struct futures_util::stream::Cycle\">Cycle</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::cycle::Cycle"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Enumerate.html\" title=\"struct futures_util::stream::Enumerate\">Enumerate</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::enumerate::Enumerate"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Filter.html\" title=\"struct futures_util::stream::Filter\">Filter</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::filter::Filter"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.FilterMap.html\" title=\"struct futures_util::stream::FilterMap\">FilterMap</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::filter_map::FilterMap"]},{"text":"impl&lt;St, Fut, T, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Fold.html\" title=\"struct futures_util::stream::Fold\">Fold</a>&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::fold::Fold"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.ForEach.html\" title=\"struct futures_util::stream::ForEach\">ForEach</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::for_each::ForEach"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Fuse.html\" title=\"struct futures_util::stream::Fuse\">Fuse</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::fuse::Fuse"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.StreamFuture.html\" title=\"struct futures_util::stream::StreamFuture\">StreamFuture</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::into_future::StreamFuture"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Map.html\" title=\"struct futures_util::stream::Map\">Map</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::map::Map"]},{"text":"impl&lt;'a, St:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Next.html\" title=\"struct futures_util::stream::Next\">Next</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::stream::next::Next"]},{"text":"impl&lt;'a, St:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SelectNextSome.html\" title=\"struct futures_util::stream::SelectNextSome\">SelectNextSome</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::stream::select_next_some::SelectNextSome"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Peekable.html\" title=\"struct futures_util::stream::Peekable\">Peekable</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::peek::Peekable"]},{"text":"impl&lt;'a, St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Peek.html\" title=\"struct futures_util::stream::Peek\">Peek</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::stream::peek::Peek"]},{"text":"impl&lt;'a, St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.PeekMut.html\" title=\"struct futures_util::stream::PeekMut\">PeekMut</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::stream::peek::PeekMut"]},{"text":"impl&lt;'a, St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.NextIf.html\" title=\"struct futures_util::stream::NextIf\">NextIf</a>&lt;'a, St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::peek::NextIf"]},{"text":"impl&lt;'a, St, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.NextIfEq.html\" title=\"struct futures_util::stream::NextIfEq\">NextIfEq</a>&lt;'a, St, T&gt;","synthetic":true,"types":["futures_util::stream::stream::peek::NextIfEq"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Skip.html\" title=\"struct futures_util::stream::Skip\">Skip</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::skip::Skip"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SkipWhile.html\" title=\"struct futures_util::stream::SkipWhile\">SkipWhile</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::skip_while::SkipWhile"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Take.html\" title=\"struct futures_util::stream::Take\">Take</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::take::Take"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TakeWhile.html\" title=\"struct futures_util::stream::TakeWhile\">TakeWhile</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::take_while::TakeWhile"]},{"text":"impl&lt;St, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TakeUntil.html\" title=\"struct futures_util::stream::TakeUntil\">TakeUntil</a>&lt;St, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::take_until::TakeUntil"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Then.html\" title=\"struct futures_util::stream::Then\">Then</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::then::Then"]},{"text":"impl&lt;St1, St2&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Zip.html\" title=\"struct futures_util::stream::Zip\">Zip</a>&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St1 as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St2 as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::zip::Zip"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Chunks.html\" title=\"struct futures_util::stream::Chunks\">Chunks</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::chunks::Chunks"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.ReadyChunks.html\" title=\"struct futures_util::stream::ReadyChunks\">ReadyChunks</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::ready_chunks::ReadyChunks"]},{"text":"impl&lt;St, S, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Scan.html\" title=\"struct futures_util::stream::Scan\">Scan</a>&lt;St, S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::scan::Scan"]},{"text":"impl&lt;St&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.BufferUnordered.html\" title=\"struct futures_util::stream::BufferUnordered\">BufferUnordered</a>&lt;St&gt;","synthetic":true,"types":["futures_util::stream::stream::buffer_unordered::BufferUnordered"]},{"text":"impl&lt;St&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Buffered.html\" title=\"struct futures_util::stream::Buffered\">Buffered</a>&lt;St&gt;","synthetic":true,"types":["futures_util::stream::stream::buffered::Buffered"]},{"text":"impl&lt;St, Fut, F&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.ForEachConcurrent.html\" title=\"struct futures_util::stream::ForEachConcurrent\">ForEachConcurrent</a>&lt;St, Fut, F&gt;","synthetic":true,"types":["futures_util::stream::stream::for_each_concurrent::ForEachConcurrent"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SplitStream.html\" title=\"struct futures_util::stream::SplitStream\">SplitStream</a>&lt;S&gt;","synthetic":true,"types":["futures_util::stream::stream::split::SplitStream"]},{"text":"impl&lt;S, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SplitSink.html\" title=\"struct futures_util::stream::SplitSink\">SplitSink</a>&lt;S, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::split::SplitSink"]},{"text":"impl&lt;T, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.ReuniteError.html\" title=\"struct futures_util::stream::ReuniteError\">ReuniteError</a>&lt;T, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::split::ReuniteError"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.CatchUnwind.html\" title=\"struct futures_util::stream::CatchUnwind\">CatchUnwind</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::catch_unwind::CatchUnwind"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Flatten.html\" title=\"struct futures_util::stream::Flatten\">Flatten</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::Flatten"]},{"text":"impl&lt;St, Si&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Forward.html\" title=\"struct futures_util::stream::Forward\">Forward</a>&lt;St, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::Forward"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Inspect.html\" title=\"struct futures_util::stream::Inspect\">Inspect</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::Inspect"]},{"text":"impl&lt;St, U, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.FlatMap.html\" title=\"struct futures_util::stream::FlatMap\">FlatMap</a>&lt;St, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::FlatMap"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.AndThen.html\" title=\"struct futures_util::stream::AndThen\">AndThen</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::and_then::AndThen"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.IntoStream.html\" title=\"struct futures_util::stream::IntoStream\">IntoStream</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::into_stream::IntoStream"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.OrElse.html\" title=\"struct futures_util::stream::OrElse\">OrElse</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::or_else::OrElse"]},{"text":"impl&lt;'a, St:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryNext.html\" title=\"struct futures_util::stream::TryNext\">TryNext</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::try_stream::try_next::TryNext"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryForEach.html\" title=\"struct futures_util::stream::TryForEach\">TryForEach</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_for_each::TryForEach"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryFilter.html\" title=\"struct futures_util::stream::TryFilter\">TryFilter</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_filter::TryFilter"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryFilterMap.html\" title=\"struct futures_util::stream::TryFilterMap\">TryFilterMap</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_filter_map::TryFilterMap"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryFlatten.html\" title=\"struct futures_util::stream::TryFlatten\">TryFlatten</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_flatten::TryFlatten"]},{"text":"impl&lt;St, C&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryCollect.html\" title=\"struct futures_util::stream::TryCollect\">TryCollect</a>&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_collect::TryCollect"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryConcat.html\" title=\"struct futures_util::stream::TryConcat\">TryConcat</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_concat::TryConcat"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryChunks.html\" title=\"struct futures_util::stream::TryChunks\">TryChunks</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_chunks::TryChunks"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryChunksError.html\" title=\"struct futures_util::stream::TryChunksError\">TryChunksError</a>&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_chunks::TryChunksError"]},{"text":"impl&lt;St, Fut, T, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryFold.html\" title=\"struct futures_util::stream::TryFold\">TryFold</a>&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_fold::TryFold"]},{"text":"impl&lt;T, F, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryUnfold.html\" title=\"struct futures_util::stream::TryUnfold\">TryUnfold</a>&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_unfold::TryUnfold"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TrySkipWhile.html\" title=\"struct futures_util::stream::TrySkipWhile\">TrySkipWhile</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_skip_while::TrySkipWhile"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryTakeWhile.html\" title=\"struct futures_util::stream::TryTakeWhile\">TryTakeWhile</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_take_while::TryTakeWhile"]},{"text":"impl&lt;St&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryBufferUnordered.html\" title=\"struct futures_util::stream::TryBufferUnordered\">TryBufferUnordered</a>&lt;St&gt;","synthetic":true,"types":["futures_util::stream::try_stream::try_buffer_unordered::TryBufferUnordered"]},{"text":"impl&lt;St&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryBuffered.html\" title=\"struct futures_util::stream::TryBuffered\">TryBuffered</a>&lt;St&gt;","synthetic":true,"types":["futures_util::stream::try_stream::try_buffered::TryBuffered"]},{"text":"impl&lt;St, Fut, F&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryForEachConcurrent.html\" title=\"struct futures_util::stream::TryForEachConcurrent\">TryForEachConcurrent</a>&lt;St, Fut, F&gt;","synthetic":true,"types":["futures_util::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.IntoAsyncRead.html\" title=\"struct futures_util::stream::IntoAsyncRead\">IntoAsyncRead</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::into_async_read::IntoAsyncRead"]},{"text":"impl&lt;St, E&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.ErrInto.html\" title=\"struct futures_util::stream::ErrInto\">ErrInto</a>&lt;St, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::ErrInto"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.InspectOk.html\" title=\"struct futures_util::stream::InspectOk\">InspectOk</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::InspectOk"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.InspectErr.html\" title=\"struct futures_util::stream::InspectErr\">InspectErr</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::InspectErr"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.MapOk.html\" title=\"struct futures_util::stream::MapOk\">MapOk</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::MapOk"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.MapErr.html\" title=\"struct futures_util::stream::MapErr\">MapErr</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::MapErr"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Iter.html\" title=\"struct futures_util::stream::Iter\">Iter</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::iter::Iter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Repeat.html\" title=\"struct futures_util::stream::Repeat\">Repeat</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::repeat::Repeat"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.RepeatWith.html\" title=\"struct futures_util::stream::RepeatWith\">RepeatWith</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::repeat_with::RepeatWith"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Empty.html\" title=\"struct futures_util::stream::Empty\">Empty</a>&lt;T&gt;","synthetic":true,"types":["futures_util::stream::empty::Empty"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Once.html\" title=\"struct futures_util::stream::Once\">Once</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::once::Once"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Pending.html\" title=\"struct futures_util::stream::Pending\">Pending</a>&lt;T&gt;","synthetic":true,"types":["futures_util::stream::pending::Pending"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.PollFn.html\" title=\"struct futures_util::stream::PollFn\">PollFn</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::poll_fn::PollFn"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.PollImmediate.html\" title=\"struct futures_util::stream::PollImmediate\">PollImmediate</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::poll_immediate::PollImmediate"]},{"text":"impl&lt;St1, St2&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Select.html\" title=\"struct futures_util::stream::Select\">Select</a>&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::select::Select"]},{"text":"impl Freeze for <a class=\"enum\" href=\"futures_util/stream/enum.PollNext.html\" title=\"enum futures_util::stream::PollNext\">PollNext</a>","synthetic":true,"types":["futures_util::stream::select_with_strategy::PollNext"]},{"text":"impl&lt;St1, St2, Clos, State&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SelectWithStrategy.html\" title=\"struct futures_util::stream::SelectWithStrategy\">SelectWithStrategy</a>&lt;St1, St2, Clos, State&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Clos: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;State: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::select_with_strategy::SelectWithStrategy"]},{"text":"impl&lt;T, F, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Unfold.html\" title=\"struct futures_util::stream::Unfold\">Unfold</a>&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::unfold::Unfold"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.FuturesOrdered.html\" title=\"struct futures_util::stream::FuturesOrdered\">FuturesOrdered</a>&lt;T&gt;","synthetic":true,"types":["futures_util::stream::futures_ordered::FuturesOrdered"]},{"text":"impl&lt;'a, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/futures_unordered/struct.IterPinMut.html\" title=\"struct futures_util::stream::futures_unordered::IterPinMut\">IterPinMut</a>&lt;'a, Fut&gt;","synthetic":true,"types":["futures_util::stream::futures_unordered::iter::IterPinMut"]},{"text":"impl&lt;'a, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/futures_unordered/struct.IterMut.html\" title=\"struct futures_util::stream::futures_unordered::IterMut\">IterMut</a>&lt;'a, Fut&gt;","synthetic":true,"types":["futures_util::stream::futures_unordered::iter::IterMut"]},{"text":"impl&lt;'a, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/futures_unordered/struct.IterPinRef.html\" title=\"struct futures_util::stream::futures_unordered::IterPinRef\">IterPinRef</a>&lt;'a, Fut&gt;","synthetic":true,"types":["futures_util::stream::futures_unordered::iter::IterPinRef"]},{"text":"impl&lt;'a, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/futures_unordered/struct.Iter.html\" title=\"struct futures_util::stream::futures_unordered::Iter\">Iter</a>&lt;'a, Fut&gt;","synthetic":true,"types":["futures_util::stream::futures_unordered::iter::Iter"]},{"text":"impl&lt;Fut&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/futures_unordered/struct.IntoIter.html\" title=\"struct futures_util::stream::futures_unordered::IntoIter\">IntoIter</a>&lt;Fut&gt;","synthetic":true,"types":["futures_util::stream::futures_unordered::iter::IntoIter"]},{"text":"impl&lt;Fut&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.FuturesUnordered.html\" title=\"struct futures_util::stream::FuturesUnordered\">FuturesUnordered</a>&lt;Fut&gt;","synthetic":true,"types":["futures_util::stream::futures_unordered::FuturesUnordered"]},{"text":"impl&lt;St&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SelectAll.html\" title=\"struct futures_util::stream::SelectAll\">SelectAll</a>&lt;St&gt;","synthetic":true,"types":["futures_util::stream::select_all::SelectAll"]},{"text":"impl&lt;'a, St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/select_all/struct.Iter.html\" title=\"struct futures_util::stream::select_all::Iter\">Iter</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::select_all::Iter"]},{"text":"impl&lt;'a, St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/select_all/struct.IterMut.html\" title=\"struct futures_util::stream::select_all::IterMut\">IterMut</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::select_all::IterMut"]},{"text":"impl&lt;St&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/select_all/struct.IntoIter.html\" title=\"struct futures_util::stream::select_all::IntoIter\">IntoIter</a>&lt;St&gt;","synthetic":true,"types":["futures_util::stream::select_all::IntoIter"]},{"text":"impl&lt;'a, Si:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.Close.html\" title=\"struct futures_util::sink::Close\">Close</a>&lt;'a, Si, Item&gt;","synthetic":true,"types":["futures_util::sink::close::Close"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.Drain.html\" title=\"struct futures_util::sink::Drain\">Drain</a>&lt;T&gt;","synthetic":true,"types":["futures_util::sink::drain::Drain"]},{"text":"impl&lt;Si1, Si2&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.Fanout.html\" title=\"struct futures_util::sink::Fanout\">Fanout</a>&lt;Si1, Si2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::sink::fanout::Fanout"]},{"text":"impl&lt;'a, Si:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.Feed.html\" title=\"struct futures_util::sink::Feed\">Feed</a>&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::sink::feed::Feed"]},{"text":"impl&lt;'a, Si:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.Flush.html\" title=\"struct futures_util::sink::Flush\">Flush</a>&lt;'a, Si, Item&gt;","synthetic":true,"types":["futures_util::sink::flush::Flush"]},{"text":"impl&lt;Si, Item, E&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.SinkErrInto.html\" title=\"struct futures_util::sink::SinkErrInto\">SinkErrInto</a>&lt;Si, Item, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::sink::err_into::SinkErrInto"]},{"text":"impl&lt;Si, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.SinkMapErr.html\" title=\"struct futures_util::sink::SinkMapErr\">SinkMapErr</a>&lt;Si, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::sink::map_err::SinkMapErr"]},{"text":"impl&lt;'a, Si:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.Send.html\" title=\"struct futures_util::sink::Send\">Send</a>&lt;'a, Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::sink::send::Send"]},{"text":"impl&lt;'a, Si:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, St:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.SendAll.html\" title=\"struct futures_util::sink::SendAll\">SendAll</a>&lt;'a, Si, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::sink::send_all::SendAll"]},{"text":"impl&lt;T, F, R&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.Unfold.html\" title=\"struct futures_util::sink::Unfold\">Unfold</a>&lt;T, F, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::sink::unfold::Unfold"]},{"text":"impl&lt;Si, Item, U, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.With.html\" title=\"struct futures_util::sink::With\">With</a>&lt;Si, Item, U, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::sink::with::With"]},{"text":"impl&lt;Si, Item, U, St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.WithFlatMap.html\" title=\"struct futures_util::sink::WithFlatMap\">WithFlatMap</a>&lt;Si, Item, U, St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::sink::with_flat_map::WithFlatMap"]},{"text":"impl&lt;Si, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/sink/struct.Buffer.html\" title=\"struct futures_util::sink::Buffer\">Buffer</a>&lt;Si, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::sink::buffer::Buffer"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.AllowStdIo.html\" title=\"struct futures_util::io::AllowStdIo\">AllowStdIo</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::allow_std::AllowStdIo"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.BufReader.html\" title=\"struct futures_util::io::BufReader\">BufReader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::buf_reader::BufReader"]},{"text":"impl&lt;'a, R&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.SeeKRelative.html\" title=\"struct futures_util::io::SeeKRelative\">SeeKRelative</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::buf_reader::SeeKRelative"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.BufWriter.html\" title=\"struct futures_util::io::BufWriter\">BufWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::buf_writer::BufWriter"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.LineWriter.html\" title=\"struct futures_util::io::LineWriter\">LineWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::line_writer::LineWriter"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Chain.html\" title=\"struct futures_util::io::Chain\">Chain</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::chain::Chain"]},{"text":"impl&lt;'a, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Close.html\" title=\"struct futures_util::io::Close\">Close</a>&lt;'a, W&gt;","synthetic":true,"types":["futures_util::io::close::Close"]},{"text":"impl&lt;'a, R, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Copy.html\" title=\"struct futures_util::io::Copy\">Copy</a>&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::copy::Copy"]},{"text":"impl&lt;'a, R, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.CopyBuf.html\" title=\"struct futures_util::io::CopyBuf\">CopyBuf</a>&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::copy_buf::CopyBuf"]},{"text":"impl&lt;'a, R, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.CopyBufAbortable.html\" title=\"struct futures_util::io::CopyBufAbortable\">CopyBufAbortable</a>&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::copy_buf_abortable::CopyBufAbortable"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Cursor.html\" title=\"struct futures_util::io::Cursor\">Cursor</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::cursor::Cursor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Empty.html\" title=\"struct futures_util::io::Empty\">Empty</a>","synthetic":true,"types":["futures_util::io::empty::Empty"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.FillBuf.html\" title=\"struct futures_util::io::FillBuf\">FillBuf</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::fill_buf::FillBuf"]},{"text":"impl&lt;'a, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Flush.html\" title=\"struct futures_util::io::Flush\">Flush</a>&lt;'a, W&gt;","synthetic":true,"types":["futures_util::io::flush::Flush"]},{"text":"impl&lt;W, Item&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.IntoSink.html\" title=\"struct futures_util::io::IntoSink\">IntoSink</a>&lt;W, Item&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::into_sink::IntoSink"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Lines.html\" title=\"struct futures_util::io::Lines\">Lines</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::lines::Lines"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Read.html\" title=\"struct futures_util::io::Read\">Read</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::read::Read"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadVectored.html\" title=\"struct futures_util::io::ReadVectored\">ReadVectored</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::read_vectored::ReadVectored"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadExact.html\" title=\"struct futures_util::io::ReadExact\">ReadExact</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::read_exact::ReadExact"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadLine.html\" title=\"struct futures_util::io::ReadLine\">ReadLine</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::read_line::ReadLine"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadToEnd.html\" title=\"struct futures_util::io::ReadToEnd\">ReadToEnd</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::read_to_end::ReadToEnd"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadToString.html\" title=\"struct futures_util::io::ReadToString\">ReadToString</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::read_to_string::ReadToString"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadUntil.html\" title=\"struct futures_util::io::ReadUntil\">ReadUntil</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::read_until::ReadUntil"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Repeat.html\" title=\"struct futures_util::io::Repeat\">Repeat</a>","synthetic":true,"types":["futures_util::io::repeat::Repeat"]},{"text":"impl&lt;'a, S:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Seek.html\" title=\"struct futures_util::io::Seek\">Seek</a>&lt;'a, S&gt;","synthetic":true,"types":["futures_util::io::seek::Seek"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Sink.html\" title=\"struct futures_util::io::Sink\">Sink</a>","synthetic":true,"types":["futures_util::io::sink::Sink"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadHalf.html\" title=\"struct futures_util::io::ReadHalf\">ReadHalf</a>&lt;T&gt;","synthetic":true,"types":["futures_util::io::split::ReadHalf"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.WriteHalf.html\" title=\"struct futures_util::io::WriteHalf\">WriteHalf</a>&lt;T&gt;","synthetic":true,"types":["futures_util::io::split::WriteHalf"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReuniteError.html\" title=\"struct futures_util::io::ReuniteError\">ReuniteError</a>&lt;T&gt;","synthetic":true,"types":["futures_util::io::split::ReuniteError"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Take.html\" title=\"struct futures_util::io::Take\">Take</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::take::Take"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Window.html\" title=\"struct futures_util::io::Window\">Window</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::window::Window"]},{"text":"impl&lt;'a, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Write.html\" title=\"struct futures_util::io::Write\">Write</a>&lt;'a, W&gt;","synthetic":true,"types":["futures_util::io::write::Write"]},{"text":"impl&lt;'a, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.WriteVectored.html\" title=\"struct futures_util::io::WriteVectored\">WriteVectored</a>&lt;'a, W&gt;","synthetic":true,"types":["futures_util::io::write_vectored::WriteVectored"]},{"text":"impl&lt;'a, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.WriteAll.html\" title=\"struct futures_util::io::WriteAll\">WriteAll</a>&lt;'a, W&gt;","synthetic":true,"types":["futures_util::io::write_all::WriteAll"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"futures_util/lock/struct.Mutex.html\" title=\"struct futures_util::lock::Mutex\">Mutex</a>&lt;T&gt;","synthetic":true,"types":["futures_util::lock::mutex::Mutex"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/lock/struct.OwnedMutexLockFuture.html\" title=\"struct futures_util::lock::OwnedMutexLockFuture\">OwnedMutexLockFuture</a>&lt;T&gt;","synthetic":true,"types":["futures_util::lock::mutex::OwnedMutexLockFuture"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/lock/struct.OwnedMutexGuard.html\" title=\"struct futures_util::lock::OwnedMutexGuard\">OwnedMutexGuard</a>&lt;T&gt;","synthetic":true,"types":["futures_util::lock::mutex::OwnedMutexGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/lock/struct.MutexLockFuture.html\" title=\"struct futures_util::lock::MutexLockFuture\">MutexLockFuture</a>&lt;'a, T&gt;","synthetic":true,"types":["futures_util::lock::mutex::MutexLockFuture"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/lock/struct.MutexGuard.html\" title=\"struct futures_util::lock::MutexGuard\">MutexGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["futures_util::lock::mutex::MutexGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, U:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/lock/struct.MappedMutexGuard.html\" title=\"struct futures_util::lock::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, T, U&gt;","synthetic":true,"types":["futures_util::lock::mutex::MappedMutexGuard"]}];
implementors["fxhash"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"fxhash/struct.FxHasher.html\" title=\"struct fxhash::FxHasher\">FxHasher</a>","synthetic":true,"types":["fxhash::FxHasher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"fxhash/struct.FxHasher64.html\" title=\"struct fxhash::FxHasher64\">FxHasher64</a>","synthetic":true,"types":["fxhash::FxHasher64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"fxhash/struct.FxHasher32.html\" title=\"struct fxhash::FxHasher32\">FxHasher32</a>","synthetic":true,"types":["fxhash::FxHasher32"]}];
implementors["generic_array"] = [{"text":"impl&lt;T, N&gt; Freeze for <a class=\"struct\" href=\"generic_array/iter/struct.GenericArrayIter.html\" title=\"struct generic_array::iter::GenericArrayIter\">GenericArrayIter</a>&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;N as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["generic_array::iter::GenericArrayIter"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["generic_array::GenericArray"]}];
implementors["getrandom"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"getrandom/struct.Error.html\" title=\"struct getrandom::Error\">Error</a>","synthetic":true,"types":["getrandom::error::Error"]}];
implementors["gif"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"gif/enum.DisposalMethod.html\" title=\"enum gif::DisposalMethod\">DisposalMethod</a>","synthetic":true,"types":["gif::common::DisposalMethod"]},{"text":"impl Freeze for <a class=\"enum\" href=\"gif/enum.Block.html\" title=\"enum gif::Block\">Block</a>","synthetic":true,"types":["gif::common::Block"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gif/struct.AnyExtension.html\" title=\"struct gif::AnyExtension\">AnyExtension</a>","synthetic":true,"types":["gif::common::AnyExtension"]},{"text":"impl Freeze for <a class=\"enum\" href=\"gif/enum.Extension.html\" title=\"enum gif::Extension\">Extension</a>","synthetic":true,"types":["gif::common::Extension"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"gif/struct.Frame.html\" title=\"struct gif::Frame\">Frame</a>&lt;'a&gt;","synthetic":true,"types":["gif::common::Frame"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gif/struct.DecodingFormatError.html\" title=\"struct gif::DecodingFormatError\">DecodingFormatError</a>","synthetic":true,"types":["gif::reader::decoder::DecodingFormatError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"gif/enum.DecodingError.html\" title=\"enum gif::DecodingError\">DecodingError</a>","synthetic":true,"types":["gif::reader::decoder::DecodingError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"gif/enum.Extensions.html\" title=\"enum gif::Extensions\">Extensions</a>","synthetic":true,"types":["gif::reader::decoder::Extensions"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"gif/enum.Decoded.html\" title=\"enum gif::Decoded\">Decoded</a>&lt;'a&gt;","synthetic":true,"types":["gif::reader::decoder::Decoded"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gif/struct.StreamingDecoder.html\" title=\"struct gif::StreamingDecoder\">StreamingDecoder</a>","synthetic":true,"types":["gif::reader::decoder::StreamingDecoder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"gif/enum.Version.html\" title=\"enum gif::Version\">Version</a>","synthetic":true,"types":["gif::reader::decoder::Version"]},{"text":"impl Freeze for <a class=\"enum\" href=\"gif/enum.ColorOutput.html\" title=\"enum gif::ColorOutput\">ColorOutput</a>","synthetic":true,"types":["gif::reader::ColorOutput"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gif/struct.MemoryLimit.html\" title=\"struct gif::MemoryLimit\">MemoryLimit</a>","synthetic":true,"types":["gif::reader::MemoryLimit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"gif/struct.DecodeOptions.html\" title=\"struct gif::DecodeOptions\">DecodeOptions</a>","synthetic":true,"types":["gif::reader::DecodeOptions"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"gif/struct.Decoder.html\" title=\"struct gif::Decoder\">Decoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["gif::reader::Decoder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"gif/enum.EncodingError.html\" title=\"enum gif::EncodingError\">EncodingError</a>","synthetic":true,"types":["gif::encoder::EncodingError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"gif/enum.Repeat.html\" title=\"enum gif::Repeat\">Repeat</a>","synthetic":true,"types":["gif::encoder::Repeat"]},{"text":"impl Freeze for <a class=\"enum\" href=\"gif/enum.ExtensionData.html\" title=\"enum gif::ExtensionData\">ExtensionData</a>","synthetic":true,"types":["gif::encoder::ExtensionData"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"gif/struct.Encoder.html\" title=\"struct gif::Encoder\">Encoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["gif::encoder::Encoder"]}];
implementors["h2"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"h2/struct.Error.html\" title=\"struct h2::Error\">Error</a>","synthetic":true,"types":["h2::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.Reason.html\" title=\"struct h2::Reason\">Reason</a>","synthetic":true,"types":["h2::frame::reason::Reason"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"h2/client/struct.SendRequest.html\" title=\"struct h2::client::SendRequest\">SendRequest</a>&lt;B&gt;","synthetic":true,"types":["h2::client::SendRequest"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"h2/client/struct.ReadySendRequest.html\" title=\"struct h2::client::ReadySendRequest\">ReadySendRequest</a>&lt;B&gt;","synthetic":true,"types":["h2::client::ReadySendRequest"]},{"text":"impl&lt;T, B&nbsp;=&nbsp;<a class=\"struct\" href=\"bytes/bytes/struct.Bytes.html\" title=\"struct bytes::bytes::Bytes\">Bytes</a>&gt; !Freeze for <a class=\"struct\" href=\"h2/client/struct.Connection.html\" title=\"struct h2::client::Connection\">Connection</a>&lt;T, B&gt;","synthetic":true,"types":["h2::client::Connection"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/client/struct.ResponseFuture.html\" title=\"struct h2::client::ResponseFuture\">ResponseFuture</a>","synthetic":true,"types":["h2::client::ResponseFuture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/client/struct.PushedResponseFuture.html\" title=\"struct h2::client::PushedResponseFuture\">PushedResponseFuture</a>","synthetic":true,"types":["h2::client::PushedResponseFuture"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"h2/client/struct.PushPromise.html\" title=\"struct h2::client::PushPromise\">PushPromise</a>","synthetic":true,"types":["h2::client::PushPromise"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/client/struct.PushPromises.html\" title=\"struct h2::client::PushPromises\">PushPromises</a>","synthetic":true,"types":["h2::client::PushPromises"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/client/struct.Builder.html\" title=\"struct h2::client::Builder\">Builder</a>","synthetic":true,"types":["h2::client::Builder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"h2/ext/struct.Protocol.html\" title=\"struct h2::ext::Protocol\">Protocol</a>","synthetic":true,"types":["h2::ext::Protocol"]},{"text":"impl&lt;T, B&nbsp;=&nbsp;<a class=\"struct\" href=\"bytes/bytes/struct.Bytes.html\" title=\"struct bytes::bytes::Bytes\">Bytes</a>&gt; !Freeze for <a class=\"struct\" href=\"h2/server/struct.Handshake.html\" title=\"struct h2::server::Handshake\">Handshake</a>&lt;T, B&gt;","synthetic":true,"types":["h2::server::Handshake"]},{"text":"impl&lt;T, B&gt; !Freeze for <a class=\"struct\" href=\"h2/server/struct.Connection.html\" title=\"struct h2::server::Connection\">Connection</a>&lt;T, B&gt;","synthetic":true,"types":["h2::server::Connection"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/server/struct.Builder.html\" title=\"struct h2::server::Builder\">Builder</a>","synthetic":true,"types":["h2::server::Builder"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"h2/server/struct.SendResponse.html\" title=\"struct h2::server::SendResponse\">SendResponse</a>&lt;B&gt;","synthetic":true,"types":["h2::server::SendResponse"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"h2/server/struct.SendPushedResponse.html\" title=\"struct h2::server::SendPushedResponse\">SendPushedResponse</a>&lt;B&gt;","synthetic":true,"types":["h2::server::SendPushedResponse"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"h2/struct.SendStream.html\" title=\"struct h2::SendStream\">SendStream</a>&lt;B&gt;","synthetic":true,"types":["h2::share::SendStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.StreamId.html\" title=\"struct h2::StreamId\">StreamId</a>","synthetic":true,"types":["h2::share::StreamId"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.RecvStream.html\" title=\"struct h2::RecvStream\">RecvStream</a>","synthetic":true,"types":["h2::share::RecvStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.FlowControl.html\" title=\"struct h2::FlowControl\">FlowControl</a>","synthetic":true,"types":["h2::share::FlowControl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.PingPong.html\" title=\"struct h2::PingPong\">PingPong</a>","synthetic":true,"types":["h2::share::PingPong"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.Ping.html\" title=\"struct h2::Ping\">Ping</a>","synthetic":true,"types":["h2::share::Ping"]},{"text":"impl Freeze for <a class=\"struct\" href=\"h2/struct.Pong.html\" title=\"struct h2::Pong\">Pong</a>","synthetic":true,"types":["h2::share::Pong"]}];
implementors["half"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"half/struct.bf16.html\" title=\"struct half::bf16\">bf16</a>","synthetic":true,"types":["half::bfloat::bf16"]},{"text":"impl Freeze for <a class=\"struct\" href=\"half/struct.f16.html\" title=\"struct half::f16\">f16</a>","synthetic":true,"types":["half::binary16::f16"]}];
implementors["hashbrown"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.Bucket.html\" title=\"struct hashbrown::raw::Bucket\">Bucket</a>&lt;T&gt;","synthetic":true,"types":["hashbrown::raw::inner::Bucket"]},{"text":"impl&lt;T, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.RawTable.html\" title=\"struct hashbrown::raw::RawTable\">RawTable</a>&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::raw::inner::RawTable"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.RawIter.html\" title=\"struct hashbrown::raw::RawIter\">RawIter</a>&lt;T&gt;","synthetic":true,"types":["hashbrown::raw::inner::RawIter"]},{"text":"impl&lt;T, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.RawIntoIter.html\" title=\"struct hashbrown::raw::RawIntoIter\">RawIntoIter</a>&lt;T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::raw::inner::RawIntoIter"]},{"text":"impl&lt;'a, T, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.RawDrain.html\" title=\"struct hashbrown::raw::RawDrain\">RawDrain</a>&lt;'a, T, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::raw::inner::RawDrain"]},{"text":"impl&lt;'a, T, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.RawIterHash.html\" title=\"struct hashbrown::raw::RawIterHash\">RawIterHash</a>&lt;'a, T, A&gt;","synthetic":true,"types":["hashbrown::raw::inner::RawIterHash"]},{"text":"impl&lt;K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.HashMap.html\" title=\"struct hashbrown::hash_map::HashMap\">HashMap</a>&lt;K, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::HashMap"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Iter.html\" title=\"struct hashbrown::hash_map::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown::map::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.IterMut.html\" title=\"struct hashbrown::hash_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown::map::IterMut"]},{"text":"impl&lt;K, V, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.IntoIter.html\" title=\"struct hashbrown::hash_map::IntoIter\">IntoIter</a>&lt;K, V, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::IntoIter"]},{"text":"impl&lt;K, V, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.IntoKeys.html\" title=\"struct hashbrown::hash_map::IntoKeys\">IntoKeys</a>&lt;K, V, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::IntoKeys"]},{"text":"impl&lt;K, V, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.IntoValues.html\" title=\"struct hashbrown::hash_map::IntoValues\">IntoValues</a>&lt;K, V, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::IntoValues"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Keys.html\" title=\"struct hashbrown::hash_map::Keys\">Keys</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown::map::Keys"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Values.html\" title=\"struct hashbrown::hash_map::Values\">Values</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown::map::Values"]},{"text":"impl&lt;'a, K, V, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Drain.html\" title=\"struct hashbrown::hash_map::Drain\">Drain</a>&lt;'a, K, V, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::Drain"]},{"text":"impl&lt;'a, K, V, F, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.DrainFilter.html\" title=\"struct hashbrown::hash_map::DrainFilter\">DrainFilter</a>&lt;'a, K, V, F, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::DrainFilter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.ValuesMut.html\" title=\"struct hashbrown::hash_map::ValuesMut\">ValuesMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown::map::ValuesMut"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawEntryBuilderMut.html\" title=\"struct hashbrown::hash_map::RawEntryBuilderMut\">RawEntryBuilderMut</a>&lt;'a, K, V, S, A&gt;","synthetic":true,"types":["hashbrown::map::RawEntryBuilderMut"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"enum\" href=\"hashbrown/hash_map/enum.RawEntryMut.html\" title=\"enum hashbrown::hash_map::RawEntryMut\">RawEntryMut</a>&lt;'a, K, V, S, A&gt;","synthetic":true,"types":["hashbrown::map::RawEntryMut"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawOccupiedEntryMut.html\" title=\"struct hashbrown::hash_map::RawOccupiedEntryMut\">RawOccupiedEntryMut</a>&lt;'a, K, V, S, A&gt;","synthetic":true,"types":["hashbrown::map::RawOccupiedEntryMut"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawVacantEntryMut.html\" title=\"struct hashbrown::hash_map::RawVacantEntryMut\">RawVacantEntryMut</a>&lt;'a, K, V, S, A&gt;","synthetic":true,"types":["hashbrown::map::RawVacantEntryMut"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawEntryBuilder.html\" title=\"struct hashbrown::hash_map::RawEntryBuilder\">RawEntryBuilder</a>&lt;'a, K, V, S, A&gt;","synthetic":true,"types":["hashbrown::map::RawEntryBuilder"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"enum\" href=\"hashbrown/hash_map/enum.Entry.html\" title=\"enum hashbrown::hash_map::Entry\">Entry</a>&lt;'a, K, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::Entry"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.OccupiedEntry.html\" title=\"struct hashbrown::hash_map::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::OccupiedEntry"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.VacantEntry.html\" title=\"struct hashbrown::hash_map::VacantEntry\">VacantEntry</a>&lt;'a, K, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::VacantEntry"]},{"text":"impl&lt;'a, 'b, K, Q:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, V, S, A&gt; Freeze for <a class=\"enum\" href=\"hashbrown/hash_map/enum.EntryRef.html\" title=\"enum hashbrown::hash_map::EntryRef\">EntryRef</a>&lt;'a, 'b, K, Q, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::EntryRef"]},{"text":"impl&lt;'a, 'b, K, Q:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.OccupiedEntryRef.html\" title=\"struct hashbrown::hash_map::OccupiedEntryRef\">OccupiedEntryRef</a>&lt;'a, 'b, K, Q, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::OccupiedEntryRef"]},{"text":"impl&lt;'a, 'b, K, Q:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.VacantEntryRef.html\" title=\"struct hashbrown::hash_map::VacantEntryRef\">VacantEntryRef</a>&lt;'a, 'b, K, Q, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::VacantEntryRef"]},{"text":"impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.OccupiedError.html\" title=\"struct hashbrown::hash_map::OccupiedError\">OccupiedError</a>&lt;'a, K, V, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::map::OccupiedError"]},{"text":"impl&lt;T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.HashSet.html\" title=\"struct hashbrown::hash_set::HashSet\">HashSet</a>&lt;T, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::set::HashSet"]},{"text":"impl&lt;'a, K&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Iter.html\" title=\"struct hashbrown::hash_set::Iter\">Iter</a>&lt;'a, K&gt;","synthetic":true,"types":["hashbrown::set::Iter"]},{"text":"impl&lt;K, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.IntoIter.html\" title=\"struct hashbrown::hash_set::IntoIter\">IntoIter</a>&lt;K, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::set::IntoIter"]},{"text":"impl&lt;'a, K, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Drain.html\" title=\"struct hashbrown::hash_set::Drain\">Drain</a>&lt;'a, K, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::set::Drain"]},{"text":"impl&lt;'a, K, F, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.DrainFilter.html\" title=\"struct hashbrown::hash_set::DrainFilter\">DrainFilter</a>&lt;'a, K, F, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::set::DrainFilter"]},{"text":"impl&lt;'a, T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Intersection.html\" title=\"struct hashbrown::hash_set::Intersection\">Intersection</a>&lt;'a, T, S, A&gt;","synthetic":true,"types":["hashbrown::set::Intersection"]},{"text":"impl&lt;'a, T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Difference.html\" title=\"struct hashbrown::hash_set::Difference\">Difference</a>&lt;'a, T, S, A&gt;","synthetic":true,"types":["hashbrown::set::Difference"]},{"text":"impl&lt;'a, T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.SymmetricDifference.html\" title=\"struct hashbrown::hash_set::SymmetricDifference\">SymmetricDifference</a>&lt;'a, T, S, A&gt;","synthetic":true,"types":["hashbrown::set::SymmetricDifference"]},{"text":"impl&lt;'a, T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Union.html\" title=\"struct hashbrown::hash_set::Union\">Union</a>&lt;'a, T, S, A&gt;","synthetic":true,"types":["hashbrown::set::Union"]},{"text":"impl&lt;'a, T, S, A&gt; Freeze for <a class=\"enum\" href=\"hashbrown/hash_set/enum.Entry.html\" title=\"enum hashbrown::hash_set::Entry\">Entry</a>&lt;'a, T, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::set::Entry"]},{"text":"impl&lt;'a, T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.OccupiedEntry.html\" title=\"struct hashbrown::hash_set::OccupiedEntry\">OccupiedEntry</a>&lt;'a, T, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::set::OccupiedEntry"]},{"text":"impl&lt;'a, T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.VacantEntry.html\" title=\"struct hashbrown::hash_set::VacantEntry\">VacantEntry</a>&lt;'a, T, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown::set::VacantEntry"]},{"text":"impl Freeze for <a class=\"enum\" href=\"hashbrown/enum.TryReserveError.html\" title=\"enum hashbrown::TryReserveError\">TryReserveError</a>","synthetic":true,"types":["hashbrown::TryReserveError"]}];
implementors["hex"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"hex/enum.FromHexError.html\" title=\"enum hex::FromHexError\">FromHexError</a>","synthetic":true,"types":["hex::error::FromHexError"]}];
implementors["http"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.HeaderMap.html\" title=\"struct http::header::HeaderMap\">HeaderMap</a>&lt;T&gt;","synthetic":true,"types":["http::header::map::HeaderMap"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.Iter.html\" title=\"struct http::header::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.IterMut.html\" title=\"struct http::header::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::IterMut"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.IntoIter.html\" title=\"struct http::header::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["http::header::map::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.Keys.html\" title=\"struct http::header::Keys\">Keys</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::Keys"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.Values.html\" title=\"struct http::header::Values\">Values</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::Values"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.ValuesMut.html\" title=\"struct http::header::ValuesMut\">ValuesMut</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::ValuesMut"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.Drain.html\" title=\"struct http::header::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::Drain"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.GetAll.html\" title=\"struct http::header::GetAll\">GetAll</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::GetAll"]},{"text":"impl&lt;'a, T&gt; !Freeze for <a class=\"enum\" href=\"http/header/enum.Entry.html\" title=\"enum http::header::Entry\">Entry</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::Entry"]},{"text":"impl&lt;'a, T&gt; !Freeze for <a class=\"struct\" href=\"http/header/struct.VacantEntry.html\" title=\"struct http::header::VacantEntry\">VacantEntry</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::VacantEntry"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.OccupiedEntry.html\" title=\"struct http::header::OccupiedEntry\">OccupiedEntry</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::OccupiedEntry"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.ValueIter.html\" title=\"struct http::header::ValueIter\">ValueIter</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::ValueIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.ValueIterMut.html\" title=\"struct http::header::ValueIterMut\">ValueIterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["http::header::map::ValueIterMut"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"http/header/struct.ValueDrain.html\" title=\"struct http::header::ValueDrain\">ValueDrain</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["http::header::map::ValueDrain"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/header/struct.HeaderName.html\" title=\"struct http::header::HeaderName\">HeaderName</a>","synthetic":true,"types":["http::header::name::HeaderName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/header/struct.InvalidHeaderName.html\" title=\"struct http::header::InvalidHeaderName\">InvalidHeaderName</a>","synthetic":true,"types":["http::header::name::InvalidHeaderName"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/header/struct.HeaderValue.html\" title=\"struct http::header::HeaderValue\">HeaderValue</a>","synthetic":true,"types":["http::header::value::HeaderValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/header/struct.InvalidHeaderValue.html\" title=\"struct http::header::InvalidHeaderValue\">InvalidHeaderValue</a>","synthetic":true,"types":["http::header::value::InvalidHeaderValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/header/struct.ToStrError.html\" title=\"struct http::header::ToStrError\">ToStrError</a>","synthetic":true,"types":["http::header::value::ToStrError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/method/struct.Method.html\" title=\"struct http::method::Method\">Method</a>","synthetic":true,"types":["http::method::Method"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/method/struct.InvalidMethod.html\" title=\"struct http::method::InvalidMethod\">InvalidMethod</a>","synthetic":true,"types":["http::method::InvalidMethod"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;T&gt;","synthetic":true,"types":["http::request::Request"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/request/struct.Parts.html\" title=\"struct http::request::Parts\">Parts</a>","synthetic":true,"types":["http::request::Parts"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/request/struct.Builder.html\" title=\"struct http::request::Builder\">Builder</a>","synthetic":true,"types":["http::request::Builder"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["http::response::Response"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/response/struct.Parts.html\" title=\"struct http::response::Parts\">Parts</a>","synthetic":true,"types":["http::response::Parts"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/response/struct.Builder.html\" title=\"struct http::response::Builder\">Builder</a>","synthetic":true,"types":["http::response::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/status/struct.StatusCode.html\" title=\"struct http::status::StatusCode\">StatusCode</a>","synthetic":true,"types":["http::status::StatusCode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/status/struct.InvalidStatusCode.html\" title=\"struct http::status::InvalidStatusCode\">InvalidStatusCode</a>","synthetic":true,"types":["http::status::InvalidStatusCode"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/uri/struct.Authority.html\" title=\"struct http::uri::Authority\">Authority</a>","synthetic":true,"types":["http::uri::authority::Authority"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/uri/struct.Builder.html\" title=\"struct http::uri::Builder\">Builder</a>","synthetic":true,"types":["http::uri::builder::Builder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/uri/struct.PathAndQuery.html\" title=\"struct http::uri::PathAndQuery\">PathAndQuery</a>","synthetic":true,"types":["http::uri::path::PathAndQuery"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"http/uri/struct.Port.html\" title=\"struct http::uri::Port\">Port</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["http::uri::port::Port"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/uri/struct.Scheme.html\" title=\"struct http::uri::Scheme\">Scheme</a>","synthetic":true,"types":["http::uri::scheme::Scheme"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/uri/struct.Uri.html\" title=\"struct http::uri::Uri\">Uri</a>","synthetic":true,"types":["http::uri::Uri"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"http/uri/struct.Parts.html\" title=\"struct http::uri::Parts\">Parts</a>","synthetic":true,"types":["http::uri::Parts"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/uri/struct.InvalidUri.html\" title=\"struct http::uri::InvalidUri\">InvalidUri</a>","synthetic":true,"types":["http::uri::InvalidUri"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/uri/struct.InvalidUriParts.html\" title=\"struct http::uri::InvalidUriParts\">InvalidUriParts</a>","synthetic":true,"types":["http::uri::InvalidUriParts"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/version/struct.Version.html\" title=\"struct http::version::Version\">Version</a>","synthetic":true,"types":["http::version::Version"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/struct.Error.html\" title=\"struct http::Error\">Error</a>","synthetic":true,"types":["http::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http/struct.Extensions.html\" title=\"struct http::Extensions\">Extensions</a>","synthetic":true,"types":["http::extensions::Extensions"]}];
implementors["http_body"] = [{"text":"impl&lt;D&gt; Freeze for <a class=\"struct\" href=\"http_body/struct.Empty.html\" title=\"struct http_body::Empty\">Empty</a>&lt;D&gt;","synthetic":true,"types":["http_body::empty::Empty"]},{"text":"impl&lt;D&gt; Freeze for <a class=\"struct\" href=\"http_body/struct.Full.html\" title=\"struct http_body::Full\">Full</a>&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["http_body::full::Full"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"http_body/struct.Limited.html\" title=\"struct http_body::Limited\">Limited</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["http_body::limited::Limited"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http_body/struct.LengthLimitError.html\" title=\"struct http_body::LengthLimitError\">LengthLimitError</a>","synthetic":true,"types":["http_body::limited::LengthLimitError"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"http_body/struct.Data.html\" title=\"struct http_body::Data\">Data</a>&lt;'a, T&gt;","synthetic":true,"types":["http_body::next::Data"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"http_body/struct.Trailers.html\" title=\"struct http_body::Trailers\">Trailers</a>&lt;'a, T&gt;","synthetic":true,"types":["http_body::next::Trailers"]},{"text":"impl Freeze for <a class=\"struct\" href=\"http_body/struct.SizeHint.html\" title=\"struct http_body::SizeHint\">SizeHint</a>","synthetic":true,"types":["http_body::size_hint::SizeHint"]},{"text":"impl&lt;D, E&gt; Freeze for <a class=\"struct\" href=\"http_body/combinators/struct.BoxBody.html\" title=\"struct http_body::combinators::BoxBody\">BoxBody</a>&lt;D, E&gt;","synthetic":true,"types":["http_body::combinators::box_body::BoxBody"]},{"text":"impl&lt;D, E&gt; Freeze for <a class=\"struct\" href=\"http_body/combinators/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;D, E&gt;","synthetic":true,"types":["http_body::combinators::box_body::UnsyncBoxBody"]},{"text":"impl&lt;B, F&gt; Freeze for <a class=\"struct\" href=\"http_body/combinators/struct.MapData.html\" title=\"struct http_body::combinators::MapData\">MapData</a>&lt;B, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["http_body::combinators::map_data::MapData"]},{"text":"impl&lt;B, F&gt; Freeze for <a class=\"struct\" href=\"http_body/combinators/struct.MapErr.html\" title=\"struct http_body::combinators::MapErr\">MapErr</a>&lt;B, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["http_body::combinators::map_err::MapErr"]}];
implementors["httparse"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"httparse/enum.Error.html\" title=\"enum httparse::Error\">Error</a>","synthetic":true,"types":["httparse::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"httparse/struct.InvalidChunkSize.html\" title=\"struct httparse::InvalidChunkSize\">InvalidChunkSize</a>","synthetic":true,"types":["httparse::InvalidChunkSize"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"httparse/enum.Status.html\" title=\"enum httparse::Status\">Status</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["httparse::Status"]},{"text":"impl Freeze for <a class=\"struct\" href=\"httparse/struct.ParserConfig.html\" title=\"struct httparse::ParserConfig\">ParserConfig</a>","synthetic":true,"types":["httparse::ParserConfig"]},{"text":"impl&lt;'headers, 'buf&gt; Freeze for <a class=\"struct\" href=\"httparse/struct.Request.html\" title=\"struct httparse::Request\">Request</a>&lt;'headers, 'buf&gt;","synthetic":true,"types":["httparse::Request"]},{"text":"impl&lt;'headers, 'buf&gt; Freeze for <a class=\"struct\" href=\"httparse/struct.Response.html\" title=\"struct httparse::Response\">Response</a>&lt;'headers, 'buf&gt;","synthetic":true,"types":["httparse::Response"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"httparse/struct.Header.html\" title=\"struct httparse::Header\">Header</a>&lt;'a&gt;","synthetic":true,"types":["httparse::Header"]}];
implementors["httpdate"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"httpdate/struct.HttpDate.html\" title=\"struct httpdate::HttpDate\">HttpDate</a>","synthetic":true,"types":["httpdate::date::HttpDate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"httpdate/struct.Error.html\" title=\"struct httpdate::Error\">Error</a>","synthetic":true,"types":["httpdate::Error"]}];
implementors["hyper"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"hyper/body/struct.Body.html\" title=\"struct hyper::body::Body\">Body</a>","synthetic":true,"types":["hyper::body::body::Body"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyper/body/struct.Sender.html\" title=\"struct hyper::body::Sender\">Sender</a>","synthetic":true,"types":["hyper::body::body::Sender"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyper/struct.Error.html\" title=\"struct hyper::Error\">Error</a>","synthetic":true,"types":["hyper::error::Error"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"hyper/ext/struct.ReasonPhrase.html\" title=\"struct hyper::ext::ReasonPhrase\">ReasonPhrase</a>","synthetic":true,"types":["hyper::ext::h1_reason_phrase::ReasonPhrase"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"hyper/ext/struct.Protocol.html\" title=\"struct hyper::ext::Protocol\">Protocol</a>","synthetic":true,"types":["hyper::ext::Protocol"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"hyper/upgrade/struct.Upgraded.html\" title=\"struct hyper::upgrade::Upgraded\">Upgraded</a>","synthetic":true,"types":["hyper::upgrade::Upgraded"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyper/upgrade/struct.OnUpgrade.html\" title=\"struct hyper::upgrade::OnUpgrade\">OnUpgrade</a>","synthetic":true,"types":["hyper::upgrade::OnUpgrade"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"hyper/upgrade/struct.Parts.html\" title=\"struct hyper::upgrade::Parts\">Parts</a>&lt;T&gt;","synthetic":true,"types":["hyper::upgrade::Parts"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyper/client/connect/dns/struct.Name.html\" title=\"struct hyper::client::connect::dns::Name\">Name</a>","synthetic":true,"types":["hyper::client::connect::dns::Name"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyper/client/connect/dns/struct.GaiResolver.html\" title=\"struct hyper::client::connect::dns::GaiResolver\">GaiResolver</a>","synthetic":true,"types":["hyper::client::connect::dns::GaiResolver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyper/client/connect/dns/struct.GaiAddrs.html\" title=\"struct hyper::client::connect::dns::GaiAddrs\">GaiAddrs</a>","synthetic":true,"types":["hyper::client::connect::dns::GaiAddrs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyper/client/connect/dns/struct.GaiFuture.html\" title=\"struct hyper::client::connect::dns::GaiFuture\">GaiFuture</a>","synthetic":true,"types":["hyper::client::connect::dns::GaiFuture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyper/client/connect/dns/struct.InvalidNameError.html\" title=\"struct hyper::client::connect::dns::InvalidNameError\">InvalidNameError</a>","synthetic":true,"types":["hyper::client::connect::dns::InvalidNameError"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"hyper/client/connect/struct.HttpConnector.html\" title=\"struct hyper::client::connect::HttpConnector\">HttpConnector</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["hyper::client::connect::http::HttpConnector"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyper/client/connect/struct.HttpInfo.html\" title=\"struct hyper::client::connect::HttpInfo\">HttpInfo</a>","synthetic":true,"types":["hyper::client::connect::http::HttpInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyper/client/connect/struct.Connected.html\" title=\"struct hyper::client::connect::Connected\">Connected</a>","synthetic":true,"types":["hyper::client::connect::Connected"]},{"text":"impl&lt;C, B&gt; Freeze for <a class=\"struct\" href=\"hyper/client/struct.Client.html\" title=\"struct hyper::client::Client\">Client</a>&lt;C, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":["hyper::client::client::Client"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyper/client/struct.ResponseFuture.html\" title=\"struct hyper::client::ResponseFuture\">ResponseFuture</a>","synthetic":true,"types":["hyper::client::client::ResponseFuture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyper/client/struct.Builder.html\" title=\"struct hyper::client::Builder\">Builder</a>","synthetic":true,"types":["hyper::client::client::Builder"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"hyper/client/conn/struct.SendRequest.html\" title=\"struct hyper::client::conn::SendRequest\">SendRequest</a>&lt;B&gt;","synthetic":true,"types":["hyper::client::conn::SendRequest"]},{"text":"impl&lt;T, B&gt; Freeze for <a class=\"struct\" href=\"hyper/client/conn/struct.Connection.html\" title=\"struct hyper::client::conn::Connection\">Connection</a>&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["hyper::client::conn::Connection"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyper/client/conn/struct.Builder.html\" title=\"struct hyper::client::conn::Builder\">Builder</a>","synthetic":true,"types":["hyper::client::conn::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyper/client/conn/struct.ResponseFuture.html\" title=\"struct hyper::client::conn::ResponseFuture\">ResponseFuture</a>","synthetic":true,"types":["hyper::client::conn::ResponseFuture"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"hyper/client/conn/struct.Parts.html\" title=\"struct hyper::client::conn::Parts\">Parts</a>&lt;T&gt;","synthetic":true,"types":["hyper::client::conn::Parts"]},{"text":"impl&lt;C, B, T&gt; Freeze for <a class=\"struct\" href=\"hyper/client/service/struct.Connect.html\" title=\"struct hyper::client::service::Connect\">Connect</a>&lt;C, B, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":["hyper::client::service::Connect"]}];
implementors["hyper_tls"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"hyper_tls/struct.HttpsConnector.html\" title=\"struct hyper_tls::HttpsConnector\">HttpsConnector</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["hyper_tls::client::HttpsConnector"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"hyper_tls/struct.HttpsConnecting.html\" title=\"struct hyper_tls::HttpsConnecting\">HttpsConnecting</a>&lt;T&gt;","synthetic":true,"types":["hyper_tls::client::HttpsConnecting"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"hyper_tls/enum.MaybeHttpsStream.html\" title=\"enum hyper_tls::MaybeHttpsStream\">MaybeHttpsStream</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["hyper_tls::stream::MaybeHttpsStream"]}];
implementors["iana_time_zone"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"iana_time_zone/enum.GetTimezoneError.html\" title=\"enum iana_time_zone::GetTimezoneError\">GetTimezoneError</a>","synthetic":true,"types":["iana_time_zone::GetTimezoneError"]}];
implementors["idna"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"idna/struct.Idna.html\" title=\"struct idna::Idna\">Idna</a>","synthetic":true,"types":["idna::uts46::Idna"]},{"text":"impl Freeze for <a class=\"struct\" href=\"idna/struct.Config.html\" title=\"struct idna::Config\">Config</a>","synthetic":true,"types":["idna::uts46::Config"]},{"text":"impl Freeze for <a class=\"struct\" href=\"idna/struct.Errors.html\" title=\"struct idna::Errors\">Errors</a>","synthetic":true,"types":["idna::uts46::Errors"]}];
implementors["image"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"image/error/enum.ImageError.html\" title=\"enum image::error::ImageError\">ImageError</a>","synthetic":true,"types":["image::error::ImageError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"image/error/struct.UnsupportedError.html\" title=\"struct image::error::UnsupportedError\">UnsupportedError</a>","synthetic":true,"types":["image::error::UnsupportedError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"image/error/enum.UnsupportedErrorKind.html\" title=\"enum image::error::UnsupportedErrorKind\">UnsupportedErrorKind</a>","synthetic":true,"types":["image::error::UnsupportedErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"image/error/struct.EncodingError.html\" title=\"struct image::error::EncodingError\">EncodingError</a>","synthetic":true,"types":["image::error::EncodingError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"image/error/struct.ParameterError.html\" title=\"struct image::error::ParameterError\">ParameterError</a>","synthetic":true,"types":["image::error::ParameterError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"image/error/enum.ParameterErrorKind.html\" title=\"enum image::error::ParameterErrorKind\">ParameterErrorKind</a>","synthetic":true,"types":["image::error::ParameterErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"image/error/struct.DecodingError.html\" title=\"struct image::error::DecodingError\">DecodingError</a>","synthetic":true,"types":["image::error::DecodingError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"image/error/struct.LimitError.html\" title=\"struct image::error::LimitError\">LimitError</a>","synthetic":true,"types":["image::error::LimitError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"image/error/enum.LimitErrorKind.html\" title=\"enum image::error::LimitErrorKind\">LimitErrorKind</a>","synthetic":true,"types":["image::error::LimitErrorKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"image/error/enum.ImageFormatHint.html\" title=\"enum image::error::ImageFormatHint\">ImageFormatHint</a>","synthetic":true,"types":["image::error::ImageFormatHint"]},{"text":"impl&lt;'a, P&gt; Freeze for <a class=\"struct\" href=\"image/buffer/struct.EnumeratePixels.html\" title=\"struct image::buffer::EnumeratePixels\">EnumeratePixels</a>&lt;'a, P&gt;","synthetic":true,"types":["image::buffer_::EnumeratePixels"]},{"text":"impl&lt;'a, P&gt; Freeze for <a class=\"struct\" href=\"image/buffer/struct.EnumeratePixelsMut.html\" title=\"struct image::buffer::EnumeratePixelsMut\">EnumeratePixelsMut</a>&lt;'a, P&gt;","synthetic":true,"types":["image::buffer_::EnumeratePixelsMut"]},{"text":"impl&lt;'a, P&gt; Freeze for <a class=\"struct\" href=\"image/buffer/struct.EnumerateRows.html\" title=\"struct image::buffer::EnumerateRows\">EnumerateRows</a>&lt;'a, P&gt;","synthetic":true,"types":["image::buffer_::EnumerateRows"]},{"text":"impl&lt;'a, P&gt; Freeze for <a class=\"struct\" href=\"image/buffer/struct.EnumerateRowsMut.html\" title=\"struct image::buffer::EnumerateRowsMut\">EnumerateRowsMut</a>&lt;'a, P&gt;","synthetic":true,"types":["image::buffer_::EnumerateRowsMut"]},{"text":"impl&lt;'a, P&gt; Freeze for <a class=\"struct\" href=\"image/buffer/struct.Pixels.html\" title=\"struct image::buffer::Pixels\">Pixels</a>&lt;'a, P&gt;","synthetic":true,"types":["image::buffer_::Pixels"]},{"text":"impl&lt;'a, P&gt; Freeze for <a class=\"struct\" href=\"image/buffer/struct.PixelsMut.html\" title=\"struct image::buffer::PixelsMut\">PixelsMut</a>&lt;'a, P&gt;","synthetic":true,"types":["image::buffer_::PixelsMut"]},{"text":"impl&lt;'a, P&gt; Freeze for <a class=\"struct\" href=\"image/buffer/struct.Rows.html\" title=\"struct image::buffer::Rows\">Rows</a>&lt;'a, P&gt;","synthetic":true,"types":["image::buffer_::Rows"]},{"text":"impl&lt;'a, P&gt; Freeze for <a class=\"struct\" href=\"image/buffer/struct.RowsMut.html\" title=\"struct image::buffer::RowsMut\">RowsMut</a>&lt;'a, P&gt;","synthetic":true,"types":["image::buffer_::RowsMut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"image/math/struct.Rect.html\" title=\"struct image::math::Rect\">Rect</a>","synthetic":true,"types":["image::math::rect::Rect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"image/imageops/colorops/struct.BiLevel.html\" title=\"struct image::imageops::colorops::BiLevel\">BiLevel</a>","synthetic":true,"types":["image::imageops::colorops::BiLevel"]},{"text":"impl Freeze for <a class=\"enum\" href=\"image/imageops/enum.FilterType.html\" title=\"enum image::imageops::FilterType\">FilterType</a>","synthetic":true,"types":["image::imageops::sample::FilterType"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"image/io/struct.Reader.html\" title=\"struct image::io::Reader\">Reader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["image::io::reader::Reader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"image/io/struct.LimitSupport.html\" title=\"struct image::io::LimitSupport\">LimitSupport</a>","synthetic":true,"types":["image::io::LimitSupport"]},{"text":"impl Freeze for <a class=\"struct\" href=\"image/io/struct.Limits.html\" title=\"struct image::io::Limits\">Limits</a>","synthetic":true,"types":["image::io::Limits"]},{"text":"impl&lt;Buffer&gt; Freeze for <a class=\"struct\" href=\"image/flat/struct.FlatSamples.html\" title=\"struct image::flat::FlatSamples\">FlatSamples</a>&lt;Buffer&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Buffer: Freeze,&nbsp;</span>","synthetic":true,"types":["image::flat::FlatSamples"]},{"text":"impl Freeze for <a class=\"struct\" href=\"image/flat/struct.SampleLayout.html\" title=\"struct image::flat::SampleLayout\">SampleLayout</a>","synthetic":true,"types":["image::flat::SampleLayout"]},{"text":"impl&lt;Buffer, P&gt; Freeze for <a class=\"struct\" href=\"image/flat/struct.View.html\" title=\"struct image::flat::View\">View</a>&lt;Buffer, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Buffer: Freeze,&nbsp;</span>","synthetic":true,"types":["image::flat::View"]},{"text":"impl&lt;Buffer, P&gt; Freeze for <a class=\"struct\" href=\"image/flat/struct.ViewMut.html\" title=\"struct image::flat::ViewMut\">ViewMut</a>&lt;Buffer, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Buffer: Freeze,&nbsp;</span>","synthetic":true,"types":["image::flat::ViewMut"]},{"text":"impl Freeze for <a class=\"enum\" href=\"image/flat/enum.Error.html\" title=\"enum image::flat::Error\">Error</a>","synthetic":true,"types":["image::flat::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"image/flat/enum.NormalForm.html\" title=\"enum image::flat::NormalForm\">NormalForm</a>","synthetic":true,"types":["image::flat::NormalForm"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"image/codecs/bmp/struct.BmpDecoder.html\" title=\"struct image::codecs::bmp::BmpDecoder\">BmpDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::bmp::decoder::BmpDecoder"]},{"text":"impl&lt;'a, W&gt; Freeze for <a class=\"struct\" href=\"image/codecs/bmp/struct.BmpEncoder.html\" title=\"struct image::codecs::bmp::BmpEncoder\">BmpEncoder</a>&lt;'a, W&gt;","synthetic":true,"types":["image::codecs::bmp::encoder::BmpEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"image/codecs/dds/struct.DdsDecoder.html\" title=\"struct image::codecs::dds::DdsDecoder\">DdsDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::dds::DdsDecoder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"image/codecs/dxt/enum.DxtVariant.html\" title=\"enum image::codecs::dxt::DxtVariant\">DxtVariant</a>","synthetic":true,"types":["image::codecs::dxt::DxtVariant"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"image/codecs/dxt/struct.DxtDecoder.html\" title=\"struct image::codecs::dxt::DxtDecoder\">DxtDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::dxt::DxtDecoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"image/codecs/dxt/struct.DxtReader.html\" title=\"struct image::codecs::dxt::DxtReader\">DxtReader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::dxt::DxtReader"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"image/codecs/dxt/struct.DxtEncoder.html\" title=\"struct image::codecs::dxt::DxtEncoder\">DxtEncoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::dxt::DxtEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"image/codecs/farbfeld/struct.FarbfeldReader.html\" title=\"struct image::codecs::farbfeld::FarbfeldReader\">FarbfeldReader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::farbfeld::FarbfeldReader"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"image/codecs/farbfeld/struct.FarbfeldDecoder.html\" title=\"struct image::codecs::farbfeld::FarbfeldDecoder\">FarbfeldDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::farbfeld::FarbfeldDecoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"image/codecs/farbfeld/struct.FarbfeldEncoder.html\" title=\"struct image::codecs::farbfeld::FarbfeldEncoder\">FarbfeldEncoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::farbfeld::FarbfeldEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"image/codecs/gif/struct.GifDecoder.html\" title=\"struct image::codecs::gif::GifDecoder\">GifDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::gif::GifDecoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"image/codecs/gif/struct.GifReader.html\" title=\"struct image::codecs::gif::GifReader\">GifReader</a>&lt;R&gt;","synthetic":true,"types":["image::codecs::gif::GifReader"]},{"text":"impl Freeze for <a class=\"enum\" href=\"image/codecs/gif/enum.Repeat.html\" title=\"enum image::codecs::gif::Repeat\">Repeat</a>","synthetic":true,"types":["image::codecs::gif::Repeat"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"image/codecs/gif/struct.GifEncoder.html\" title=\"struct image::codecs::gif::GifEncoder\">GifEncoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::gif::GifEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"image/codecs/hdr/struct.HdrAdapter.html\" title=\"struct image::codecs::hdr::HdrAdapter\">HdrAdapter</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::hdr::decoder::HdrAdapter"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"image/codecs/hdr/struct.HdrReader.html\" title=\"struct image::codecs::hdr::HdrReader\">HdrReader</a>&lt;R&gt;","synthetic":true,"types":["image::codecs::hdr::decoder::HdrReader"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"image/codecs/hdr/struct.HdrDecoder.html\" title=\"struct image::codecs::hdr::HdrDecoder\">HdrDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::hdr::decoder::HdrDecoder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"image/codecs/hdr/struct.Rgbe8Pixel.html\" title=\"struct image::codecs::hdr::Rgbe8Pixel\">Rgbe8Pixel</a>","synthetic":true,"types":["image::codecs::hdr::decoder::Rgbe8Pixel"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"image/codecs/hdr/struct.HdrImageDecoderIterator.html\" title=\"struct image::codecs::hdr::HdrImageDecoderIterator\">HdrImageDecoderIterator</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::hdr::decoder::HdrImageDecoderIterator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"image/codecs/hdr/struct.HdrMetadata.html\" title=\"struct image::codecs::hdr::HdrMetadata\">HdrMetadata</a>","synthetic":true,"types":["image::codecs::hdr::decoder::HdrMetadata"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"image/codecs/hdr/struct.HdrEncoder.html\" title=\"struct image::codecs::hdr::HdrEncoder\">HdrEncoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::hdr::encoder::HdrEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"image/codecs/ico/struct.IcoDecoder.html\" title=\"struct image::codecs::ico::IcoDecoder\">IcoDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::ico::decoder::IcoDecoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"image/codecs/ico/struct.IcoEncoder.html\" title=\"struct image::codecs::ico::IcoEncoder\">IcoEncoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::ico::encoder::IcoEncoder"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"image/codecs/ico/struct.IcoFrame.html\" title=\"struct image::codecs::ico::IcoFrame\">IcoFrame</a>&lt;'a&gt;","synthetic":true,"types":["image::codecs::ico::encoder::IcoFrame"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"image/codecs/jpeg/struct.JpegDecoder.html\" title=\"struct image::codecs::jpeg::JpegDecoder\">JpegDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::jpeg::decoder::JpegDecoder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"image/codecs/jpeg/enum.PixelDensityUnit.html\" title=\"enum image::codecs::jpeg::PixelDensityUnit\">PixelDensityUnit</a>","synthetic":true,"types":["image::codecs::jpeg::encoder::PixelDensityUnit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"image/codecs/jpeg/struct.PixelDensity.html\" title=\"struct image::codecs::jpeg::PixelDensity\">PixelDensity</a>","synthetic":true,"types":["image::codecs::jpeg::encoder::PixelDensity"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"image/codecs/jpeg/struct.JpegEncoder.html\" title=\"struct image::codecs::jpeg::JpegEncoder\">JpegEncoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::jpeg::encoder::JpegEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"image/codecs/openexr/struct.OpenExrDecoder.html\" title=\"struct image::codecs::openexr::OpenExrDecoder\">OpenExrDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::openexr::OpenExrDecoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"image/codecs/openexr/struct.OpenExrEncoder.html\" title=\"struct image::codecs::openexr::OpenExrEncoder\">OpenExrEncoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::openexr::OpenExrEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"image/codecs/png/struct.PngReader.html\" title=\"struct image::codecs::png::PngReader\">PngReader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::png::PngReader"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"image/codecs/png/struct.PngDecoder.html\" title=\"struct image::codecs::png::PngDecoder\">PngDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::png::PngDecoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"image/codecs/png/struct.ApngDecoder.html\" title=\"struct image::codecs::png::ApngDecoder\">ApngDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::png::ApngDecoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"image/codecs/png/struct.PngEncoder.html\" title=\"struct image::codecs::png::PngEncoder\">PngEncoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::png::PngEncoder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"image/codecs/png/enum.CompressionType.html\" title=\"enum image::codecs::png::CompressionType\">CompressionType</a>","synthetic":true,"types":["image::codecs::png::CompressionType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"image/codecs/png/enum.FilterType.html\" title=\"enum image::codecs::png::FilterType\">FilterType</a>","synthetic":true,"types":["image::codecs::png::FilterType"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"image/codecs/pnm/struct.PnmDecoder.html\" title=\"struct image::codecs::pnm::PnmDecoder\">PnmDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::pnm::decoder::PnmDecoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"image/codecs/pnm/struct.PnmEncoder.html\" title=\"struct image::codecs::pnm::PnmEncoder\">PnmEncoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::pnm::encoder::PnmEncoder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"image/codecs/pnm/enum.SampleEncoding.html\" title=\"enum image::codecs::pnm::SampleEncoding\">SampleEncoding</a>","synthetic":true,"types":["image::codecs::pnm::header::SampleEncoding"]},{"text":"impl Freeze for <a class=\"enum\" href=\"image/codecs/pnm/enum.PnmSubtype.html\" title=\"enum image::codecs::pnm::PnmSubtype\">PnmSubtype</a>","synthetic":true,"types":["image::codecs::pnm::header::PnmSubtype"]},{"text":"impl Freeze for <a class=\"struct\" href=\"image/codecs/pnm/struct.PnmHeader.html\" title=\"struct image::codecs::pnm::PnmHeader\">PnmHeader</a>","synthetic":true,"types":["image::codecs::pnm::header::PnmHeader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"image/codecs/pnm/struct.BitmapHeader.html\" title=\"struct image::codecs::pnm::BitmapHeader\">BitmapHeader</a>","synthetic":true,"types":["image::codecs::pnm::header::BitmapHeader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"image/codecs/pnm/struct.GraymapHeader.html\" title=\"struct image::codecs::pnm::GraymapHeader\">GraymapHeader</a>","synthetic":true,"types":["image::codecs::pnm::header::GraymapHeader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"image/codecs/pnm/struct.PixmapHeader.html\" title=\"struct image::codecs::pnm::PixmapHeader\">PixmapHeader</a>","synthetic":true,"types":["image::codecs::pnm::header::PixmapHeader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"image/codecs/pnm/struct.ArbitraryHeader.html\" title=\"struct image::codecs::pnm::ArbitraryHeader\">ArbitraryHeader</a>","synthetic":true,"types":["image::codecs::pnm::header::ArbitraryHeader"]},{"text":"impl Freeze for <a class=\"enum\" href=\"image/codecs/pnm/enum.ArbitraryTuplType.html\" title=\"enum image::codecs::pnm::ArbitraryTuplType\">ArbitraryTuplType</a>","synthetic":true,"types":["image::codecs::pnm::header::ArbitraryTuplType"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"image/codecs/tga/struct.TgaDecoder.html\" title=\"struct image::codecs::tga::TgaDecoder\">TgaDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::tga::decoder::TgaDecoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"image/codecs/tga/struct.TgaEncoder.html\" title=\"struct image::codecs::tga::TgaEncoder\">TgaEncoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::tga::encoder::TgaEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"image/codecs/tiff/struct.TiffDecoder.html\" title=\"struct image::codecs::tiff::TiffDecoder\">TiffDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::tiff::TiffDecoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"image/codecs/tiff/struct.TiffReader.html\" title=\"struct image::codecs::tiff::TiffReader\">TiffReader</a>&lt;R&gt;","synthetic":true,"types":["image::codecs::tiff::TiffReader"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"image/codecs/tiff/struct.TiffEncoder.html\" title=\"struct image::codecs::tiff::TiffEncoder\">TiffEncoder</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::tiff::TiffEncoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"image/codecs/webp/struct.WebPDecoder.html\" title=\"struct image::codecs::webp::WebPDecoder\">WebPDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::webp::decoder::WebPDecoder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"image/codecs/webp/vp8/struct.Frame.html\" title=\"struct image::codecs::webp::vp8::Frame\">Frame</a>","synthetic":true,"types":["image::codecs::webp::vp8::Frame"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"image/codecs/webp/vp8/struct.Vp8Decoder.html\" title=\"struct image::codecs::webp::vp8::Vp8Decoder\">Vp8Decoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["image::codecs::webp::vp8::Vp8Decoder"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"image/struct.Frames.html\" title=\"struct image::Frames\">Frames</a>&lt;'a&gt;","synthetic":true,"types":["image::animation::Frames"]},{"text":"impl Freeze for <a class=\"struct\" href=\"image/struct.Frame.html\" title=\"struct image::Frame\">Frame</a>","synthetic":true,"types":["image::animation::Frame"]},{"text":"impl Freeze for <a class=\"struct\" href=\"image/struct.Delay.html\" title=\"struct image::Delay\">Delay</a>","synthetic":true,"types":["image::animation::Delay"]},{"text":"impl&lt;P, Container&gt; Freeze for <a class=\"struct\" href=\"image/struct.ImageBuffer.html\" title=\"struct image::ImageBuffer\">ImageBuffer</a>&lt;P, Container&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Container: Freeze,&nbsp;</span>","synthetic":true,"types":["image::buffer_::ImageBuffer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"image/enum.ColorType.html\" title=\"enum image::ColorType\">ColorType</a>","synthetic":true,"types":["image::color::ColorType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"image/enum.ExtendedColorType.html\" title=\"enum image::ExtendedColorType\">ExtendedColorType</a>","synthetic":true,"types":["image::color::ExtendedColorType"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"image/struct.Rgb.html\" title=\"struct image::Rgb\">Rgb</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["image::color::Rgb"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"image/struct.Luma.html\" title=\"struct image::Luma\">Luma</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["image::color::Luma"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"image/struct.Rgba.html\" title=\"struct image::Rgba\">Rgba</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["image::color::Rgba"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"image/struct.LumaA.html\" title=\"struct image::LumaA\">LumaA</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["image::color::LumaA"]},{"text":"impl Freeze for <a class=\"enum\" href=\"image/enum.DynamicImage.html\" title=\"enum image::DynamicImage\">DynamicImage</a>","synthetic":true,"types":["image::dynimage::DynamicImage"]},{"text":"impl Freeze for <a class=\"enum\" href=\"image/enum.ImageFormat.html\" title=\"enum image::ImageFormat\">ImageFormat</a>","synthetic":true,"types":["image::image::ImageFormat"]},{"text":"impl Freeze for <a class=\"enum\" href=\"image/enum.ImageOutputFormat.html\" title=\"enum image::ImageOutputFormat\">ImageOutputFormat</a>","synthetic":true,"types":["image::image::ImageOutputFormat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"image/struct.Progress.html\" title=\"struct image::Progress\">Progress</a>","synthetic":true,"types":["image::image::Progress"]},{"text":"impl&lt;'a, I:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"image/struct.Pixels.html\" title=\"struct image::Pixels\">Pixels</a>&lt;'a, I&gt;","synthetic":true,"types":["image::image::Pixels"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"image/struct.SubImage.html\" title=\"struct image::SubImage\">SubImage</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["image::image::SubImage"]}];
implementors["indexmap"] = [{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.OccupiedEntry.html\" title=\"struct indexmap::map::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["indexmap::map::core::raw::OccupiedEntry"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"enum\" href=\"indexmap/map/enum.Entry.html\" title=\"enum indexmap::map::Entry\">Entry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["indexmap::map::core::Entry"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.VacantEntry.html\" title=\"struct indexmap::map::VacantEntry\">VacantEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["indexmap::map::core::VacantEntry"]},{"text":"impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.IndexMap.html\" title=\"struct indexmap::map::IndexMap\">IndexMap</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["indexmap::map::IndexMap"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.Keys.html\" title=\"struct indexmap::map::Keys\">Keys</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::Keys"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.IntoKeys.html\" title=\"struct indexmap::map::IntoKeys\">IntoKeys</a>&lt;K, V&gt;","synthetic":true,"types":["indexmap::map::IntoKeys"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.Values.html\" title=\"struct indexmap::map::Values\">Values</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::Values"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.ValuesMut.html\" title=\"struct indexmap::map::ValuesMut\">ValuesMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::ValuesMut"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.IntoValues.html\" title=\"struct indexmap::map::IntoValues\">IntoValues</a>&lt;K, V&gt;","synthetic":true,"types":["indexmap::map::IntoValues"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.Iter.html\" title=\"struct indexmap::map::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.IterMut.html\" title=\"struct indexmap::map::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::IterMut"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.IntoIter.html\" title=\"struct indexmap::map::IntoIter\">IntoIter</a>&lt;K, V&gt;","synthetic":true,"types":["indexmap::map::IntoIter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.Drain.html\" title=\"struct indexmap::map::Drain\">Drain</a>&lt;'a, K, V&gt;","synthetic":true,"types":["indexmap::map::Drain"]},{"text":"impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["indexmap::set::IndexSet"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.IntoIter.html\" title=\"struct indexmap::set::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["indexmap::set::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Iter.html\" title=\"struct indexmap::set::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["indexmap::set::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Drain.html\" title=\"struct indexmap::set::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["indexmap::set::Drain"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Difference.html\" title=\"struct indexmap::set::Difference\">Difference</a>&lt;'a, T, S&gt;","synthetic":true,"types":["indexmap::set::Difference"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Intersection.html\" title=\"struct indexmap::set::Intersection\">Intersection</a>&lt;'a, T, S&gt;","synthetic":true,"types":["indexmap::set::Intersection"]},{"text":"impl&lt;'a, T, S1, S2&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.SymmetricDifference.html\" title=\"struct indexmap::set::SymmetricDifference\">SymmetricDifference</a>&lt;'a, T, S1, S2&gt;","synthetic":true,"types":["indexmap::set::SymmetricDifference"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Union.html\" title=\"struct indexmap::set::Union\">Union</a>&lt;'a, T, S&gt;","synthetic":true,"types":["indexmap::set::Union"]}];
implementors["inflate"] = [{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"inflate/struct.InflateWriter.html\" title=\"struct inflate::InflateWriter\">InflateWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["inflate::writer::InflateWriter"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"inflate/struct.DeflateDecoderBuf.html\" title=\"struct inflate::DeflateDecoderBuf\">DeflateDecoderBuf</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["inflate::reader::DeflateDecoderBuf"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"inflate/struct.DeflateDecoder.html\" title=\"struct inflate::DeflateDecoder\">DeflateDecoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["inflate::reader::DeflateDecoder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"inflate/struct.InflateStream.html\" title=\"struct inflate::InflateStream\">InflateStream</a>","synthetic":true,"types":["inflate::InflateStream"]}];
implementors["ipnet"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"ipnet/enum.IpAddrRange.html\" title=\"enum ipnet::IpAddrRange\">IpAddrRange</a>","synthetic":true,"types":["ipnet::ipext::IpAddrRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ipnet/struct.Ipv4AddrRange.html\" title=\"struct ipnet::Ipv4AddrRange\">Ipv4AddrRange</a>","synthetic":true,"types":["ipnet::ipext::Ipv4AddrRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ipnet/struct.Ipv6AddrRange.html\" title=\"struct ipnet::Ipv6AddrRange\">Ipv6AddrRange</a>","synthetic":true,"types":["ipnet::ipext::Ipv6AddrRange"]},{"text":"impl Freeze for <a class=\"enum\" href=\"ipnet/enum.IpNet.html\" title=\"enum ipnet::IpNet\">IpNet</a>","synthetic":true,"types":["ipnet::ipnet::IpNet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ipnet/struct.Ipv4Net.html\" title=\"struct ipnet::Ipv4Net\">Ipv4Net</a>","synthetic":true,"types":["ipnet::ipnet::Ipv4Net"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ipnet/struct.Ipv6Net.html\" title=\"struct ipnet::Ipv6Net\">Ipv6Net</a>","synthetic":true,"types":["ipnet::ipnet::Ipv6Net"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ipnet/struct.PrefixLenError.html\" title=\"struct ipnet::PrefixLenError\">PrefixLenError</a>","synthetic":true,"types":["ipnet::ipnet::PrefixLenError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"ipnet/enum.IpSubnets.html\" title=\"enum ipnet::IpSubnets\">IpSubnets</a>","synthetic":true,"types":["ipnet::ipnet::IpSubnets"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ipnet/struct.Ipv4Subnets.html\" title=\"struct ipnet::Ipv4Subnets\">Ipv4Subnets</a>","synthetic":true,"types":["ipnet::ipnet::Ipv4Subnets"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ipnet/struct.Ipv6Subnets.html\" title=\"struct ipnet::Ipv6Subnets\">Ipv6Subnets</a>","synthetic":true,"types":["ipnet::ipnet::Ipv6Subnets"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ipnet/struct.AddrParseError.html\" title=\"struct ipnet::AddrParseError\">AddrParseError</a>","synthetic":true,"types":["ipnet::parser::AddrParseError"]}];
implementors["itertools"] = [{"text":"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Interleave.html\" title=\"struct itertools::structs::Interleave\">Interleave</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::Interleave"]},{"text":"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.InterleaveShortest.html\" title=\"struct itertools::structs::InterleaveShortest\">InterleaveShortest</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::InterleaveShortest"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.FilterMapOk.html\" title=\"struct itertools::structs::FilterMapOk\">FilterMapOk</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::FilterMapOk"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.FilterOk.html\" title=\"struct itertools::structs::FilterOk\">FilterOk</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::FilterOk"]},{"text":"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Product.html\" title=\"struct itertools::structs::Product\">Product</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::Product"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.PutBack.html\" title=\"struct itertools::structs::PutBack\">PutBack</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::PutBack"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Batching.html\" title=\"struct itertools::structs::Batching\">Batching</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::Batching"]},{"text":"impl&lt;I, J, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.MergeBy.html\" title=\"struct itertools::structs::MergeBy\">MergeBy</a>&lt;I, J, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::MergeBy"]},{"text":"impl&lt;'a, I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.TakeWhileRef.html\" title=\"struct itertools::structs::TakeWhileRef\">TakeWhileRef</a>&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::TakeWhileRef"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.WhileSome.html\" title=\"struct itertools::structs::WhileSome\">WhileSome</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::WhileSome"]},{"text":"impl&lt;I, T&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.TupleCombinations.html\" title=\"struct itertools::structs::TupleCombinations\">TupleCombinations</a>&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as HasCombination&lt;I&gt;&gt;::Combination: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::TupleCombinations"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Positions.html\" title=\"struct itertools::structs::Positions\">Positions</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::Positions"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Update.html\" title=\"struct itertools::structs::Update\">Update</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::Update"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Step.html\" title=\"struct itertools::structs::Step\">Step</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::adaptors::Step"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.MultiProduct.html\" title=\"struct itertools::structs::MultiProduct\">MultiProduct</a>&lt;I&gt;","synthetic":true,"types":["itertools::adaptors::multi_product::MultiProduct"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Combinations.html\" title=\"struct itertools::structs::Combinations\">Combinations</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::combinations::Combinations"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.CombinationsWithReplacement.html\" title=\"struct itertools::structs::CombinationsWithReplacement\">CombinationsWithReplacement</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::combinations_with_replacement::CombinationsWithReplacement"]},{"text":"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.ConsTuples.html\" title=\"struct itertools::structs::ConsTuples\">ConsTuples</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::cons_tuples_impl::ConsTuples"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.ExactlyOneError.html\" title=\"struct itertools::structs::ExactlyOneError\">ExactlyOneError</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::exactly_one_err::ExactlyOneError"]},{"text":"impl&lt;'a, I&gt; !Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Format.html\" title=\"struct itertools::structs::Format\">Format</a>&lt;'a, I&gt;","synthetic":true,"types":["itertools::format::Format"]},{"text":"impl&lt;'a, I, F&gt; !Freeze for <a class=\"struct\" href=\"itertools/structs/struct.FormatWith.html\" title=\"struct itertools::structs::FormatWith\">FormatWith</a>&lt;'a, I, F&gt;","synthetic":true,"types":["itertools::format::FormatWith"]},{"text":"impl&lt;I, T, E&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.FlattenOk.html\" title=\"struct itertools::structs::FlattenOk\">FlattenOk</a>&lt;I, T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::flatten_ok::FlattenOk"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.GroupingMap.html\" title=\"struct itertools::structs::GroupingMap\">GroupingMap</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::grouping_map::GroupingMap"]},{"text":"impl&lt;I&gt; !Freeze for <a class=\"struct\" href=\"itertools/structs/struct.IntoChunks.html\" title=\"struct itertools::structs::IntoChunks\">IntoChunks</a>&lt;I&gt;","synthetic":true,"types":["itertools::groupbylazy::IntoChunks"]},{"text":"impl&lt;'a, I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Chunk.html\" title=\"struct itertools::structs::Chunk\">Chunk</a>&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::groupbylazy::Chunk"]},{"text":"impl&lt;'a, I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Chunks.html\" title=\"struct itertools::structs::Chunks\">Chunks</a>&lt;'a, I&gt;","synthetic":true,"types":["itertools::groupbylazy::Chunks"]},{"text":"impl&lt;K, I, F&gt; !Freeze for <a class=\"struct\" href=\"itertools/structs/struct.GroupBy.html\" title=\"struct itertools::structs::GroupBy\">GroupBy</a>&lt;K, I, F&gt;","synthetic":true,"types":["itertools::groupbylazy::GroupBy"]},{"text":"impl&lt;'a, K, I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Group.html\" title=\"struct itertools::structs::Group\">Group</a>&lt;'a, K, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::groupbylazy::Group"]},{"text":"impl&lt;'a, K, I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Groups.html\" title=\"struct itertools::structs::Groups\">Groups</a>&lt;'a, K, I, F&gt;","synthetic":true,"types":["itertools::groupbylazy::Groups"]},{"text":"impl&lt;I, ElemF&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.IntersperseWith.html\" title=\"struct itertools::structs::IntersperseWith\">IntersperseWith</a>&lt;I, ElemF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ElemF: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::intersperse::IntersperseWith"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.KMergeBy.html\" title=\"struct itertools::structs::KMergeBy\">KMergeBy</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::kmerge_impl::KMergeBy"]},{"text":"impl&lt;I, J, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.MergeJoinBy.html\" title=\"struct itertools::structs::MergeJoinBy\">MergeJoinBy</a>&lt;I, J, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;J as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::merge_join::MergeJoinBy"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.MultiPeek.html\" title=\"struct itertools::structs::MultiPeek\">MultiPeek</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::multipeek_impl::MultiPeek"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.PeekNth.html\" title=\"struct itertools::structs::PeekNth\">PeekNth</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::peek_nth::PeekNth"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.PadUsing.html\" title=\"struct itertools::structs::PadUsing\">PadUsing</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::pad_tail::PadUsing"]},{"text":"impl&lt;'a, I, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.PeekingTakeWhile.html\" title=\"struct itertools::structs::PeekingTakeWhile\">PeekingTakeWhile</a>&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::peeking_take_while::PeekingTakeWhile"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Permutations.html\" title=\"struct itertools::structs::Permutations\">Permutations</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::permutations::Permutations"]},{"text":"impl&lt;'a, I, E&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.ProcessResults.html\" title=\"struct itertools::structs::ProcessResults\">ProcessResults</a>&lt;'a, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::process_results_impl::ProcessResults"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Powerset.html\" title=\"struct itertools::structs::Powerset\">Powerset</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::powerset::Powerset"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.PutBackN.html\" title=\"struct itertools::structs::PutBackN\">PutBackN</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::put_back_n_impl::PutBackN"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.RcIter.html\" title=\"struct itertools::structs::RcIter\">RcIter</a>&lt;I&gt;","synthetic":true,"types":["itertools::rciter_impl::RcIter"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.RepeatN.html\" title=\"struct itertools::structs::RepeatN\">RepeatN</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::repeatn::RepeatN"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.RepeatCall.html\" title=\"struct itertools::structs::RepeatCall\">RepeatCall</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::sources::RepeatCall"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Unfold.html\" title=\"struct itertools::structs::Unfold\">Unfold</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::sources::Unfold"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Iterate.html\" title=\"struct itertools::structs::Iterate\">Iterate</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::sources::Iterate"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Tee.html\" title=\"struct itertools::structs::Tee\">Tee</a>&lt;I&gt;","synthetic":true,"types":["itertools::tee::Tee"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.TupleBuffer.html\" title=\"struct itertools::structs::TupleBuffer\">TupleBuffer</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as TupleCollect&gt;::Buffer: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::tuple_impl::TupleBuffer"]},{"text":"impl&lt;I, T&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.TupleWindows.html\" title=\"struct itertools::structs::TupleWindows\">TupleWindows</a>&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::tuple_impl::TupleWindows"]},{"text":"impl&lt;I, T&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.CircularTupleWindows.html\" title=\"struct itertools::structs::CircularTupleWindows\">CircularTupleWindows</a>&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::tuple_impl::CircularTupleWindows"]},{"text":"impl&lt;I, T&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Tuples.html\" title=\"struct itertools::structs::Tuples\">Tuples</a>&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as TupleCollect&gt;::Buffer: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::tuple_impl::Tuples"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Unique.html\" title=\"struct itertools::structs::Unique\">Unique</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::unique_impl::Unique"]},{"text":"impl&lt;I, V, F&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.UniqueBy.html\" title=\"struct itertools::structs::UniqueBy\">UniqueBy</a>&lt;I, V, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::unique_impl::UniqueBy"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.WithPosition.html\" title=\"struct itertools::structs::WithPosition\">WithPosition</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::with_position::WithPosition"]},{"text":"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.ZipEq.html\" title=\"struct itertools::structs::ZipEq\">ZipEq</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::zip_eq_impl::ZipEq"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.ZipLongest.html\" title=\"struct itertools::structs::ZipLongest\">ZipLongest</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::zip_longest::ZipLongest"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"itertools/structs/struct.Zip.html\" title=\"struct itertools::structs::Zip\">Zip</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::ziptuple::Zip"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"enum\" href=\"itertools/enum.EitherOrBoth.html\" title=\"enum itertools::EitherOrBoth\">EitherOrBoth</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::either_or_both::EitherOrBoth"]},{"text":"impl&lt;I, J&gt; Freeze for <a class=\"enum\" href=\"itertools/enum.Diff.html\" title=\"enum itertools::Diff\">Diff</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;J as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::diff::Diff"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"itertools/enum.MinMaxResult.html\" title=\"enum itertools::MinMaxResult\">MinMaxResult</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::minmax::MinMaxResult"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"itertools/enum.Position.html\" title=\"enum itertools::Position\">Position</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::with_position::Position"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"itertools/enum.FoldWhile.html\" title=\"enum itertools::FoldWhile\">FoldWhile</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools::FoldWhile"]}];
implementors["itertools_num"] = [{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"itertools_num/structs/struct.Linspace.html\" title=\"struct itertools_num::structs::Linspace\">Linspace</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools_num::linspace::Linspace"]},{"text":"impl&lt;I, S&gt; Freeze for <a class=\"struct\" href=\"itertools_num/structs/struct.Cumsum.html\" title=\"struct itertools_num::structs::Cumsum\">Cumsum</a>&lt;I, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["itertools_num::ext::Cumsum"]}];
implementors["itoa"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"itoa/struct.Buffer.html\" title=\"struct itoa::Buffer\">Buffer</a>","synthetic":true,"types":["itoa::Buffer"]}];
implementors["jpeg_decoder"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"jpeg_decoder/enum.PixelFormat.html\" title=\"enum jpeg_decoder::PixelFormat\">PixelFormat</a>","synthetic":true,"types":["jpeg_decoder::decoder::PixelFormat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"jpeg_decoder/struct.ImageInfo.html\" title=\"struct jpeg_decoder::ImageInfo\">ImageInfo</a>","synthetic":true,"types":["jpeg_decoder::decoder::ImageInfo"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"jpeg_decoder/struct.Decoder.html\" title=\"struct jpeg_decoder::Decoder\">Decoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["jpeg_decoder::decoder::Decoder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"jpeg_decoder/enum.UnsupportedFeature.html\" title=\"enum jpeg_decoder::UnsupportedFeature\">UnsupportedFeature</a>","synthetic":true,"types":["jpeg_decoder::error::UnsupportedFeature"]},{"text":"impl Freeze for <a class=\"enum\" href=\"jpeg_decoder/enum.Error.html\" title=\"enum jpeg_decoder::Error\">Error</a>","synthetic":true,"types":["jpeg_decoder::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"jpeg_decoder/enum.CodingProcess.html\" title=\"enum jpeg_decoder::CodingProcess\">CodingProcess</a>","synthetic":true,"types":["jpeg_decoder::parser::CodingProcess"]}];
implementors["libR_sys"] = [{"text":"impl&lt;Storage, Align&gt; Freeze for <a class=\"struct\" href=\"libR_sys/struct.__BindgenBitfieldUnit.html\" title=\"struct libR_sys::__BindgenBitfieldUnit\">__BindgenBitfieldUnit</a>&lt;Storage, Align&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Align: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Storage: Freeze,&nbsp;</span>","synthetic":true,"types":["libR_sys::__BindgenBitfieldUnit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libR_sys/struct.max_align_t.html\" title=\"struct libR_sys::max_align_t\">max_align_t</a>","synthetic":true,"types":["libR_sys::max_align_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libR_sys/struct.__fsid_t.html\" title=\"struct libR_sys::__fsid_t\">__fsid_t</a>","synthetic":true,"types":["libR_sys::__fsid_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libR_sys/struct.__mbstate_t.html\" title=\"struct libR_sys::__mbstate_t\">__mbstate_t</a>","synthetic":true,"types":["libR_sys::__mbstate_t"]},{"text":"impl Freeze for <a class=\"union\" href=\"libR_sys/union.__mbstate_t__bindgen_ty_1.html\" title=\"union libR_sys::__mbstate_t__bindgen_ty_1\">__mbstate_t__bindgen_ty_1</a>","synthetic":true,"types":["libR_sys::__mbstate_t__bindgen_ty_1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libR_sys/struct._G_fpos_t.html\" title=\"struct libR_sys::_G_fpos_t\">_G_fpos_t</a>","synthetic":true,"types":["libR_sys::_G_fpos_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libR_sys/struct._G_fpos64_t.html\" title=\"struct libR_sys::_G_fpos64_t\">_G_fpos64_t</a>","synthetic":true,"types":["libR_sys::_G_fpos64_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libR_sys/struct._IO_marker.html\" title=\"struct libR_sys::_IO_marker\">_IO_marker</a>","synthetic":true,"types":["libR_sys::_IO_marker"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libR_sys/struct._IO_codecvt.html\" title=\"struct libR_sys::_IO_codecvt\">_IO_codecvt</a>","synthetic":true,"types":["libR_sys::_IO_codecvt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libR_sys/struct._IO_wide_data.html\" title=\"struct libR_sys::_IO_wide_data\">_IO_wide_data</a>","synthetic":true,"types":["libR_sys::_IO_wide_data"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libR_sys/struct._IO_FILE.html\" title=\"struct libR_sys::_IO_FILE\">_IO_FILE</a>","synthetic":true,"types":["libR_sys::_IO_FILE"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libR_sys/struct.Rcomplex.html\" title=\"struct libR_sys::Rcomplex\">Rcomplex</a>","synthetic":true,"types":["libR_sys::Rcomplex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libR_sys/struct.R_CMethodDef.html\" title=\"struct libR_sys::R_CMethodDef\">R_CMethodDef</a>","synthetic":true,"types":["libR_sys::R_CMethodDef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libR_sys/struct.R_CallMethodDef.html\" title=\"struct libR_sys::R_CallMethodDef\">R_CallMethodDef</a>","synthetic":true,"types":["libR_sys::R_CallMethodDef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libR_sys/struct._DllInfo.html\" title=\"struct libR_sys::_DllInfo\">_DllInfo</a>","synthetic":true,"types":["libR_sys::_DllInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libR_sys/struct.Rf_RegisteredNativeSymbol.html\" title=\"struct libR_sys::Rf_RegisteredNativeSymbol\">Rf_RegisteredNativeSymbol</a>","synthetic":true,"types":["libR_sys::Rf_RegisteredNativeSymbol"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libR_sys/struct.SEXPREC.html\" title=\"struct libR_sys::SEXPREC\">SEXPREC</a>","synthetic":true,"types":["libR_sys::SEXPREC"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libR_sys/struct.R_allocator.html\" title=\"struct libR_sys::R_allocator\">R_allocator</a>","synthetic":true,"types":["libR_sys::R_allocator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libR_sys/struct.R_outpstream_st.html\" title=\"struct libR_sys::R_outpstream_st\">R_outpstream_st</a>","synthetic":true,"types":["libR_sys::R_outpstream_st"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libR_sys/struct.R_inpstream_st.html\" title=\"struct libR_sys::R_inpstream_st\">R_inpstream_st</a>","synthetic":true,"types":["libR_sys::R_inpstream_st"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libR_sys/struct.R_hashtab_type.html\" title=\"struct libR_sys::R_hashtab_type\">R_hashtab_type</a>","synthetic":true,"types":["libR_sys::R_hashtab_type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libR_sys/struct.structRstart.html\" title=\"struct libR_sys::structRstart\">structRstart</a>","synthetic":true,"types":["libR_sys::structRstart"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libR_sys/struct.R_altrep_class_t.html\" title=\"struct libR_sys::R_altrep_class_t\">R_altrep_class_t</a>","synthetic":true,"types":["libR_sys::R_altrep_class_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libR_sys/struct.R_GE_gcontext.html\" title=\"struct libR_sys::R_GE_gcontext\">R_GE_gcontext</a>","synthetic":true,"types":["libR_sys::R_GE_gcontext"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libR_sys/struct._DevDesc.html\" title=\"struct libR_sys::_DevDesc\">_DevDesc</a>","synthetic":true,"types":["libR_sys::_DevDesc"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libR_sys/struct.GESystemDesc.html\" title=\"struct libR_sys::GESystemDesc\">GESystemDesc</a>","synthetic":true,"types":["libR_sys::GESystemDesc"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libR_sys/struct._GEDevDesc.html\" title=\"struct libR_sys::_GEDevDesc\">_GEDevDesc</a>","synthetic":true,"types":["libR_sys::_GEDevDesc"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libR_sys/struct.__va_list_tag.html\" title=\"struct libR_sys::__va_list_tag\">__va_list_tag</a>","synthetic":true,"types":["libR_sys::__va_list_tag"]}];
implementors["libc"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statvfs.html\" title=\"struct libc::statvfs\">statvfs</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::not_x32::statvfs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.max_align_t.html\" title=\"struct libc::max_align_t\">max_align_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::align::max_align_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.clone_args.html\" title=\"struct libc::clone_args\">clone_args</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::align::clone_args"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigaction.html\" title=\"struct libc::sigaction\">sigaction</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::sigaction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statfs.html\" title=\"struct libc::statfs\">statfs</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::statfs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.flock.html\" title=\"struct libc::flock\">flock</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::flock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.flock64.html\" title=\"struct libc::flock64\">flock64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::flock64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.siginfo_t.html\" title=\"struct libc::siginfo_t\">siginfo_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::siginfo_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.stack_t.html\" title=\"struct libc::stack_t\">stack_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::stack_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.stat.html\" title=\"struct libc::stat\">stat</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::stat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.stat64.html\" title=\"struct libc::stat64\">stat64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::stat64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statfs64.html\" title=\"struct libc::statfs64\">statfs64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::statfs64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statvfs64.html\" title=\"struct libc::statvfs64\">statvfs64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::statvfs64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_attr_t.html\" title=\"struct libc::pthread_attr_t\">pthread_attr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::pthread_attr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct._libc_fpxreg.html\" title=\"struct libc::_libc_fpxreg\">_libc_fpxreg</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::_libc_fpxreg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct._libc_xmmreg.html\" title=\"struct libc::_libc_xmmreg\">_libc_xmmreg</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::_libc_xmmreg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct._libc_fpstate.html\" title=\"struct libc::_libc_fpstate\">_libc_fpstate</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::_libc_fpstate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.user_regs_struct.html\" title=\"struct libc::user_regs_struct\">user_regs_struct</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::user_regs_struct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.user.html\" title=\"struct libc::user\">user</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::user"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mcontext_t.html\" title=\"struct libc::mcontext_t\">mcontext_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::mcontext_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ipc_perm.html\" title=\"struct libc::ipc_perm\">ipc_perm</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::ipc_perm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.shmid_ds.html\" title=\"struct libc::shmid_ds\">shmid_ds</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::shmid_ds"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.seccomp_notif_sizes.html\" title=\"struct libc::seccomp_notif_sizes\">seccomp_notif_sizes</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::seccomp_notif_sizes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.user_fpregs_struct.html\" title=\"struct libc::user_fpregs_struct\">user_fpregs_struct</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::user_fpregs_struct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ucontext_t.html\" title=\"struct libc::ucontext_t\">ucontext_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::x86_64::ucontext_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigset_t.html\" title=\"struct libc::sigset_t\">sigset_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::sigset_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sysinfo.html\" title=\"struct libc::sysinfo\">sysinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::sysinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.msqid_ds.html\" title=\"struct libc::msqid_ds\">msqid_ds</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::msqid_ds"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.semid_ds.html\" title=\"struct libc::semid_ds\">semid_ds</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b64::semid_ds"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sem_t.html\" title=\"struct libc::sem_t\">sem_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::align::sem_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statx.html\" title=\"struct libc::statx\">statx</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::statx"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statx_timestamp.html\" title=\"struct libc::statx_timestamp\">statx_timestamp</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::statx_timestamp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.aiocb.html\" title=\"struct libc::aiocb\">aiocb</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::aiocb"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__exit_status.html\" title=\"struct libc::__exit_status\">__exit_status</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::__exit_status"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__timeval.html\" title=\"struct libc::__timeval\">__timeval</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::__timeval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.glob64_t.html\" title=\"struct libc::glob64_t\">glob64_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::glob64_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.msghdr.html\" title=\"struct libc::msghdr\">msghdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::msghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.cmsghdr.html\" title=\"struct libc::cmsghdr\">cmsghdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::cmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.termios.html\" title=\"struct libc::termios\">termios</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::termios"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mallinfo.html\" title=\"struct libc::mallinfo\">mallinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::mallinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mallinfo2.html\" title=\"struct libc::mallinfo2\">mallinfo2</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::mallinfo2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nl_pktinfo.html\" title=\"struct libc::nl_pktinfo\">nl_pktinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nl_pktinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nl_mmap_req.html\" title=\"struct libc::nl_mmap_req\">nl_mmap_req</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nl_mmap_req"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nl_mmap_hdr.html\" title=\"struct libc::nl_mmap_hdr\">nl_mmap_hdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nl_mmap_hdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rtentry.html\" title=\"struct libc::rtentry\">rtentry</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::rtentry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.timex.html\" title=\"struct libc::timex\">timex</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::timex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ntptimeval.html\" title=\"struct libc::ntptimeval\">ntptimeval</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::ntptimeval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.regex_t.html\" title=\"struct libc::regex_t\">regex_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::regex_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Chdr.html\" title=\"struct libc::Elf64_Chdr\">Elf64_Chdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::Elf64_Chdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Chdr.html\" title=\"struct libc::Elf32_Chdr\">Elf32_Chdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::Elf32_Chdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.seminfo.html\" title=\"struct libc::seminfo\">seminfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::seminfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ptrace_peeksiginfo_args.html\" title=\"struct libc::ptrace_peeksiginfo_args\">ptrace_peeksiginfo_args</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::ptrace_peeksiginfo_args"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__c_anonymous_ptrace_syscall_info_entry.html\" title=\"struct libc::__c_anonymous_ptrace_syscall_info_entry\">__c_anonymous_ptrace_syscall_info_entry</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_entry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__c_anonymous_ptrace_syscall_info_exit.html\" title=\"struct libc::__c_anonymous_ptrace_syscall_info_exit\">__c_anonymous_ptrace_syscall_info_exit</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_exit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__c_anonymous_ptrace_syscall_info_seccomp.html\" title=\"struct libc::__c_anonymous_ptrace_syscall_info_seccomp\">__c_anonymous_ptrace_syscall_info_seccomp</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_seccomp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ptrace_syscall_info.html\" title=\"struct libc::ptrace_syscall_info\">ptrace_syscall_info</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::ptrace_syscall_info"]},{"text":"impl Freeze for <a class=\"union\" href=\"libc/union.__c_anonymous_ptrace_syscall_info_data.html\" title=\"union libc::__c_anonymous_ptrace_syscall_info_data\">__c_anonymous_ptrace_syscall_info_data</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_data"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.utmpx.html\" title=\"struct libc::utmpx\">utmpx</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::utmpx"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.termios2.html\" title=\"struct libc::termios2\">termios2</a>","synthetic":true,"types":["libc::unix::linux_like::linux::arch::generic::termios2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.open_how.html\" title=\"struct libc::open_how\">open_how</a>","synthetic":true,"types":["libc::unix::linux_like::linux::non_exhaustive::open_how"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.fpos64_t.html\" title=\"enum libc::fpos64_t\">fpos64_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::fpos64_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rlimit64.html\" title=\"struct libc::rlimit64\">rlimit64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::rlimit64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.glob_t.html\" title=\"struct libc::glob_t\">glob_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::glob_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.passwd.html\" title=\"struct libc::passwd\">passwd</a>","synthetic":true,"types":["libc::unix::linux_like::linux::passwd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.spwd.html\" title=\"struct libc::spwd\">spwd</a>","synthetic":true,"types":["libc::unix::linux_like::linux::spwd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dqblk.html\" title=\"struct libc::dqblk\">dqblk</a>","synthetic":true,"types":["libc::unix::linux_like::linux::dqblk"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.signalfd_siginfo.html\" title=\"struct libc::signalfd_siginfo\">signalfd_siginfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::signalfd_siginfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.itimerspec.html\" title=\"struct libc::itimerspec\">itimerspec</a>","synthetic":true,"types":["libc::unix::linux_like::linux::itimerspec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fsid_t.html\" title=\"struct libc::fsid_t\">fsid_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::fsid_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.packet_mreq.html\" title=\"struct libc::packet_mreq\">packet_mreq</a>","synthetic":true,"types":["libc::unix::linux_like::linux::packet_mreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.cpu_set_t.html\" title=\"struct libc::cpu_set_t\">cpu_set_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::cpu_set_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.if_nameindex.html\" title=\"struct libc::if_nameindex\">if_nameindex</a>","synthetic":true,"types":["libc::unix::linux_like::linux::if_nameindex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.msginfo.html\" title=\"struct libc::msginfo\">msginfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::msginfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sembuf.html\" title=\"struct libc::sembuf\">sembuf</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sembuf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_event.html\" title=\"struct libc::input_event\">input_event</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_id.html\" title=\"struct libc::input_id\">input_id</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_id"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_absinfo.html\" title=\"struct libc::input_absinfo\">input_absinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_absinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_keymap_entry.html\" title=\"struct libc::input_keymap_entry\">input_keymap_entry</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_keymap_entry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_mask.html\" title=\"struct libc::input_mask\">input_mask</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_mask"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_replay.html\" title=\"struct libc::ff_replay\">ff_replay</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_replay"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_trigger.html\" title=\"struct libc::ff_trigger\">ff_trigger</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_trigger"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_envelope.html\" title=\"struct libc::ff_envelope\">ff_envelope</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_envelope"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_constant_effect.html\" title=\"struct libc::ff_constant_effect\">ff_constant_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_constant_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_ramp_effect.html\" title=\"struct libc::ff_ramp_effect\">ff_ramp_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_ramp_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_condition_effect.html\" title=\"struct libc::ff_condition_effect\">ff_condition_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_condition_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_periodic_effect.html\" title=\"struct libc::ff_periodic_effect\">ff_periodic_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_periodic_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_rumble_effect.html\" title=\"struct libc::ff_rumble_effect\">ff_rumble_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_rumble_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_effect.html\" title=\"struct libc::ff_effect\">ff_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.uinput_ff_upload.html\" title=\"struct libc::uinput_ff_upload\">uinput_ff_upload</a>","synthetic":true,"types":["libc::unix::linux_like::linux::uinput_ff_upload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.uinput_ff_erase.html\" title=\"struct libc::uinput_ff_erase\">uinput_ff_erase</a>","synthetic":true,"types":["libc::unix::linux_like::linux::uinput_ff_erase"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.uinput_abs_setup.html\" title=\"struct libc::uinput_abs_setup\">uinput_abs_setup</a>","synthetic":true,"types":["libc::unix::linux_like::linux::uinput_abs_setup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dl_phdr_info.html\" title=\"struct libc::dl_phdr_info\">dl_phdr_info</a>","synthetic":true,"types":["libc::unix::linux_like::linux::dl_phdr_info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Ehdr.html\" title=\"struct libc::Elf32_Ehdr\">Elf32_Ehdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Ehdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Ehdr.html\" title=\"struct libc::Elf64_Ehdr\">Elf64_Ehdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Ehdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Sym.html\" title=\"struct libc::Elf32_Sym\">Elf32_Sym</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Sym"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Sym.html\" title=\"struct libc::Elf64_Sym\">Elf64_Sym</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Sym"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Phdr.html\" title=\"struct libc::Elf32_Phdr\">Elf32_Phdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Phdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Phdr.html\" title=\"struct libc::Elf64_Phdr\">Elf64_Phdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Phdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Shdr.html\" title=\"struct libc::Elf32_Shdr\">Elf32_Shdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Shdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Shdr.html\" title=\"struct libc::Elf64_Shdr\">Elf64_Shdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Shdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ucred.html\" title=\"struct libc::ucred\">ucred</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ucred"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mntent.html\" title=\"struct libc::mntent\">mntent</a>","synthetic":true,"types":["libc::unix::linux_like::linux::mntent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.posix_spawn_file_actions_t.html\" title=\"struct libc::posix_spawn_file_actions_t\">posix_spawn_file_actions_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::posix_spawn_file_actions_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.posix_spawnattr_t.html\" title=\"struct libc::posix_spawnattr_t\">posix_spawnattr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::posix_spawnattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.genlmsghdr.html\" title=\"struct libc::genlmsghdr\">genlmsghdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::genlmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_pktinfo.html\" title=\"struct libc::in6_pktinfo\">in6_pktinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::in6_pktinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arpd_request.html\" title=\"struct libc::arpd_request\">arpd_request</a>","synthetic":true,"types":["libc::unix::linux_like::linux::arpd_request"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.inotify_event.html\" title=\"struct libc::inotify_event\">inotify_event</a>","synthetic":true,"types":["libc::unix::linux_like::linux::inotify_event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fanotify_response.html\" title=\"struct libc::fanotify_response\">fanotify_response</a>","synthetic":true,"types":["libc::unix::linux_like::linux::fanotify_response"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_vm.html\" title=\"struct libc::sockaddr_vm\">sockaddr_vm</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sockaddr_vm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.regmatch_t.html\" title=\"struct libc::regmatch_t\">regmatch_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::regmatch_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sock_extended_err.html\" title=\"struct libc::sock_extended_err\">sock_extended_err</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sock_extended_err"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__c_anonymous_sockaddr_can_tp.html\" title=\"struct libc::__c_anonymous_sockaddr_can_tp\">__c_anonymous_sockaddr_can_tp</a>","synthetic":true,"types":["libc::unix::linux_like::linux::__c_anonymous_sockaddr_can_tp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__c_anonymous_sockaddr_can_j1939.html\" title=\"struct libc::__c_anonymous_sockaddr_can_j1939\">__c_anonymous_sockaddr_can_j1939</a>","synthetic":true,"types":["libc::unix::linux_like::linux::__c_anonymous_sockaddr_can_j1939"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.can_filter.html\" title=\"struct libc::can_filter\">can_filter</a>","synthetic":true,"types":["libc::unix::linux_like::linux::can_filter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.j1939_filter.html\" title=\"struct libc::j1939_filter\">j1939_filter</a>","synthetic":true,"types":["libc::unix::linux_like::linux::j1939_filter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sock_filter.html\" title=\"struct libc::sock_filter\">sock_filter</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sock_filter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sock_fprog.html\" title=\"struct libc::sock_fprog\">sock_fprog</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sock_fprog"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.seccomp_data.html\" title=\"struct libc::seccomp_data\">seccomp_data</a>","synthetic":true,"types":["libc::unix::linux_like::linux::seccomp_data"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nlmsghdr.html\" title=\"struct libc::nlmsghdr\">nlmsghdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::nlmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nlmsgerr.html\" title=\"struct libc::nlmsgerr\">nlmsgerr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::nlmsgerr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nlattr.html\" title=\"struct libc::nlattr\">nlattr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::nlattr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_nl.html\" title=\"struct libc::sockaddr_nl\">sockaddr_nl</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sockaddr_nl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dirent.html\" title=\"struct libc::dirent\">dirent</a>","synthetic":true,"types":["libc::unix::linux_like::linux::dirent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dirent64.html\" title=\"struct libc::dirent64\">dirent64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::dirent64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_alg.html\" title=\"struct libc::sockaddr_alg\">sockaddr_alg</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sockaddr_alg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.uinput_setup.html\" title=\"struct libc::uinput_setup\">uinput_setup</a>","synthetic":true,"types":["libc::unix::linux_like::linux::uinput_setup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.uinput_user_dev.html\" title=\"struct libc::uinput_user_dev\">uinput_user_dev</a>","synthetic":true,"types":["libc::unix::linux_like::linux::uinput_user_dev"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.af_alg_iv.html\" title=\"struct libc::af_alg_iv\">af_alg_iv</a>","synthetic":true,"types":["libc::unix::linux_like::linux::af_alg_iv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mq_attr.html\" title=\"struct libc::mq_attr\">mq_attr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::mq_attr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sock_txtime.html\" title=\"struct libc::sock_txtime\">sock_txtime</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sock_txtime"]},{"text":"impl Freeze for <a class=\"union\" href=\"libc/union.__c_anonymous_sockaddr_can_can_addr.html\" title=\"union libc::__c_anonymous_sockaddr_can_can_addr\">__c_anonymous_sockaddr_can_can_addr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::__c_anonymous_sockaddr_can_can_addr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_can.html\" title=\"struct libc::sockaddr_can\">sockaddr_can</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sockaddr_can"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_mutexattr_t.html\" title=\"struct libc::pthread_mutexattr_t\">pthread_mutexattr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_mutexattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_rwlockattr_t.html\" title=\"struct libc::pthread_rwlockattr_t\">pthread_rwlockattr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_rwlockattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_condattr_t.html\" title=\"struct libc::pthread_condattr_t\">pthread_condattr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_condattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fanotify_event_metadata.html\" title=\"struct libc::fanotify_event_metadata\">fanotify_event_metadata</a>","synthetic":true,"types":["libc::unix::linux_like::linux::fanotify_event_metadata"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_cond_t.html\" title=\"struct libc::pthread_cond_t\">pthread_cond_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_cond_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_mutex_t.html\" title=\"struct libc::pthread_mutex_t\">pthread_mutex_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_mutex_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_rwlock_t.html\" title=\"struct libc::pthread_rwlock_t\">pthread_rwlock_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_rwlock_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.can_frame.html\" title=\"struct libc::can_frame\">can_frame</a>","synthetic":true,"types":["libc::unix::linux_like::linux::can_frame"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.canfd_frame.html\" title=\"struct libc::canfd_frame\">canfd_frame</a>","synthetic":true,"types":["libc::unix::linux_like::linux::canfd_frame"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.timezone.html\" title=\"enum libc::timezone\">timezone</a>","synthetic":true,"types":["libc::unix::linux_like::timezone"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in_addr.html\" title=\"struct libc::in_addr\">in_addr</a>","synthetic":true,"types":["libc::unix::linux_like::in_addr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ip_mreq.html\" title=\"struct libc::ip_mreq\">ip_mreq</a>","synthetic":true,"types":["libc::unix::linux_like::ip_mreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ip_mreqn.html\" title=\"struct libc::ip_mreqn\">ip_mreqn</a>","synthetic":true,"types":["libc::unix::linux_like::ip_mreqn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ip_mreq_source.html\" title=\"struct libc::ip_mreq_source\">ip_mreq_source</a>","synthetic":true,"types":["libc::unix::linux_like::ip_mreq_source"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr.html\" title=\"struct libc::sockaddr\">sockaddr</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_in.html\" title=\"struct libc::sockaddr_in\">sockaddr_in</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_in"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_in6.html\" title=\"struct libc::sockaddr_in6\">sockaddr_in6</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_in6"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.addrinfo.html\" title=\"struct libc::addrinfo\">addrinfo</a>","synthetic":true,"types":["libc::unix::linux_like::addrinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_ll.html\" title=\"struct libc::sockaddr_ll\">sockaddr_ll</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_ll"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fd_set.html\" title=\"struct libc::fd_set\">fd_set</a>","synthetic":true,"types":["libc::unix::linux_like::fd_set"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.tm.html\" title=\"struct libc::tm\">tm</a>","synthetic":true,"types":["libc::unix::linux_like::tm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sched_param.html\" title=\"struct libc::sched_param\">sched_param</a>","synthetic":true,"types":["libc::unix::linux_like::sched_param"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Dl_info.html\" title=\"struct libc::Dl_info\">Dl_info</a>","synthetic":true,"types":["libc::unix::linux_like::Dl_info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.lconv.html\" title=\"struct libc::lconv\">lconv</a>","synthetic":true,"types":["libc::unix::linux_like::lconv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in_pktinfo.html\" title=\"struct libc::in_pktinfo\">in_pktinfo</a>","synthetic":true,"types":["libc::unix::linux_like::in_pktinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ifaddrs.html\" title=\"struct libc::ifaddrs\">ifaddrs</a>","synthetic":true,"types":["libc::unix::linux_like::ifaddrs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_rtmsg.html\" title=\"struct libc::in6_rtmsg\">in6_rtmsg</a>","synthetic":true,"types":["libc::unix::linux_like::in6_rtmsg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arpreq.html\" title=\"struct libc::arpreq\">arpreq</a>","synthetic":true,"types":["libc::unix::linux_like::arpreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arpreq_old.html\" title=\"struct libc::arpreq_old\">arpreq_old</a>","synthetic":true,"types":["libc::unix::linux_like::arpreq_old"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arphdr.html\" title=\"struct libc::arphdr\">arphdr</a>","synthetic":true,"types":["libc::unix::linux_like::arphdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mmsghdr.html\" title=\"struct libc::mmsghdr\">mmsghdr</a>","synthetic":true,"types":["libc::unix::linux_like::mmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.epoll_event.html\" title=\"struct libc::epoll_event\">epoll_event</a>","synthetic":true,"types":["libc::unix::linux_like::epoll_event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_un.html\" title=\"struct libc::sockaddr_un\">sockaddr_un</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_un"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_storage.html\" title=\"struct libc::sockaddr_storage\">sockaddr_storage</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_storage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.utsname.html\" title=\"struct libc::utsname\">utsname</a>","synthetic":true,"types":["libc::unix::linux_like::utsname"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigevent.html\" title=\"struct libc::sigevent\">sigevent</a>","synthetic":true,"types":["libc::unix::linux_like::sigevent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_addr.html\" title=\"struct libc::in6_addr\">in6_addr</a>","synthetic":true,"types":["libc::unix::align::in6_addr"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.DIR.html\" title=\"enum libc::DIR\">DIR</a>","synthetic":true,"types":["libc::unix::DIR"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.group.html\" title=\"struct libc::group\">group</a>","synthetic":true,"types":["libc::unix::group"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.utimbuf.html\" title=\"struct libc::utimbuf\">utimbuf</a>","synthetic":true,"types":["libc::unix::utimbuf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.timeval.html\" title=\"struct libc::timeval\">timeval</a>","synthetic":true,"types":["libc::unix::timeval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.timespec.html\" title=\"struct libc::timespec\">timespec</a>","synthetic":true,"types":["libc::unix::timespec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rlimit.html\" title=\"struct libc::rlimit\">rlimit</a>","synthetic":true,"types":["libc::unix::rlimit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rusage.html\" title=\"struct libc::rusage\">rusage</a>","synthetic":true,"types":["libc::unix::rusage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ipv6_mreq.html\" title=\"struct libc::ipv6_mreq\">ipv6_mreq</a>","synthetic":true,"types":["libc::unix::ipv6_mreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.hostent.html\" title=\"struct libc::hostent\">hostent</a>","synthetic":true,"types":["libc::unix::hostent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.iovec.html\" title=\"struct libc::iovec\">iovec</a>","synthetic":true,"types":["libc::unix::iovec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pollfd.html\" title=\"struct libc::pollfd\">pollfd</a>","synthetic":true,"types":["libc::unix::pollfd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.winsize.html\" title=\"struct libc::winsize\">winsize</a>","synthetic":true,"types":["libc::unix::winsize"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.linger.html\" title=\"struct libc::linger\">linger</a>","synthetic":true,"types":["libc::unix::linger"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigval.html\" title=\"struct libc::sigval\">sigval</a>","synthetic":true,"types":["libc::unix::sigval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.itimerval.html\" title=\"struct libc::itimerval\">itimerval</a>","synthetic":true,"types":["libc::unix::itimerval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.tms.html\" title=\"struct libc::tms\">tms</a>","synthetic":true,"types":["libc::unix::tms"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.servent.html\" title=\"struct libc::servent\">servent</a>","synthetic":true,"types":["libc::unix::servent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.protoent.html\" title=\"struct libc::protoent\">protoent</a>","synthetic":true,"types":["libc::unix::protoent"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.FILE.html\" title=\"enum libc::FILE\">FILE</a>","synthetic":true,"types":["libc::unix::FILE"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.fpos_t.html\" title=\"enum libc::fpos_t\">fpos_t</a>","synthetic":true,"types":["libc::unix::fpos_t"]}];
implementors["lock_api"] = [{"text":"impl&lt;R, T&gt; !Freeze for <a class=\"struct\" href=\"lock_api/struct.Mutex.html\" title=\"struct lock_api::Mutex\">Mutex</a>&lt;R, T&gt;","synthetic":true,"types":["lock_api::mutex::Mutex"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MutexGuard.html\" title=\"struct lock_api::MutexGuard\">MutexGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::mutex::MutexGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MappedMutexGuard.html\" title=\"struct lock_api::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::mutex::MappedMutexGuard"]},{"text":"impl&lt;R, G&gt; !Freeze for <a class=\"struct\" href=\"lock_api/struct.RawReentrantMutex.html\" title=\"struct lock_api::RawReentrantMutex\">RawReentrantMutex</a>&lt;R, G&gt;","synthetic":true,"types":["lock_api::remutex::RawReentrantMutex"]},{"text":"impl&lt;R, G, T&gt; !Freeze for <a class=\"struct\" href=\"lock_api/struct.ReentrantMutex.html\" title=\"struct lock_api::ReentrantMutex\">ReentrantMutex</a>&lt;R, G, T&gt;","synthetic":true,"types":["lock_api::remutex::ReentrantMutex"]},{"text":"impl&lt;'a, R, G, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.ReentrantMutexGuard.html\" title=\"struct lock_api::ReentrantMutexGuard\">ReentrantMutexGuard</a>&lt;'a, R, G, T&gt;","synthetic":true,"types":["lock_api::remutex::ReentrantMutexGuard"]},{"text":"impl&lt;'a, R, G, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MappedReentrantMutexGuard.html\" title=\"struct lock_api::MappedReentrantMutexGuard\">MappedReentrantMutexGuard</a>&lt;'a, R, G, T&gt;","synthetic":true,"types":["lock_api::remutex::MappedReentrantMutexGuard"]},{"text":"impl&lt;R, T&gt; !Freeze for <a class=\"struct\" href=\"lock_api/struct.RwLock.html\" title=\"struct lock_api::RwLock\">RwLock</a>&lt;R, T&gt;","synthetic":true,"types":["lock_api::rwlock::RwLock"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.RwLockReadGuard.html\" title=\"struct lock_api::RwLockReadGuard\">RwLockReadGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::RwLockReadGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.RwLockWriteGuard.html\" title=\"struct lock_api::RwLockWriteGuard\">RwLockWriteGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::RwLockWriteGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.RwLockUpgradableReadGuard.html\" title=\"struct lock_api::RwLockUpgradableReadGuard\">RwLockUpgradableReadGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::RwLockUpgradableReadGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MappedRwLockReadGuard.html\" title=\"struct lock_api::MappedRwLockReadGuard\">MappedRwLockReadGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::MappedRwLockReadGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MappedRwLockWriteGuard.html\" title=\"struct lock_api::MappedRwLockWriteGuard\">MappedRwLockWriteGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::MappedRwLockWriteGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"lock_api/struct.GuardSend.html\" title=\"struct lock_api::GuardSend\">GuardSend</a>","synthetic":true,"types":["lock_api::GuardSend"]},{"text":"impl Freeze for <a class=\"struct\" href=\"lock_api/struct.GuardNoSend.html\" title=\"struct lock_api::GuardNoSend\">GuardNoSend</a>","synthetic":true,"types":["lock_api::GuardNoSend"]}];
implementors["log"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"log/enum.Level.html\" title=\"enum log::Level\">Level</a>","synthetic":true,"types":["log::Level"]},{"text":"impl Freeze for <a class=\"enum\" href=\"log/enum.LevelFilter.html\" title=\"enum log::LevelFilter\">LevelFilter</a>","synthetic":true,"types":["log::LevelFilter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.Record.html\" title=\"struct log::Record\">Record</a>&lt;'a&gt;","synthetic":true,"types":["log::Record"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.RecordBuilder.html\" title=\"struct log::RecordBuilder\">RecordBuilder</a>&lt;'a&gt;","synthetic":true,"types":["log::RecordBuilder"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.Metadata.html\" title=\"struct log::Metadata\">Metadata</a>&lt;'a&gt;","synthetic":true,"types":["log::Metadata"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.MetadataBuilder.html\" title=\"struct log::MetadataBuilder\">MetadataBuilder</a>&lt;'a&gt;","synthetic":true,"types":["log::MetadataBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"log/struct.SetLoggerError.html\" title=\"struct log::SetLoggerError\">SetLoggerError</a>","synthetic":true,"types":["log::SetLoggerError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"log/struct.ParseLevelError.html\" title=\"struct log::ParseLevelError\">ParseLevelError</a>","synthetic":true,"types":["log::ParseLevelError"]}];
implementors["matrixmultiply"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"matrixmultiply/enum.CGemmOption.html\" title=\"enum matrixmultiply::CGemmOption\">CGemmOption</a>","synthetic":true,"types":["matrixmultiply::gemm::CGemmOption"]}];
implementors["md5"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"md5/struct.Md5Core.html\" title=\"struct md5::Md5Core\">Md5Core</a>","synthetic":true,"types":["md5::Md5Core"]}];
implementors["memchr"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"memchr/struct.Memchr.html\" title=\"struct memchr::Memchr\">Memchr</a>&lt;'a&gt;","synthetic":true,"types":["memchr::memchr::iter::Memchr"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"memchr/struct.Memchr2.html\" title=\"struct memchr::Memchr2\">Memchr2</a>&lt;'a&gt;","synthetic":true,"types":["memchr::memchr::iter::Memchr2"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"memchr/struct.Memchr3.html\" title=\"struct memchr::Memchr3\">Memchr3</a>&lt;'a&gt;","synthetic":true,"types":["memchr::memchr::iter::Memchr3"]},{"text":"impl Freeze for <a class=\"enum\" href=\"memchr/memmem/enum.Prefilter.html\" title=\"enum memchr::memmem::Prefilter\">Prefilter</a>","synthetic":true,"types":["memchr::memmem::prefilter::Prefilter"]},{"text":"impl&lt;'h, 'n&gt; Freeze for <a class=\"struct\" href=\"memchr/memmem/struct.FindIter.html\" title=\"struct memchr::memmem::FindIter\">FindIter</a>&lt;'h, 'n&gt;","synthetic":true,"types":["memchr::memmem::FindIter"]},{"text":"impl&lt;'h, 'n&gt; Freeze for <a class=\"struct\" href=\"memchr/memmem/struct.FindRevIter.html\" title=\"struct memchr::memmem::FindRevIter\">FindRevIter</a>&lt;'h, 'n&gt;","synthetic":true,"types":["memchr::memmem::FindRevIter"]},{"text":"impl&lt;'n&gt; Freeze for <a class=\"struct\" href=\"memchr/memmem/struct.Finder.html\" title=\"struct memchr::memmem::Finder\">Finder</a>&lt;'n&gt;","synthetic":true,"types":["memchr::memmem::Finder"]},{"text":"impl&lt;'n&gt; Freeze for <a class=\"struct\" href=\"memchr/memmem/struct.FinderRev.html\" title=\"struct memchr::memmem::FinderRev\">FinderRev</a>&lt;'n&gt;","synthetic":true,"types":["memchr::memmem::FinderRev"]},{"text":"impl Freeze for <a class=\"struct\" href=\"memchr/memmem/struct.FinderBuilder.html\" title=\"struct memchr::memmem::FinderBuilder\">FinderBuilder</a>","synthetic":true,"types":["memchr::memmem::FinderBuilder"]}];
implementors["mime"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"mime/struct.Mime.html\" title=\"struct mime::Mime\">Mime</a>","synthetic":true,"types":["mime::Mime"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"mime/struct.Name.html\" title=\"struct mime::Name\">Name</a>&lt;'a&gt;","synthetic":true,"types":["mime::Name"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mime/struct.FromStrError.html\" title=\"struct mime::FromStrError\">FromStrError</a>","synthetic":true,"types":["mime::FromStrError"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"mime/struct.Params.html\" title=\"struct mime::Params\">Params</a>&lt;'a&gt;","synthetic":true,"types":["mime::Params"]}];
implementors["minidom"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"minidom/element/struct.Element.html\" title=\"struct minidom::element::Element\">Element</a>","synthetic":true,"types":["minidom::element::Element"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"minidom/element/struct.Children.html\" title=\"struct minidom::element::Children\">Children</a>&lt;'a&gt;","synthetic":true,"types":["minidom::element::Children"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"minidom/element/struct.ChildrenMut.html\" title=\"struct minidom::element::ChildrenMut\">ChildrenMut</a>&lt;'a&gt;","synthetic":true,"types":["minidom::element::ChildrenMut"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"minidom/element/struct.Texts.html\" title=\"struct minidom::element::Texts\">Texts</a>&lt;'a&gt;","synthetic":true,"types":["minidom::element::Texts"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"minidom/element/struct.TextsMut.html\" title=\"struct minidom::element::TextsMut\">TextsMut</a>&lt;'a&gt;","synthetic":true,"types":["minidom::element::TextsMut"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"minidom/element/struct.Attrs.html\" title=\"struct minidom::element::Attrs\">Attrs</a>&lt;'a&gt;","synthetic":true,"types":["minidom::element::Attrs"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"minidom/element/struct.AttrsMut.html\" title=\"struct minidom::element::AttrsMut\">AttrsMut</a>&lt;'a&gt;","synthetic":true,"types":["minidom::element::AttrsMut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"minidom/element/struct.ElementBuilder.html\" title=\"struct minidom::element::ElementBuilder\">ElementBuilder</a>","synthetic":true,"types":["minidom::element::ElementBuilder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"minidom/error/enum.Error.html\" title=\"enum minidom::error::Error\">Error</a>","synthetic":true,"types":["minidom::error::Error"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"minidom/enum.NSChoice.html\" title=\"enum minidom::NSChoice\">NSChoice</a>&lt;'a&gt;","synthetic":true,"types":["minidom::namespace_set::NSChoice"]},{"text":"impl Freeze for <a class=\"enum\" href=\"minidom/node/enum.Node.html\" title=\"enum minidom::node::Node\">Node</a>","synthetic":true,"types":["minidom::node::Node"]}];
implementors["miniz_oxide"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/deflate/core/enum.CompressionStrategy.html\" title=\"enum miniz_oxide::deflate::core::CompressionStrategy\">CompressionStrategy</a>","synthetic":true,"types":["miniz_oxide::deflate::core::CompressionStrategy"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/deflate/core/enum.TDEFLFlush.html\" title=\"enum miniz_oxide::deflate::core::TDEFLFlush\">TDEFLFlush</a>","synthetic":true,"types":["miniz_oxide::deflate::core::TDEFLFlush"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/deflate/core/enum.TDEFLStatus.html\" title=\"enum miniz_oxide::deflate::core::TDEFLStatus\">TDEFLStatus</a>","synthetic":true,"types":["miniz_oxide::deflate::core::TDEFLStatus"]},{"text":"impl Freeze for <a class=\"struct\" href=\"miniz_oxide/deflate/core/struct.CompressorOxide.html\" title=\"struct miniz_oxide::deflate::core::CompressorOxide\">CompressorOxide</a>","synthetic":true,"types":["miniz_oxide::deflate::core::CompressorOxide"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"miniz_oxide/deflate/core/struct.CallbackFunc.html\" title=\"struct miniz_oxide::deflate::core::CallbackFunc\">CallbackFunc</a>&lt;'a&gt;","synthetic":true,"types":["miniz_oxide::deflate::core::CallbackFunc"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/deflate/enum.CompressionLevel.html\" title=\"enum miniz_oxide::deflate::CompressionLevel\">CompressionLevel</a>","synthetic":true,"types":["miniz_oxide::deflate::CompressionLevel"]},{"text":"impl Freeze for <a class=\"struct\" href=\"miniz_oxide/inflate/core/struct.DecompressorOxide.html\" title=\"struct miniz_oxide::inflate::core::DecompressorOxide\">DecompressorOxide</a>","synthetic":true,"types":["miniz_oxide::inflate::core::DecompressorOxide"]},{"text":"impl Freeze for <a class=\"struct\" href=\"miniz_oxide/inflate/stream/struct.MinReset.html\" title=\"struct miniz_oxide::inflate::stream::MinReset\">MinReset</a>","synthetic":true,"types":["miniz_oxide::inflate::stream::MinReset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"miniz_oxide/inflate/stream/struct.ZeroReset.html\" title=\"struct miniz_oxide::inflate::stream::ZeroReset\">ZeroReset</a>","synthetic":true,"types":["miniz_oxide::inflate::stream::ZeroReset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"miniz_oxide/inflate/stream/struct.FullReset.html\" title=\"struct miniz_oxide::inflate::stream::FullReset\">FullReset</a>","synthetic":true,"types":["miniz_oxide::inflate::stream::FullReset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"miniz_oxide/inflate/stream/struct.InflateState.html\" title=\"struct miniz_oxide::inflate::stream::InflateState\">InflateState</a>","synthetic":true,"types":["miniz_oxide::inflate::stream::InflateState"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/inflate/enum.TINFLStatus.html\" title=\"enum miniz_oxide::inflate::TINFLStatus\">TINFLStatus</a>","synthetic":true,"types":["miniz_oxide::inflate::TINFLStatus"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/enum.MZFlush.html\" title=\"enum miniz_oxide::MZFlush\">MZFlush</a>","synthetic":true,"types":["miniz_oxide::MZFlush"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/enum.MZStatus.html\" title=\"enum miniz_oxide::MZStatus\">MZStatus</a>","synthetic":true,"types":["miniz_oxide::MZStatus"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/enum.MZError.html\" title=\"enum miniz_oxide::MZError\">MZError</a>","synthetic":true,"types":["miniz_oxide::MZError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"miniz_oxide/enum.DataFormat.html\" title=\"enum miniz_oxide::DataFormat\">DataFormat</a>","synthetic":true,"types":["miniz_oxide::DataFormat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"miniz_oxide/struct.StreamResult.html\" title=\"struct miniz_oxide::StreamResult\">StreamResult</a>","synthetic":true,"types":["miniz_oxide::StreamResult"]}];
implementors["mio"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"mio/struct.Interest.html\" title=\"struct mio::Interest\">Interest</a>","synthetic":true,"types":["mio::interest::Interest"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/struct.Poll.html\" title=\"struct mio::Poll\">Poll</a>","synthetic":true,"types":["mio::poll::Poll"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/struct.Registry.html\" title=\"struct mio::Registry\">Registry</a>","synthetic":true,"types":["mio::poll::Registry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"mio/unix/struct.SourceFd.html\" title=\"struct mio::unix::SourceFd\">SourceFd</a>&lt;'a&gt;","synthetic":true,"types":["mio::sys::unix::sourcefd::SourceFd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/net/struct.SocketAddr.html\" title=\"struct mio::net::SocketAddr\">SocketAddr</a>","synthetic":true,"types":["mio::sys::unix::uds::socketaddr::SocketAddr"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/unix/pipe/struct.Sender.html\" title=\"struct mio::unix::pipe::Sender\">Sender</a>","synthetic":true,"types":["mio::sys::unix::pipe::Sender"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/unix/pipe/struct.Receiver.html\" title=\"struct mio::unix::pipe::Receiver\">Receiver</a>","synthetic":true,"types":["mio::sys::unix::pipe::Receiver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/struct.Token.html\" title=\"struct mio::Token\">Token</a>","synthetic":true,"types":["mio::token::Token"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/struct.Waker.html\" title=\"struct mio::Waker\">Waker</a>","synthetic":true,"types":["mio::waker::Waker"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/event/struct.Event.html\" title=\"struct mio::event::Event\">Event</a>","synthetic":true,"types":["mio::event::event::Event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mio/event/struct.Events.html\" title=\"struct mio::event::Events\">Events</a>","synthetic":true,"types":["mio::event::events::Events"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"mio/event/struct.Iter.html\" title=\"struct mio::event::Iter\">Iter</a>&lt;'a&gt;","synthetic":true,"types":["mio::event::events::Iter"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.TcpListener.html\" title=\"struct mio::net::TcpListener\">TcpListener</a>","synthetic":true,"types":["mio::net::tcp::listener::TcpListener"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.TcpStream.html\" title=\"struct mio::net::TcpStream\">TcpStream</a>","synthetic":true,"types":["mio::net::tcp::stream::TcpStream"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.UdpSocket.html\" title=\"struct mio::net::UdpSocket\">UdpSocket</a>","synthetic":true,"types":["mio::net::udp::UdpSocket"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.UnixDatagram.html\" title=\"struct mio::net::UnixDatagram\">UnixDatagram</a>","synthetic":true,"types":["mio::net::uds::datagram::UnixDatagram"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.UnixListener.html\" title=\"struct mio::net::UnixListener\">UnixListener</a>","synthetic":true,"types":["mio::net::uds::listener::UnixListener"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"mio/net/struct.UnixStream.html\" title=\"struct mio::net::UnixStream\">UnixStream</a>","synthetic":true,"types":["mio::net::uds::stream::UnixStream"]}];
implementors["multimap"] = [{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"multimap/struct.OccupiedEntry.html\" title=\"struct multimap::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["multimap::entry::OccupiedEntry"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"multimap/struct.VacantEntry.html\" title=\"struct multimap::VacantEntry\">VacantEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["multimap::entry::VacantEntry"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"enum\" href=\"multimap/enum.Entry.html\" title=\"enum multimap::Entry\">Entry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["multimap::entry::Entry"]},{"text":"impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"multimap/struct.MultiMap.html\" title=\"struct multimap::MultiMap\">MultiMap</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["multimap::MultiMap"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"multimap/struct.Iter.html\" title=\"struct multimap::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["multimap::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"multimap/struct.IterMut.html\" title=\"struct multimap::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["multimap::IterMut"]}];
implementors["nalgebra"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"nalgebra/base/constraint/struct.ShapeConstraint.html\" title=\"struct nalgebra::base::constraint::ShapeConstraint\">ShapeConstraint</a>","synthetic":true,"types":["nalgebra::base::constraint::ShapeConstraint"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.X.html\" title=\"struct nalgebra::base::coordinates::X\">X</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::X"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.XY.html\" title=\"struct nalgebra::base::coordinates::XY\">XY</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::XY"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.XYZ.html\" title=\"struct nalgebra::base::coordinates::XYZ\">XYZ</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::XYZ"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.XYZW.html\" title=\"struct nalgebra::base::coordinates::XYZW\">XYZW</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::XYZW"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.XYZWA.html\" title=\"struct nalgebra::base::coordinates::XYZWA\">XYZWA</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::XYZWA"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.XYZWAB.html\" title=\"struct nalgebra::base::coordinates::XYZWAB\">XYZWAB</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::XYZWAB"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.IJKW.html\" title=\"struct nalgebra::base::coordinates::IJKW\">IJKW</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::IJKW"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.M2x2.html\" title=\"struct nalgebra::base::coordinates::M2x2\">M2x2</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::M2x2"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.M2x3.html\" title=\"struct nalgebra::base::coordinates::M2x3\">M2x3</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::M2x3"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.M2x4.html\" title=\"struct nalgebra::base::coordinates::M2x4\">M2x4</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::M2x4"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.M2x5.html\" title=\"struct nalgebra::base::coordinates::M2x5\">M2x5</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::M2x5"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.M2x6.html\" title=\"struct nalgebra::base::coordinates::M2x6\">M2x6</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::M2x6"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.M3x2.html\" title=\"struct nalgebra::base::coordinates::M3x2\">M3x2</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::M3x2"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.M3x3.html\" title=\"struct nalgebra::base::coordinates::M3x3\">M3x3</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::M3x3"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.M3x4.html\" title=\"struct nalgebra::base::coordinates::M3x4\">M3x4</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::M3x4"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.M3x5.html\" title=\"struct nalgebra::base::coordinates::M3x5\">M3x5</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::M3x5"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.M3x6.html\" title=\"struct nalgebra::base::coordinates::M3x6\">M3x6</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::M3x6"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.M4x2.html\" title=\"struct nalgebra::base::coordinates::M4x2\">M4x2</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::M4x2"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.M4x3.html\" title=\"struct nalgebra::base::coordinates::M4x3\">M4x3</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::M4x3"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.M4x4.html\" title=\"struct nalgebra::base::coordinates::M4x4\">M4x4</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::M4x4"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.M4x5.html\" title=\"struct nalgebra::base::coordinates::M4x5\">M4x5</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::M4x5"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.M4x6.html\" title=\"struct nalgebra::base::coordinates::M4x6\">M4x6</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::M4x6"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.M5x2.html\" title=\"struct nalgebra::base::coordinates::M5x2\">M5x2</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::M5x2"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.M5x3.html\" title=\"struct nalgebra::base::coordinates::M5x3\">M5x3</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::M5x3"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.M5x4.html\" title=\"struct nalgebra::base::coordinates::M5x4\">M5x4</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::M5x4"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.M5x5.html\" title=\"struct nalgebra::base::coordinates::M5x5\">M5x5</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::M5x5"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.M5x6.html\" title=\"struct nalgebra::base::coordinates::M5x6\">M5x6</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::M5x6"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.M6x2.html\" title=\"struct nalgebra::base::coordinates::M6x2\">M6x2</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::M6x2"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.M6x3.html\" title=\"struct nalgebra::base::coordinates::M6x3\">M6x3</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::M6x3"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.M6x4.html\" title=\"struct nalgebra::base::coordinates::M6x4\">M6x4</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::M6x4"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.M6x5.html\" title=\"struct nalgebra::base::coordinates::M6x5\">M6x5</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::M6x5"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/coordinates/struct.M6x6.html\" title=\"struct nalgebra::base::coordinates::M6x6\">M6x6</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::coordinates::M6x6"]},{"text":"impl Freeze for <a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a>","synthetic":true,"types":["nalgebra::base::default_allocator::DefaultAllocator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Dynamic.html\" title=\"struct nalgebra::base::dimension::Dynamic\">Dynamic</a>","synthetic":true,"types":["nalgebra::base::dimension::Dynamic"]},{"text":"impl&lt;const R:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.1/std/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;R&gt;","synthetic":true,"types":["nalgebra::base::dimension::Const"]},{"text":"impl&lt;'a, T, R, C, S&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/iter/struct.MatrixIter.html\" title=\"struct nalgebra::base::iter::MatrixIter\">MatrixIter</a>&lt;'a, T, R, C, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, R, C&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/storage/trait.RawStorage.html#associatedtype.CStride\" title=\"type nalgebra::base::storage::RawStorage::CStride\">CStride</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, R, C&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/storage/trait.RawStorage.html#associatedtype.RStride\" title=\"type nalgebra::base::storage::RawStorage::RStride\">RStride</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::iter::MatrixIter"]},{"text":"impl&lt;'a, T, R, C, S&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/iter/struct.MatrixIterMut.html\" title=\"struct nalgebra::base::iter::MatrixIterMut\">MatrixIterMut</a>&lt;'a, T, R, C, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, R, C&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/storage/trait.RawStorage.html#associatedtype.CStride\" title=\"type nalgebra::base::storage::RawStorage::CStride\">CStride</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"nalgebra/base/storage/trait.RawStorage.html\" title=\"trait nalgebra::base::storage::RawStorage\">RawStorage</a>&lt;T, R, C&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/storage/trait.RawStorage.html#associatedtype.RStride\" title=\"type nalgebra::base::storage::RawStorage::RStride\">RStride</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::iter::MatrixIterMut"]},{"text":"impl&lt;'a, T, R, C, S&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/iter/struct.RowIter.html\" title=\"struct nalgebra::base::iter::RowIter\">RowIter</a>&lt;'a, T, R, C, S&gt;","synthetic":true,"types":["nalgebra::base::iter::RowIter"]},{"text":"impl&lt;'a, T, R, C, S&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/iter/struct.RowIterMut.html\" title=\"struct nalgebra::base::iter::RowIterMut\">RowIterMut</a>&lt;'a, T, R, C, S&gt;","synthetic":true,"types":["nalgebra::base::iter::RowIterMut"]},{"text":"impl&lt;'a, T, R, C, S&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/iter/struct.ColumnIter.html\" title=\"struct nalgebra::base::iter::ColumnIter\">ColumnIter</a>&lt;'a, T, R, C, S&gt;","synthetic":true,"types":["nalgebra::base::iter::ColumnIter"]},{"text":"impl&lt;'a, T, R, C, S&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/iter/struct.ColumnIterMut.html\" title=\"struct nalgebra::base::iter::ColumnIterMut\">ColumnIterMut</a>&lt;'a, T, R, C, S&gt;","synthetic":true,"types":["nalgebra::base::iter::ColumnIterMut"]},{"text":"impl&lt;T, const R:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.1/std/primitive.usize.html\">usize</a>, const C:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.1/std/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/struct.ArrayStorage.html\" title=\"struct nalgebra::base::ArrayStorage\">ArrayStorage</a>&lt;T, R, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::array_storage::ArrayStorage"]},{"text":"impl&lt;T, R, C, S&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, R, C, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::matrix::Matrix"]},{"text":"impl&lt;'a, T, R, C, RStride, CStride&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/struct.SliceStorage.html\" title=\"struct nalgebra::base::SliceStorage\">SliceStorage</a>&lt;'a, T, R, C, RStride, CStride&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;CStride: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;RStride: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::matrix_slice::SliceStorage"]},{"text":"impl&lt;'a, T, R, C, RStride, CStride&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/struct.SliceStorageMut.html\" title=\"struct nalgebra::base::SliceStorageMut\">SliceStorageMut</a>&lt;'a, T, R, C, RStride, CStride&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;CStride: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;RStride: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::matrix_slice::SliceStorageMut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"nalgebra/base/struct.EuclideanNorm.html\" title=\"struct nalgebra::base::EuclideanNorm\">EuclideanNorm</a>","synthetic":true,"types":["nalgebra::base::norm::EuclideanNorm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"nalgebra/base/struct.LpNorm.html\" title=\"struct nalgebra::base::LpNorm\">LpNorm</a>","synthetic":true,"types":["nalgebra::base::norm::LpNorm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"nalgebra/base/struct.UniformNorm.html\" title=\"struct nalgebra::base::UniformNorm\">UniformNorm</a>","synthetic":true,"types":["nalgebra::base::norm::UniformNorm"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::unit::Unit"]},{"text":"impl&lt;T, R, C&gt; Freeze for <a class=\"struct\" href=\"nalgebra/base/struct.VecStorage.html\" title=\"struct nalgebra::base::VecStorage\">VecStorage</a>&lt;T, R, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::base::vec_storage::VecStorage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"nalgebra/base/uninit/struct.Init.html\" title=\"struct nalgebra::base::uninit::Init\">Init</a>","synthetic":true,"types":["nalgebra::base::uninit::Init"]},{"text":"impl Freeze for <a class=\"struct\" href=\"nalgebra/base/uninit/struct.Uninit.html\" title=\"struct nalgebra::base::uninit::Uninit\">Uninit</a>","synthetic":true,"types":["nalgebra::base::uninit::Uninit"]},{"text":"impl&lt;T, D&gt; !Freeze for <a class=\"struct\" href=\"nalgebra/geometry/struct.OPoint.html\" title=\"struct nalgebra::geometry::OPoint\">OPoint</a>&lt;T, D&gt;","synthetic":true,"types":["nalgebra::geometry::point::OPoint"]},{"text":"impl&lt;T, const D:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.1/std/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::geometry::rotation::Rotation"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/geometry/struct.Quaternion.html\" title=\"struct nalgebra::geometry::Quaternion\">Quaternion</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::geometry::quaternion::Quaternion"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/geometry/struct.DualQuaternion.html\" title=\"struct nalgebra::geometry::DualQuaternion\">DualQuaternion</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::geometry::dual_quaternion::DualQuaternion"]},{"text":"impl&lt;T, const D:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.1/std/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"nalgebra/geometry/struct.Translation.html\" title=\"struct nalgebra::geometry::Translation\">Translation</a>&lt;T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::geometry::translation::Translation"]},{"text":"impl&lt;T, const D:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.1/std/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"nalgebra/geometry/struct.Scale.html\" title=\"struct nalgebra::geometry::Scale\">Scale</a>&lt;T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::geometry::scale::Scale"]},{"text":"impl&lt;T, R, const D:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.1/std/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"nalgebra/geometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::Isometry\">Isometry</a>&lt;T, R, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::geometry::isometry::Isometry"]},{"text":"impl&lt;T, R, const D:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.1/std/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"nalgebra/geometry/struct.Similarity.html\" title=\"struct nalgebra::geometry::Similarity\">Similarity</a>&lt;T, R, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::geometry::similarity::Similarity"]},{"text":"impl Freeze for <a class=\"enum\" href=\"nalgebra/geometry/enum.TGeneral.html\" title=\"enum nalgebra::geometry::TGeneral\">TGeneral</a>","synthetic":true,"types":["nalgebra::geometry::transform::TGeneral"]},{"text":"impl Freeze for <a class=\"enum\" href=\"nalgebra/geometry/enum.TProjective.html\" title=\"enum nalgebra::geometry::TProjective\">TProjective</a>","synthetic":true,"types":["nalgebra::geometry::transform::TProjective"]},{"text":"impl Freeze for <a class=\"enum\" href=\"nalgebra/geometry/enum.TAffine.html\" title=\"enum nalgebra::geometry::TAffine\">TAffine</a>","synthetic":true,"types":["nalgebra::geometry::transform::TAffine"]},{"text":"impl&lt;T, C, const D:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.1/std/primitive.usize.html\">usize</a>&gt; !Freeze for <a class=\"struct\" href=\"nalgebra/geometry/struct.Transform.html\" title=\"struct nalgebra::geometry::Transform\">Transform</a>&lt;T, C, D&gt;","synthetic":true,"types":["nalgebra::geometry::transform::Transform"]},{"text":"impl&lt;T, D, S&gt; Freeze for <a class=\"struct\" href=\"nalgebra/geometry/struct.Reflection.html\" title=\"struct nalgebra::geometry::Reflection\">Reflection</a>&lt;T, D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::geometry::reflection::Reflection"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/geometry/struct.Orthographic3.html\" title=\"struct nalgebra::geometry::Orthographic3\">Orthographic3</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::geometry::orthographic::Orthographic3"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/geometry/struct.Perspective3.html\" title=\"struct nalgebra::geometry::Perspective3\">Perspective3</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::geometry::perspective::Perspective3"]},{"text":"impl&lt;T, R, C&gt; !Freeze for <a class=\"struct\" href=\"nalgebra/linalg/struct.Bidiagonal.html\" title=\"struct nalgebra::linalg::Bidiagonal\">Bidiagonal</a>&lt;T, R, C&gt;","synthetic":true,"types":["nalgebra::linalg::bidiagonal::Bidiagonal"]},{"text":"impl&lt;T, D&gt; !Freeze for <a class=\"struct\" href=\"nalgebra/linalg/struct.Cholesky.html\" title=\"struct nalgebra::linalg::Cholesky\">Cholesky</a>&lt;T, D&gt;","synthetic":true,"types":["nalgebra::linalg::cholesky::Cholesky"]},{"text":"impl&lt;T, R, C&gt; !Freeze for <a class=\"struct\" href=\"nalgebra/linalg/struct.ColPivQR.html\" title=\"struct nalgebra::linalg::ColPivQR\">ColPivQR</a>&lt;T, R, C&gt;","synthetic":true,"types":["nalgebra::linalg::col_piv_qr::ColPivQR"]},{"text":"impl&lt;T, R, C&gt; !Freeze for <a class=\"struct\" href=\"nalgebra/linalg/struct.FullPivLU.html\" title=\"struct nalgebra::linalg::FullPivLU\">FullPivLU</a>&lt;T, R, C&gt;","synthetic":true,"types":["nalgebra::linalg::full_piv_lu::FullPivLU"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"nalgebra/linalg/givens/struct.GivensRotation.html\" title=\"struct nalgebra::linalg::givens::GivensRotation\">GivensRotation</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as <a class=\"trait\" href=\"nalgebra/trait.ComplexField.html\" title=\"trait nalgebra::ComplexField\">ComplexField</a>&gt;::<a class=\"associatedtype\" href=\"nalgebra/trait.ComplexField.html#associatedtype.RealField\" title=\"type nalgebra::ComplexField::RealField\">RealField</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["nalgebra::linalg::givens::GivensRotation"]},{"text":"impl&lt;T, D&gt; !Freeze for <a class=\"struct\" href=\"nalgebra/linalg/struct.Hessenberg.html\" title=\"struct nalgebra::linalg::Hessenberg\">Hessenberg</a>&lt;T, D&gt;","synthetic":true,"types":["nalgebra::linalg::hessenberg::Hessenberg"]},{"text":"impl&lt;T, R, C&gt; !Freeze for <a class=\"struct\" href=\"nalgebra/linalg/struct.LU.html\" title=\"struct nalgebra::linalg::LU\">LU</a>&lt;T, R, C&gt;","synthetic":true,"types":["nalgebra::linalg::lu::LU"]},{"text":"impl&lt;D&gt; !Freeze for <a class=\"struct\" href=\"nalgebra/linalg/struct.PermutationSequence.html\" title=\"struct nalgebra::linalg::PermutationSequence\">PermutationSequence</a>&lt;D&gt;","synthetic":true,"types":["nalgebra::linalg::permutation_sequence::PermutationSequence"]},{"text":"impl&lt;T, R, C&gt; !Freeze for <a class=\"struct\" href=\"nalgebra/linalg/struct.QR.html\" title=\"struct nalgebra::linalg::QR\">QR</a>&lt;T, R, C&gt;","synthetic":true,"types":["nalgebra::linalg::qr::QR"]},{"text":"impl&lt;T, D&gt; !Freeze for <a class=\"struct\" href=\"nalgebra/linalg/struct.Schur.html\" title=\"struct nalgebra::linalg::Schur\">Schur</a>&lt;T, D&gt;","synthetic":true,"types":["nalgebra::linalg::schur::Schur"]},{"text":"impl&lt;T, R, C&gt; !Freeze for <a class=\"struct\" href=\"nalgebra/linalg/struct.SVD.html\" title=\"struct nalgebra::linalg::SVD\">SVD</a>&lt;T, R, C&gt;","synthetic":true,"types":["nalgebra::linalg::svd::SVD"]},{"text":"impl&lt;T, D&gt; !Freeze for <a class=\"struct\" href=\"nalgebra/linalg/struct.SymmetricEigen.html\" title=\"struct nalgebra::linalg::SymmetricEigen\">SymmetricEigen</a>&lt;T, D&gt;","synthetic":true,"types":["nalgebra::linalg::symmetric_eigen::SymmetricEigen"]},{"text":"impl&lt;T, D&gt; !Freeze for <a class=\"struct\" href=\"nalgebra/linalg/struct.SymmetricTridiagonal.html\" title=\"struct nalgebra::linalg::SymmetricTridiagonal\">SymmetricTridiagonal</a>&lt;T, D&gt;","synthetic":true,"types":["nalgebra::linalg::symmetric_tridiagonal::SymmetricTridiagonal"]},{"text":"impl&lt;T, D&gt; !Freeze for <a class=\"struct\" href=\"nalgebra/linalg/struct.UDU.html\" title=\"struct nalgebra::linalg::UDU\">UDU</a>&lt;T, D&gt;","synthetic":true,"types":["nalgebra::linalg::udu::UDU"]}];
implementors["nanorand"] = [{"text":"impl&lt;InternalGenerator, const OUTPUT:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.1/std/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"nanorand/buffer/struct.BufferedRng.html\" title=\"struct nanorand::buffer::BufferedRng\">BufferedRng</a>&lt;InternalGenerator, OUTPUT&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;InternalGenerator: Freeze,&nbsp;</span>","synthetic":true,"types":["nanorand::buffer::BufferedRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"nanorand/rand/wyrand/struct.WyRand.html\" title=\"struct nanorand::rand::wyrand::WyRand\">WyRand</a>","synthetic":true,"types":["nanorand::rand::wyrand::WyRand"]},{"text":"impl Freeze for <a class=\"struct\" href=\"nanorand/rand/pcg64/struct.Pcg64.html\" title=\"struct nanorand::rand::pcg64::Pcg64\">Pcg64</a>","synthetic":true,"types":["nanorand::rand::pcg64::Pcg64"]},{"text":"impl&lt;const ROUNDS:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.1/std/primitive.u8.html\">u8</a>&gt; Freeze for <a class=\"struct\" href=\"nanorand/rand/chacha/struct.ChaCha.html\" title=\"struct nanorand::rand::chacha::ChaCha\">ChaCha</a>&lt;ROUNDS&gt;","synthetic":true,"types":["nanorand::rand::chacha::ChaCha"]}];
implementors["native_tls"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"native_tls/struct.Error.html\" title=\"struct native_tls::Error\">Error</a>","synthetic":true,"types":["native_tls::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"native_tls/struct.Identity.html\" title=\"struct native_tls::Identity\">Identity</a>","synthetic":true,"types":["native_tls::Identity"]},{"text":"impl Freeze for <a class=\"struct\" href=\"native_tls/struct.Certificate.html\" title=\"struct native_tls::Certificate\">Certificate</a>","synthetic":true,"types":["native_tls::Certificate"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"native_tls/struct.MidHandshakeTlsStream.html\" title=\"struct native_tls::MidHandshakeTlsStream\">MidHandshakeTlsStream</a>&lt;S&gt;","synthetic":true,"types":["native_tls::MidHandshakeTlsStream"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"enum\" href=\"native_tls/enum.HandshakeError.html\" title=\"enum native_tls::HandshakeError\">HandshakeError</a>&lt;S&gt;","synthetic":true,"types":["native_tls::HandshakeError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"native_tls/enum.Protocol.html\" title=\"enum native_tls::Protocol\">Protocol</a>","synthetic":true,"types":["native_tls::Protocol"]},{"text":"impl Freeze for <a class=\"struct\" href=\"native_tls/struct.TlsConnectorBuilder.html\" title=\"struct native_tls::TlsConnectorBuilder\">TlsConnectorBuilder</a>","synthetic":true,"types":["native_tls::TlsConnectorBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"native_tls/struct.TlsConnector.html\" title=\"struct native_tls::TlsConnector\">TlsConnector</a>","synthetic":true,"types":["native_tls::TlsConnector"]},{"text":"impl Freeze for <a class=\"struct\" href=\"native_tls/struct.TlsAcceptorBuilder.html\" title=\"struct native_tls::TlsAcceptorBuilder\">TlsAcceptorBuilder</a>","synthetic":true,"types":["native_tls::TlsAcceptorBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"native_tls/struct.TlsAcceptor.html\" title=\"struct native_tls::TlsAcceptor\">TlsAcceptor</a>","synthetic":true,"types":["native_tls::TlsAcceptor"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"native_tls/struct.TlsStream.html\" title=\"struct native_tls::TlsStream\">TlsStream</a>&lt;S&gt;","synthetic":true,"types":["native_tls::TlsStream"]}];
implementors["ndarray"] = [{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"ndarray/struct.OwnedRepr.html\" title=\"struct ndarray::OwnedRepr\">OwnedRepr</a>&lt;A&gt;","synthetic":true,"types":["ndarray::data_repr::OwnedRepr"]},{"text":"impl&lt;'a, D&gt; Freeze for <a class=\"struct\" href=\"ndarray/iter/struct.Axes.html\" title=\"struct ndarray::iter::Axes\">Axes</a>&lt;'a, D&gt;","synthetic":true,"types":["ndarray::dimension::axes::Axes"]},{"text":"impl&lt;D&gt; Freeze for <a class=\"struct\" href=\"ndarray/iter/struct.Indices.html\" title=\"struct ndarray::iter::Indices\">Indices</a>&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["ndarray::indexes::Indices"]},{"text":"impl&lt;D&gt; Freeze for <a class=\"struct\" href=\"ndarray/iter/struct.IndicesIter.html\" title=\"struct ndarray::iter::IndicesIter\">IndicesIter</a>&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["ndarray::indexes::IndicesIter"]},{"text":"impl&lt;'a, A, D&gt; Freeze for <a class=\"struct\" href=\"ndarray/iter/struct.AxisChunksIter.html\" title=\"struct ndarray::iter::AxisChunksIter\">AxisChunksIter</a>&lt;'a, A, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["ndarray::iterators::AxisChunksIter"]},{"text":"impl&lt;'a, A, D&gt; Freeze for <a class=\"struct\" href=\"ndarray/iter/struct.AxisChunksIterMut.html\" title=\"struct ndarray::iter::AxisChunksIterMut\">AxisChunksIterMut</a>&lt;'a, A, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["ndarray::iterators::AxisChunksIterMut"]},{"text":"impl&lt;'a, A, D&gt; Freeze for <a class=\"struct\" href=\"ndarray/iter/struct.AxisIter.html\" title=\"struct ndarray::iter::AxisIter\">AxisIter</a>&lt;'a, A, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["ndarray::iterators::AxisIter"]},{"text":"impl&lt;'a, A, D&gt; Freeze for <a class=\"struct\" href=\"ndarray/iter/struct.AxisIterMut.html\" title=\"struct ndarray::iter::AxisIterMut\">AxisIterMut</a>&lt;'a, A, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["ndarray::iterators::AxisIterMut"]},{"text":"impl&lt;'a, A, D&gt; Freeze for <a class=\"struct\" href=\"ndarray/iter/struct.ExactChunks.html\" title=\"struct ndarray::iter::ExactChunks\">ExactChunks</a>&lt;'a, A, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["ndarray::iterators::chunks::ExactChunks"]},{"text":"impl&lt;'a, A, D&gt; Freeze for <a class=\"struct\" href=\"ndarray/iter/struct.ExactChunksIter.html\" title=\"struct ndarray::iter::ExactChunksIter\">ExactChunksIter</a>&lt;'a, A, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["ndarray::iterators::chunks::ExactChunksIter"]},{"text":"impl&lt;'a, A, D&gt; Freeze for <a class=\"struct\" href=\"ndarray/iter/struct.ExactChunksIterMut.html\" title=\"struct ndarray::iter::ExactChunksIterMut\">ExactChunksIterMut</a>&lt;'a, A, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["ndarray::iterators::chunks::ExactChunksIterMut"]},{"text":"impl&lt;'a, A, D&gt; Freeze for <a class=\"struct\" href=\"ndarray/iter/struct.ExactChunksMut.html\" title=\"struct ndarray::iter::ExactChunksMut\">ExactChunksMut</a>&lt;'a, A, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["ndarray::iterators::chunks::ExactChunksMut"]},{"text":"impl&lt;'a, A, D&gt; Freeze for <a class=\"struct\" href=\"ndarray/iter/struct.IndexedIter.html\" title=\"struct ndarray::iter::IndexedIter\">IndexedIter</a>&lt;'a, A, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["ndarray::iterators::IndexedIter"]},{"text":"impl&lt;'a, A, D&gt; Freeze for <a class=\"struct\" href=\"ndarray/iter/struct.IndexedIterMut.html\" title=\"struct ndarray::iter::IndexedIterMut\">IndexedIterMut</a>&lt;'a, A, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["ndarray::iterators::IndexedIterMut"]},{"text":"impl&lt;'a, A, D&gt; Freeze for <a class=\"struct\" href=\"ndarray/iter/struct.Iter.html\" title=\"struct ndarray::iter::Iter\">Iter</a>&lt;'a, A, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["ndarray::iterators::Iter"]},{"text":"impl&lt;'a, A, D&gt; Freeze for <a class=\"struct\" href=\"ndarray/iter/struct.IterMut.html\" title=\"struct ndarray::iter::IterMut\">IterMut</a>&lt;'a, A, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["ndarray::iterators::IterMut"]},{"text":"impl&lt;'a, A, D&gt; Freeze for <a class=\"struct\" href=\"ndarray/iter/struct.Lanes.html\" title=\"struct ndarray::iter::Lanes\">Lanes</a>&lt;'a, A, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["ndarray::iterators::lanes::Lanes"]},{"text":"impl&lt;'a, A, D&gt; Freeze for <a class=\"struct\" href=\"ndarray/iter/struct.LanesIter.html\" title=\"struct ndarray::iter::LanesIter\">LanesIter</a>&lt;'a, A, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["ndarray::iterators::LanesIter"]},{"text":"impl&lt;'a, A, D&gt; Freeze for <a class=\"struct\" href=\"ndarray/iter/struct.LanesIterMut.html\" title=\"struct ndarray::iter::LanesIterMut\">LanesIterMut</a>&lt;'a, A, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["ndarray::iterators::LanesIterMut"]},{"text":"impl&lt;'a, A, D&gt; Freeze for <a class=\"struct\" href=\"ndarray/iter/struct.LanesMut.html\" title=\"struct ndarray::iter::LanesMut\">LanesMut</a>&lt;'a, A, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["ndarray::iterators::lanes::LanesMut"]},{"text":"impl&lt;'a, A, D&gt; Freeze for <a class=\"struct\" href=\"ndarray/iter/struct.Windows.html\" title=\"struct ndarray::iter::Windows\">Windows</a>&lt;'a, A, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["ndarray::iterators::windows::Windows"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ndarray/struct.ShapeError.html\" title=\"struct ndarray::ShapeError\">ShapeError</a>","synthetic":true,"types":["ndarray::error::ShapeError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"ndarray/enum.ErrorKind.html\" title=\"enum ndarray::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["ndarray::error::ErrorKind"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"ndarray/struct.MathCell.html\" title=\"struct ndarray::MathCell\">MathCell</a>&lt;T&gt;","synthetic":true,"types":["ndarray::math_cell::MathCell"]},{"text":"impl Freeze for <a class=\"enum\" href=\"ndarray/enum.Order.html\" title=\"enum ndarray::Order\">Order</a>","synthetic":true,"types":["ndarray::order::Order"]},{"text":"impl&lt;D&gt; Freeze for <a class=\"struct\" href=\"ndarray/struct.Shape.html\" title=\"struct ndarray::Shape\">Shape</a>&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["ndarray::shape_builder::Shape"]},{"text":"impl&lt;D&gt; Freeze for <a class=\"struct\" href=\"ndarray/struct.StrideShape.html\" title=\"struct ndarray::StrideShape\">StrideShape</a>&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["ndarray::shape_builder::StrideShape"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ndarray/struct.Slice.html\" title=\"struct ndarray::Slice\">Slice</a>","synthetic":true,"types":["ndarray::slice::Slice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ndarray/struct.NewAxis.html\" title=\"struct ndarray::NewAxis\">NewAxis</a>","synthetic":true,"types":["ndarray::slice::NewAxis"]},{"text":"impl Freeze for <a class=\"enum\" href=\"ndarray/enum.SliceInfoElem.html\" title=\"enum ndarray::SliceInfoElem\">SliceInfoElem</a>","synthetic":true,"types":["ndarray::slice::SliceInfoElem"]},{"text":"impl&lt;T, Din, Dout&gt; Freeze for <a class=\"struct\" href=\"ndarray/struct.SliceInfo.html\" title=\"struct ndarray::SliceInfo\">SliceInfo</a>&lt;T, Din, Dout&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["ndarray::slice::SliceInfo"]},{"text":"impl&lt;Parts, D&gt; Freeze for <a class=\"struct\" href=\"ndarray/struct.Zip.html\" title=\"struct ndarray::Zip\">Zip</a>&lt;Parts, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Parts: Freeze,&nbsp;</span>","synthetic":true,"types":["ndarray::zip::Zip"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"ndarray/enum.FoldWhile.html\" title=\"enum ndarray::FoldWhile\">FoldWhile</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["ndarray::zip::FoldWhile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ndarray/struct.AxisDescription.html\" title=\"struct ndarray::AxisDescription\">AxisDescription</a>","synthetic":true,"types":["ndarray::dimension::axes::AxisDescription"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ndarray/struct.Axis.html\" title=\"struct ndarray::Axis\">Axis</a>","synthetic":true,"types":["ndarray::dimension::axis::Axis"]},{"text":"impl&lt;I:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"ndarray/struct.Dim.html\" title=\"struct ndarray::Dim\">Dim</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["ndarray::dimension::dim::Dim"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ndarray/struct.IxDynImpl.html\" title=\"struct ndarray::IxDynImpl\">IxDynImpl</a>","synthetic":true,"types":["ndarray::dimension::dynindeximpl::IxDynImpl"]},{"text":"impl&lt;S, D&gt; Freeze for <a class=\"struct\" href=\"ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["ndarray::ArrayBase"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"ndarray/struct.OwnedArcRepr.html\" title=\"struct ndarray::OwnedArcRepr\">OwnedArcRepr</a>&lt;A&gt;","synthetic":true,"types":["ndarray::OwnedArcRepr"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"ndarray/struct.RawViewRepr.html\" title=\"struct ndarray::RawViewRepr\">RawViewRepr</a>&lt;A&gt;","synthetic":true,"types":["ndarray::RawViewRepr"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"ndarray/struct.ViewRepr.html\" title=\"struct ndarray::ViewRepr\">ViewRepr</a>&lt;A&gt;","synthetic":true,"types":["ndarray::ViewRepr"]},{"text":"impl&lt;'a, A&gt; Freeze for <a class=\"enum\" href=\"ndarray/enum.CowRepr.html\" title=\"enum ndarray::CowRepr\">CowRepr</a>&lt;'a, A&gt;","synthetic":true,"types":["ndarray::CowRepr"]}];
implementors["num_complex"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["num_complex::Complex"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"num_complex/struct.ParseComplexError.html\" title=\"struct num_complex::ParseComplexError\">ParseComplexError</a>&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["num_complex::ParseComplexError"]}];
implementors["num_integer"] = [{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"num_integer/struct.ExtendedGcd.html\" title=\"struct num_integer::ExtendedGcd\">ExtendedGcd</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["num_integer::ExtendedGcd"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"num_integer/struct.IterBinomial.html\" title=\"struct num_integer::IterBinomial\">IterBinomial</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["num_integer::IterBinomial"]}];
implementors["num_rational"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["num_rational::Ratio"]},{"text":"impl Freeze for <a class=\"struct\" href=\"num_rational/struct.ParseRatioError.html\" title=\"struct num_rational::ParseRatioError\">ParseRatioError</a>","synthetic":true,"types":["num_rational::ParseRatioError"]}];
implementors["num_traits"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"num_traits/enum.FloatErrorKind.html\" title=\"enum num_traits::FloatErrorKind\">FloatErrorKind</a>","synthetic":true,"types":["num_traits::FloatErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"num_traits/struct.ParseFloatError.html\" title=\"struct num_traits::ParseFloatError\">ParseFloatError</a>","synthetic":true,"types":["num_traits::ParseFloatError"]}];
implementors["once_cell"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"once_cell/unsync/struct.OnceCell.html\" title=\"struct once_cell::unsync::OnceCell\">OnceCell</a>&lt;T&gt;","synthetic":true,"types":["once_cell::unsync::OnceCell"]},{"text":"impl&lt;T, F&nbsp;=&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.1/std/primitive.fn.html\">fn</a>() -&gt; T&gt; !Freeze for <a class=\"struct\" href=\"once_cell/unsync/struct.Lazy.html\" title=\"struct once_cell::unsync::Lazy\">Lazy</a>&lt;T, F&gt;","synthetic":true,"types":["once_cell::unsync::Lazy"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"once_cell/sync/struct.OnceCell.html\" title=\"struct once_cell::sync::OnceCell\">OnceCell</a>&lt;T&gt;","synthetic":true,"types":["once_cell::sync::OnceCell"]},{"text":"impl&lt;T, F&nbsp;=&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.1/std/primitive.fn.html\">fn</a>() -&gt; T&gt; !Freeze for <a class=\"struct\" href=\"once_cell/sync/struct.Lazy.html\" title=\"struct once_cell::sync::Lazy\">Lazy</a>&lt;T, F&gt;","synthetic":true,"types":["once_cell::sync::Lazy"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"once_cell/race/struct.OnceBox.html\" title=\"struct once_cell::race::OnceBox\">OnceBox</a>&lt;T&gt;","synthetic":true,"types":["once_cell::race::once_box::OnceBox"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"once_cell/race/struct.OnceNonZeroUsize.html\" title=\"struct once_cell::race::OnceNonZeroUsize\">OnceNonZeroUsize</a>","synthetic":true,"types":["once_cell::race::OnceNonZeroUsize"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"once_cell/race/struct.OnceBool.html\" title=\"struct once_cell::race::OnceBool\">OnceBool</a>","synthetic":true,"types":["once_cell::race::OnceBool"]}];
implementors["openssl"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/aes/struct.KeyError.html\" title=\"struct openssl::aes::KeyError\">KeyError</a>","synthetic":true,"types":["openssl::aes::KeyError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/aes/struct.AesKey.html\" title=\"struct openssl::aes::AesKey\">AesKey</a>","synthetic":true,"types":["openssl::aes::AesKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1GeneralizedTime.html\" title=\"struct openssl::asn1::Asn1GeneralizedTime\">Asn1GeneralizedTime</a>","synthetic":true,"types":["openssl::asn1::Asn1GeneralizedTime"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1GeneralizedTimeRef.html\" title=\"struct openssl::asn1::Asn1GeneralizedTimeRef\">Asn1GeneralizedTimeRef</a>","synthetic":true,"types":["openssl::asn1::Asn1GeneralizedTimeRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1Type.html\" title=\"struct openssl::asn1::Asn1Type\">Asn1Type</a>","synthetic":true,"types":["openssl::asn1::Asn1Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/asn1/struct.TimeDiff.html\" title=\"struct openssl::asn1::TimeDiff\">TimeDiff</a>","synthetic":true,"types":["openssl::asn1::TimeDiff"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1Time.html\" title=\"struct openssl::asn1::Asn1Time\">Asn1Time</a>","synthetic":true,"types":["openssl::asn1::Asn1Time"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1TimeRef.html\" title=\"struct openssl::asn1::Asn1TimeRef\">Asn1TimeRef</a>","synthetic":true,"types":["openssl::asn1::Asn1TimeRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1String.html\" title=\"struct openssl::asn1::Asn1String\">Asn1String</a>","synthetic":true,"types":["openssl::asn1::Asn1String"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1StringRef.html\" title=\"struct openssl::asn1::Asn1StringRef\">Asn1StringRef</a>","synthetic":true,"types":["openssl::asn1::Asn1StringRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1Integer.html\" title=\"struct openssl::asn1::Asn1Integer\">Asn1Integer</a>","synthetic":true,"types":["openssl::asn1::Asn1Integer"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1IntegerRef.html\" title=\"struct openssl::asn1::Asn1IntegerRef\">Asn1IntegerRef</a>","synthetic":true,"types":["openssl::asn1::Asn1IntegerRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1BitString.html\" title=\"struct openssl::asn1::Asn1BitString\">Asn1BitString</a>","synthetic":true,"types":["openssl::asn1::Asn1BitString"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1BitStringRef.html\" title=\"struct openssl::asn1::Asn1BitStringRef\">Asn1BitStringRef</a>","synthetic":true,"types":["openssl::asn1::Asn1BitStringRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1Object.html\" title=\"struct openssl::asn1::Asn1Object\">Asn1Object</a>","synthetic":true,"types":["openssl::asn1::Asn1Object"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/asn1/struct.Asn1ObjectRef.html\" title=\"struct openssl::asn1::Asn1ObjectRef\">Asn1ObjectRef</a>","synthetic":true,"types":["openssl::asn1::Asn1ObjectRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/bn/struct.MsbOption.html\" title=\"struct openssl::bn::MsbOption\">MsbOption</a>","synthetic":true,"types":["openssl::bn::MsbOption"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/bn/struct.BigNumContext.html\" title=\"struct openssl::bn::BigNumContext\">BigNumContext</a>","synthetic":true,"types":["openssl::bn::BigNumContext"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/bn/struct.BigNumContextRef.html\" title=\"struct openssl::bn::BigNumContextRef\">BigNumContextRef</a>","synthetic":true,"types":["openssl::bn::BigNumContextRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/bn/struct.BigNum.html\" title=\"struct openssl::bn::BigNum\">BigNum</a>","synthetic":true,"types":["openssl::bn::BigNum"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/bn/struct.BigNumRef.html\" title=\"struct openssl::bn::BigNumRef\">BigNumRef</a>","synthetic":true,"types":["openssl::bn::BigNumRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/cipher/struct.Cipher.html\" title=\"struct openssl::cipher::Cipher\">Cipher</a>","synthetic":true,"types":["openssl::cipher::Cipher"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/cipher/struct.CipherRef.html\" title=\"struct openssl::cipher::CipherRef\">CipherRef</a>","synthetic":true,"types":["openssl::cipher::CipherRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/cipher_ctx/struct.CipherCtx.html\" title=\"struct openssl::cipher_ctx::CipherCtx\">CipherCtx</a>","synthetic":true,"types":["openssl::cipher_ctx::CipherCtx"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/cipher_ctx/struct.CipherCtxRef.html\" title=\"struct openssl::cipher_ctx::CipherCtxRef\">CipherCtxRef</a>","synthetic":true,"types":["openssl::cipher_ctx::CipherCtxRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/cms/struct.CMSOptions.html\" title=\"struct openssl::cms::CMSOptions\">CMSOptions</a>","synthetic":true,"types":["openssl::cms::CMSOptions"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/cms/struct.CmsContentInfo.html\" title=\"struct openssl::cms::CmsContentInfo\">CmsContentInfo</a>","synthetic":true,"types":["openssl::cms::CmsContentInfo"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/cms/struct.CmsContentInfoRef.html\" title=\"struct openssl::cms::CmsContentInfoRef\">CmsContentInfoRef</a>","synthetic":true,"types":["openssl::cms::CmsContentInfoRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/conf/struct.ConfMethod.html\" title=\"struct openssl::conf::ConfMethod\">ConfMethod</a>","synthetic":true,"types":["openssl::conf::ConfMethod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/conf/struct.Conf.html\" title=\"struct openssl::conf::Conf\">Conf</a>","synthetic":true,"types":["openssl::conf::Conf"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/conf/struct.ConfRef.html\" title=\"struct openssl::conf::ConfRef\">ConfRef</a>","synthetic":true,"types":["openssl::conf::ConfRef"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"openssl/derive/struct.Deriver.html\" title=\"struct openssl::derive::Deriver\">Deriver</a>&lt;'a&gt;","synthetic":true,"types":["openssl::derive::Deriver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"openssl/dh/struct.Dh.html\" title=\"struct openssl::dh::Dh\">Dh</a>&lt;T&gt;","synthetic":true,"types":["openssl::dh::Dh"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"openssl/dh/struct.DhRef.html\" title=\"struct openssl::dh::DhRef\">DhRef</a>&lt;T&gt;","synthetic":true,"types":["openssl::dh::DhRef"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"openssl/dsa/struct.Dsa.html\" title=\"struct openssl::dsa::Dsa\">Dsa</a>&lt;T&gt;","synthetic":true,"types":["openssl::dsa::Dsa"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"openssl/dsa/struct.DsaRef.html\" title=\"struct openssl::dsa::DsaRef\">DsaRef</a>&lt;T&gt;","synthetic":true,"types":["openssl::dsa::DsaRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ec/struct.PointConversionForm.html\" title=\"struct openssl::ec::PointConversionForm\">PointConversionForm</a>","synthetic":true,"types":["openssl::ec::PointConversionForm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ec/struct.Asn1Flag.html\" title=\"struct openssl::ec::Asn1Flag\">Asn1Flag</a>","synthetic":true,"types":["openssl::ec::Asn1Flag"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ec/struct.EcGroup.html\" title=\"struct openssl::ec::EcGroup\">EcGroup</a>","synthetic":true,"types":["openssl::ec::EcGroup"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/ec/struct.EcGroupRef.html\" title=\"struct openssl::ec::EcGroupRef\">EcGroupRef</a>","synthetic":true,"types":["openssl::ec::EcGroupRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ec/struct.EcPoint.html\" title=\"struct openssl::ec::EcPoint\">EcPoint</a>","synthetic":true,"types":["openssl::ec::EcPoint"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/ec/struct.EcPointRef.html\" title=\"struct openssl::ec::EcPointRef\">EcPointRef</a>","synthetic":true,"types":["openssl::ec::EcPointRef"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"openssl/ec/struct.EcKey.html\" title=\"struct openssl::ec::EcKey\">EcKey</a>&lt;T&gt;","synthetic":true,"types":["openssl::ec::EcKey"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"openssl/ec/struct.EcKeyRef.html\" title=\"struct openssl::ec::EcKeyRef\">EcKeyRef</a>&lt;T&gt;","synthetic":true,"types":["openssl::ec::EcKeyRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ecdsa/struct.EcdsaSig.html\" title=\"struct openssl::ecdsa::EcdsaSig\">EcdsaSig</a>","synthetic":true,"types":["openssl::ecdsa::EcdsaSig"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/ecdsa/struct.EcdsaSigRef.html\" title=\"struct openssl::ecdsa::EcdsaSigRef\">EcdsaSigRef</a>","synthetic":true,"types":["openssl::ecdsa::EcdsaSigRef"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"openssl/encrypt/struct.Encrypter.html\" title=\"struct openssl::encrypt::Encrypter\">Encrypter</a>&lt;'a&gt;","synthetic":true,"types":["openssl::encrypt::Encrypter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"openssl/encrypt/struct.Decrypter.html\" title=\"struct openssl::encrypt::Decrypter\">Decrypter</a>&lt;'a&gt;","synthetic":true,"types":["openssl::encrypt::Decrypter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/envelope/struct.Seal.html\" title=\"struct openssl::envelope::Seal\">Seal</a>","synthetic":true,"types":["openssl::envelope::Seal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/envelope/struct.Open.html\" title=\"struct openssl::envelope::Open\">Open</a>","synthetic":true,"types":["openssl::envelope::Open"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/error/struct.ErrorStack.html\" title=\"struct openssl::error::ErrorStack\">ErrorStack</a>","synthetic":true,"types":["openssl::error::ErrorStack"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/error/struct.Error.html\" title=\"struct openssl::error::Error\">Error</a>","synthetic":true,"types":["openssl::error::Error"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"openssl/ex_data/struct.Index.html\" title=\"struct openssl::ex_data::Index\">Index</a>&lt;T, U&gt;","synthetic":true,"types":["openssl::ex_data::Index"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/hash/struct.MessageDigest.html\" title=\"struct openssl::hash::MessageDigest\">MessageDigest</a>","synthetic":true,"types":["openssl::hash::MessageDigest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/hash/struct.Hasher.html\" title=\"struct openssl::hash::Hasher\">Hasher</a>","synthetic":true,"types":["openssl::hash::Hasher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/hash/struct.DigestBytes.html\" title=\"struct openssl::hash::DigestBytes\">DigestBytes</a>","synthetic":true,"types":["openssl::hash::DigestBytes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/md/struct.Md.html\" title=\"struct openssl::md::Md\">Md</a>","synthetic":true,"types":["openssl::md::Md"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/md/struct.MdRef.html\" title=\"struct openssl::md::MdRef\">MdRef</a>","synthetic":true,"types":["openssl::md::MdRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/md_ctx/struct.MdCtx.html\" title=\"struct openssl::md_ctx::MdCtx\">MdCtx</a>","synthetic":true,"types":["openssl::md_ctx::MdCtx"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/md_ctx/struct.MdCtxRef.html\" title=\"struct openssl::md_ctx::MdCtxRef\">MdCtxRef</a>","synthetic":true,"types":["openssl::md_ctx::MdCtxRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/nid/struct.SignatureAlgorithms.html\" title=\"struct openssl::nid::SignatureAlgorithms\">SignatureAlgorithms</a>","synthetic":true,"types":["openssl::nid::SignatureAlgorithms"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/nid/struct.Nid.html\" title=\"struct openssl::nid::Nid\">Nid</a>","synthetic":true,"types":["openssl::nid::Nid"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspFlag.html\" title=\"struct openssl::ocsp::OcspFlag\">OcspFlag</a>","synthetic":true,"types":["openssl::ocsp::OcspFlag"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspResponseStatus.html\" title=\"struct openssl::ocsp::OcspResponseStatus\">OcspResponseStatus</a>","synthetic":true,"types":["openssl::ocsp::OcspResponseStatus"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspCertStatus.html\" title=\"struct openssl::ocsp::OcspCertStatus\">OcspCertStatus</a>","synthetic":true,"types":["openssl::ocsp::OcspCertStatus"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspRevokedStatus.html\" title=\"struct openssl::ocsp::OcspRevokedStatus\">OcspRevokedStatus</a>","synthetic":true,"types":["openssl::ocsp::OcspRevokedStatus"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspStatus.html\" title=\"struct openssl::ocsp::OcspStatus\">OcspStatus</a>&lt;'a&gt;","synthetic":true,"types":["openssl::ocsp::OcspStatus"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspBasicResponse.html\" title=\"struct openssl::ocsp::OcspBasicResponse\">OcspBasicResponse</a>","synthetic":true,"types":["openssl::ocsp::OcspBasicResponse"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspBasicResponseRef.html\" title=\"struct openssl::ocsp::OcspBasicResponseRef\">OcspBasicResponseRef</a>","synthetic":true,"types":["openssl::ocsp::OcspBasicResponseRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspCertId.html\" title=\"struct openssl::ocsp::OcspCertId\">OcspCertId</a>","synthetic":true,"types":["openssl::ocsp::OcspCertId"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspCertIdRef.html\" title=\"struct openssl::ocsp::OcspCertIdRef\">OcspCertIdRef</a>","synthetic":true,"types":["openssl::ocsp::OcspCertIdRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspResponse.html\" title=\"struct openssl::ocsp::OcspResponse\">OcspResponse</a>","synthetic":true,"types":["openssl::ocsp::OcspResponse"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspResponseRef.html\" title=\"struct openssl::ocsp::OcspResponseRef\">OcspResponseRef</a>","synthetic":true,"types":["openssl::ocsp::OcspResponseRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspRequest.html\" title=\"struct openssl::ocsp::OcspRequest\">OcspRequest</a>","synthetic":true,"types":["openssl::ocsp::OcspRequest"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspRequestRef.html\" title=\"struct openssl::ocsp::OcspRequestRef\">OcspRequestRef</a>","synthetic":true,"types":["openssl::ocsp::OcspRequestRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspOneReq.html\" title=\"struct openssl::ocsp::OcspOneReq\">OcspOneReq</a>","synthetic":true,"types":["openssl::ocsp::OcspOneReq"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspOneReqRef.html\" title=\"struct openssl::ocsp::OcspOneReqRef\">OcspOneReqRef</a>","synthetic":true,"types":["openssl::ocsp::OcspOneReqRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/pkcs12/struct.Pkcs12.html\" title=\"struct openssl::pkcs12::Pkcs12\">Pkcs12</a>","synthetic":true,"types":["openssl::pkcs12::Pkcs12"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/pkcs12/struct.Pkcs12Ref.html\" title=\"struct openssl::pkcs12::Pkcs12Ref\">Pkcs12Ref</a>","synthetic":true,"types":["openssl::pkcs12::Pkcs12Ref"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/pkcs12/struct.ParsedPkcs12.html\" title=\"struct openssl::pkcs12::ParsedPkcs12\">ParsedPkcs12</a>","synthetic":true,"types":["openssl::pkcs12::ParsedPkcs12"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/pkcs12/struct.Pkcs12Builder.html\" title=\"struct openssl::pkcs12::Pkcs12Builder\">Pkcs12Builder</a>","synthetic":true,"types":["openssl::pkcs12::Pkcs12Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/pkcs5/struct.KeyIvPair.html\" title=\"struct openssl::pkcs5::KeyIvPair\">KeyIvPair</a>","synthetic":true,"types":["openssl::pkcs5::KeyIvPair"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/pkcs7/struct.Pkcs7.html\" title=\"struct openssl::pkcs7::Pkcs7\">Pkcs7</a>","synthetic":true,"types":["openssl::pkcs7::Pkcs7"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/pkcs7/struct.Pkcs7Ref.html\" title=\"struct openssl::pkcs7::Pkcs7Ref\">Pkcs7Ref</a>","synthetic":true,"types":["openssl::pkcs7::Pkcs7Ref"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/pkcs7/struct.Pkcs7Flags.html\" title=\"struct openssl::pkcs7::Pkcs7Flags\">Pkcs7Flags</a>","synthetic":true,"types":["openssl::pkcs7::Pkcs7Flags"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl/pkey/enum.Params.html\" title=\"enum openssl::pkey::Params\">Params</a>","synthetic":true,"types":["openssl::pkey::Params"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl/pkey/enum.Public.html\" title=\"enum openssl::pkey::Public\">Public</a>","synthetic":true,"types":["openssl::pkey::Public"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl/pkey/enum.Private.html\" title=\"enum openssl::pkey::Private\">Private</a>","synthetic":true,"types":["openssl::pkey::Private"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/pkey/struct.Id.html\" title=\"struct openssl::pkey::Id\">Id</a>","synthetic":true,"types":["openssl::pkey::Id"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"openssl/pkey/struct.PKey.html\" title=\"struct openssl::pkey::PKey\">PKey</a>&lt;T&gt;","synthetic":true,"types":["openssl::pkey::PKey"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"openssl/pkey/struct.PKeyRef.html\" title=\"struct openssl::pkey::PKeyRef\">PKeyRef</a>&lt;T&gt;","synthetic":true,"types":["openssl::pkey::PKeyRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/pkey_ctx/struct.HkdfMode.html\" title=\"struct openssl::pkey_ctx::HkdfMode\">HkdfMode</a>","synthetic":true,"types":["openssl::pkey_ctx::HkdfMode"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"openssl/pkey_ctx/struct.PkeyCtx.html\" title=\"struct openssl::pkey_ctx::PkeyCtx\">PkeyCtx</a>&lt;T&gt;","synthetic":true,"types":["openssl::pkey_ctx::PkeyCtx"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"openssl/pkey_ctx/struct.PkeyCtxRef.html\" title=\"struct openssl::pkey_ctx::PkeyCtxRef\">PkeyCtxRef</a>&lt;T&gt;","synthetic":true,"types":["openssl::pkey_ctx::PkeyCtxRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/rsa/struct.Padding.html\" title=\"struct openssl::rsa::Padding\">Padding</a>","synthetic":true,"types":["openssl::rsa::Padding"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"openssl/rsa/struct.Rsa.html\" title=\"struct openssl::rsa::Rsa\">Rsa</a>&lt;T&gt;","synthetic":true,"types":["openssl::rsa::Rsa"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"openssl/rsa/struct.RsaRef.html\" title=\"struct openssl::rsa::RsaRef\">RsaRef</a>&lt;T&gt;","synthetic":true,"types":["openssl::rsa::RsaRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/rsa/struct.RsaPrivateKeyBuilder.html\" title=\"struct openssl::rsa::RsaPrivateKeyBuilder\">RsaPrivateKeyBuilder</a>","synthetic":true,"types":["openssl::rsa::RsaPrivateKeyBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/sha/struct.Sha1.html\" title=\"struct openssl::sha::Sha1\">Sha1</a>","synthetic":true,"types":["openssl::sha::Sha1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/sha/struct.Sha224.html\" title=\"struct openssl::sha::Sha224\">Sha224</a>","synthetic":true,"types":["openssl::sha::Sha224"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/sha/struct.Sha256.html\" title=\"struct openssl::sha::Sha256\">Sha256</a>","synthetic":true,"types":["openssl::sha::Sha256"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/sha/struct.Sha384.html\" title=\"struct openssl::sha::Sha384\">Sha384</a>","synthetic":true,"types":["openssl::sha::Sha384"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/sha/struct.Sha512.html\" title=\"struct openssl::sha::Sha512\">Sha512</a>","synthetic":true,"types":["openssl::sha::Sha512"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/sign/struct.RsaPssSaltlen.html\" title=\"struct openssl::sign::RsaPssSaltlen\">RsaPssSaltlen</a>","synthetic":true,"types":["openssl::sign::RsaPssSaltlen"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"openssl/sign/struct.Signer.html\" title=\"struct openssl::sign::Signer\">Signer</a>&lt;'a&gt;","synthetic":true,"types":["openssl::sign::Signer"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"openssl/sign/struct.Verifier.html\" title=\"struct openssl::sign::Verifier\">Verifier</a>&lt;'a&gt;","synthetic":true,"types":["openssl::sign::Verifier"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/srtp/struct.SrtpProtectionProfile.html\" title=\"struct openssl::srtp::SrtpProtectionProfile\">SrtpProtectionProfile</a>","synthetic":true,"types":["openssl::srtp::SrtpProtectionProfile"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/srtp/struct.SrtpProtectionProfileRef.html\" title=\"struct openssl::srtp::SrtpProtectionProfileRef\">SrtpProtectionProfileRef</a>","synthetic":true,"types":["openssl::srtp::SrtpProtectionProfileRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/srtp/struct.SrtpProfileId.html\" title=\"struct openssl::srtp::SrtpProfileId\">SrtpProfileId</a>","synthetic":true,"types":["openssl::srtp::SrtpProfileId"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslConnector.html\" title=\"struct openssl::ssl::SslConnector\">SslConnector</a>","synthetic":true,"types":["openssl::ssl::connector::SslConnector"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslConnectorBuilder.html\" title=\"struct openssl::ssl::SslConnectorBuilder\">SslConnectorBuilder</a>","synthetic":true,"types":["openssl::ssl::connector::SslConnectorBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.ConnectConfiguration.html\" title=\"struct openssl::ssl::ConnectConfiguration\">ConnectConfiguration</a>","synthetic":true,"types":["openssl::ssl::connector::ConnectConfiguration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslAcceptor.html\" title=\"struct openssl::ssl::SslAcceptor\">SslAcceptor</a>","synthetic":true,"types":["openssl::ssl::connector::SslAcceptor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslAcceptorBuilder.html\" title=\"struct openssl::ssl::SslAcceptorBuilder\">SslAcceptorBuilder</a>","synthetic":true,"types":["openssl::ssl::connector::SslAcceptorBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.ErrorCode.html\" title=\"struct openssl::ssl::ErrorCode\">ErrorCode</a>","synthetic":true,"types":["openssl::ssl::error::ErrorCode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.Error.html\" title=\"struct openssl::ssl::Error\">Error</a>","synthetic":true,"types":["openssl::ssl::error::Error"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"enum\" href=\"openssl/ssl/enum.HandshakeError.html\" title=\"enum openssl::ssl::HandshakeError\">HandshakeError</a>&lt;S&gt;","synthetic":true,"types":["openssl::ssl::error::HandshakeError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslOptions.html\" title=\"struct openssl::ssl::SslOptions\">SslOptions</a>","synthetic":true,"types":["openssl::ssl::SslOptions"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslMode.html\" title=\"struct openssl::ssl::SslMode\">SslMode</a>","synthetic":true,"types":["openssl::ssl::SslMode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslMethod.html\" title=\"struct openssl::ssl::SslMethod\">SslMethod</a>","synthetic":true,"types":["openssl::ssl::SslMethod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslVerifyMode.html\" title=\"struct openssl::ssl::SslVerifyMode\">SslVerifyMode</a>","synthetic":true,"types":["openssl::ssl::SslVerifyMode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslSessionCacheMode.html\" title=\"struct openssl::ssl::SslSessionCacheMode\">SslSessionCacheMode</a>","synthetic":true,"types":["openssl::ssl::SslSessionCacheMode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.ExtensionContext.html\" title=\"struct openssl::ssl::ExtensionContext\">ExtensionContext</a>","synthetic":true,"types":["openssl::ssl::ExtensionContext"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslFiletype.html\" title=\"struct openssl::ssl::SslFiletype\">SslFiletype</a>","synthetic":true,"types":["openssl::ssl::SslFiletype"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.StatusType.html\" title=\"struct openssl::ssl::StatusType\">StatusType</a>","synthetic":true,"types":["openssl::ssl::StatusType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.NameType.html\" title=\"struct openssl::ssl::NameType\">NameType</a>","synthetic":true,"types":["openssl::ssl::NameType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SniError.html\" title=\"struct openssl::ssl::SniError\">SniError</a>","synthetic":true,"types":["openssl::ssl::SniError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslAlert.html\" title=\"struct openssl::ssl::SslAlert\">SslAlert</a>","synthetic":true,"types":["openssl::ssl::SslAlert"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.AlpnError.html\" title=\"struct openssl::ssl::AlpnError\">AlpnError</a>","synthetic":true,"types":["openssl::ssl::AlpnError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.ClientHelloResponse.html\" title=\"struct openssl::ssl::ClientHelloResponse\">ClientHelloResponse</a>","synthetic":true,"types":["openssl::ssl::ClientHelloResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslVersion.html\" title=\"struct openssl::ssl::SslVersion\">SslVersion</a>","synthetic":true,"types":["openssl::ssl::SslVersion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslContextBuilder.html\" title=\"struct openssl::ssl::SslContextBuilder\">SslContextBuilder</a>","synthetic":true,"types":["openssl::ssl::SslContextBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslContext.html\" title=\"struct openssl::ssl::SslContext\">SslContext</a>","synthetic":true,"types":["openssl::ssl::SslContext"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslContextRef.html\" title=\"struct openssl::ssl::SslContextRef\">SslContextRef</a>","synthetic":true,"types":["openssl::ssl::SslContextRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.CipherBits.html\" title=\"struct openssl::ssl::CipherBits\">CipherBits</a>","synthetic":true,"types":["openssl::ssl::CipherBits"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslCipher.html\" title=\"struct openssl::ssl::SslCipher\">SslCipher</a>","synthetic":true,"types":["openssl::ssl::SslCipher"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslCipherRef.html\" title=\"struct openssl::ssl::SslCipherRef\">SslCipherRef</a>","synthetic":true,"types":["openssl::ssl::SslCipherRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslSession.html\" title=\"struct openssl::ssl::SslSession\">SslSession</a>","synthetic":true,"types":["openssl::ssl::SslSession"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslSessionRef.html\" title=\"struct openssl::ssl::SslSessionRef\">SslSessionRef</a>","synthetic":true,"types":["openssl::ssl::SslSessionRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.Ssl.html\" title=\"struct openssl::ssl::Ssl\">Ssl</a>","synthetic":true,"types":["openssl::ssl::Ssl"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslRef.html\" title=\"struct openssl::ssl::SslRef\">SslRef</a>","synthetic":true,"types":["openssl::ssl::SslRef"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.MidHandshakeSslStream.html\" title=\"struct openssl::ssl::MidHandshakeSslStream\">MidHandshakeSslStream</a>&lt;S&gt;","synthetic":true,"types":["openssl::ssl::MidHandshakeSslStream"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslStream.html\" title=\"struct openssl::ssl::SslStream\">SslStream</a>&lt;S&gt;","synthetic":true,"types":["openssl::ssl::SslStream"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.SslStreamBuilder.html\" title=\"struct openssl::ssl::SslStreamBuilder\">SslStreamBuilder</a>&lt;S&gt;","synthetic":true,"types":["openssl::ssl::SslStreamBuilder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl/ssl/enum.ShutdownResult.html\" title=\"enum openssl::ssl::ShutdownResult\">ShutdownResult</a>","synthetic":true,"types":["openssl::ssl::ShutdownResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/ssl/struct.ShutdownState.html\" title=\"struct openssl::ssl::ShutdownState\">ShutdownState</a>","synthetic":true,"types":["openssl::ssl::ShutdownState"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"openssl/stack/struct.Stack.html\" title=\"struct openssl::stack::Stack\">Stack</a>&lt;T&gt;","synthetic":true,"types":["openssl::stack::Stack"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"openssl/stack/struct.IntoIter.html\" title=\"struct openssl::stack::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["openssl::stack::IntoIter"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"openssl/stack/struct.StackRef.html\" title=\"struct openssl::stack::StackRef\">StackRef</a>&lt;T&gt;","synthetic":true,"types":["openssl::stack::StackRef"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"openssl/stack/struct.Iter.html\" title=\"struct openssl::stack::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["openssl::stack::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"openssl/stack/struct.IterMut.html\" title=\"struct openssl::stack::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["openssl::stack::IterMut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/string/struct.OpensslString.html\" title=\"struct openssl::string::OpensslString\">OpensslString</a>","synthetic":true,"types":["openssl::string::OpensslString"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/string/struct.OpensslStringRef.html\" title=\"struct openssl::string::OpensslStringRef\">OpensslStringRef</a>","synthetic":true,"types":["openssl::string::OpensslStringRef"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl/symm/enum.Mode.html\" title=\"enum openssl::symm::Mode\">Mode</a>","synthetic":true,"types":["openssl::symm::Mode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/symm/struct.Cipher.html\" title=\"struct openssl::symm::Cipher\">Cipher</a>","synthetic":true,"types":["openssl::symm::Cipher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/symm/struct.Crypter.html\" title=\"struct openssl::symm::Crypter\">Crypter</a>","synthetic":true,"types":["openssl::symm::Crypter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/verify/struct.X509CheckFlags.html\" title=\"struct openssl::x509::verify::X509CheckFlags\">X509CheckFlags</a>","synthetic":true,"types":["openssl::x509::verify::X509CheckFlags"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/verify/struct.X509VerifyFlags.html\" title=\"struct openssl::x509::verify::X509VerifyFlags\">X509VerifyFlags</a>","synthetic":true,"types":["openssl::x509::verify::X509VerifyFlags"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/verify/struct.X509VerifyParam.html\" title=\"struct openssl::x509::verify::X509VerifyParam\">X509VerifyParam</a>","synthetic":true,"types":["openssl::x509::verify::X509VerifyParam"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/x509/verify/struct.X509VerifyParamRef.html\" title=\"struct openssl::x509::verify::X509VerifyParamRef\">X509VerifyParamRef</a>","synthetic":true,"types":["openssl::x509::verify::X509VerifyParamRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/extension/struct.BasicConstraints.html\" title=\"struct openssl::x509::extension::BasicConstraints\">BasicConstraints</a>","synthetic":true,"types":["openssl::x509::extension::BasicConstraints"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/extension/struct.KeyUsage.html\" title=\"struct openssl::x509::extension::KeyUsage\">KeyUsage</a>","synthetic":true,"types":["openssl::x509::extension::KeyUsage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/extension/struct.ExtendedKeyUsage.html\" title=\"struct openssl::x509::extension::ExtendedKeyUsage\">ExtendedKeyUsage</a>","synthetic":true,"types":["openssl::x509::extension::ExtendedKeyUsage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/extension/struct.SubjectKeyIdentifier.html\" title=\"struct openssl::x509::extension::SubjectKeyIdentifier\">SubjectKeyIdentifier</a>","synthetic":true,"types":["openssl::x509::extension::SubjectKeyIdentifier"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/extension/struct.AuthorityKeyIdentifier.html\" title=\"struct openssl::x509::extension::AuthorityKeyIdentifier\">AuthorityKeyIdentifier</a>","synthetic":true,"types":["openssl::x509::extension::AuthorityKeyIdentifier"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/extension/struct.SubjectAlternativeName.html\" title=\"struct openssl::x509::extension::SubjectAlternativeName\">SubjectAlternativeName</a>","synthetic":true,"types":["openssl::x509::extension::SubjectAlternativeName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/store/struct.X509StoreBuilder.html\" title=\"struct openssl::x509::store::X509StoreBuilder\">X509StoreBuilder</a>","synthetic":true,"types":["openssl::x509::store::X509StoreBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/x509/store/struct.X509StoreBuilderRef.html\" title=\"struct openssl::x509::store::X509StoreBuilderRef\">X509StoreBuilderRef</a>","synthetic":true,"types":["openssl::x509::store::X509StoreBuilderRef"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"openssl/x509/store/struct.X509Lookup.html\" title=\"struct openssl::x509::store::X509Lookup\">X509Lookup</a>&lt;T&gt;","synthetic":true,"types":["openssl::x509::store::X509Lookup"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"openssl/x509/store/struct.X509LookupRef.html\" title=\"struct openssl::x509::store::X509LookupRef\">X509LookupRef</a>&lt;T&gt;","synthetic":true,"types":["openssl::x509::store::X509LookupRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/store/struct.HashDir.html\" title=\"struct openssl::x509::store::HashDir\">HashDir</a>","synthetic":true,"types":["openssl::x509::store::HashDir"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"openssl/x509/store/struct.X509LookupMethod.html\" title=\"struct openssl::x509::store::X509LookupMethod\">X509LookupMethod</a>&lt;T&gt;","synthetic":true,"types":["openssl::x509::store::X509LookupMethod"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"openssl/x509/store/struct.X509LookupMethodRef.html\" title=\"struct openssl::x509::store::X509LookupMethodRef\">X509LookupMethodRef</a>&lt;T&gt;","synthetic":true,"types":["openssl::x509::store::X509LookupMethodRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/store/struct.X509Store.html\" title=\"struct openssl::x509::store::X509Store\">X509Store</a>","synthetic":true,"types":["openssl::x509::store::X509Store"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/x509/store/struct.X509StoreRef.html\" title=\"struct openssl::x509::store::X509StoreRef\">X509StoreRef</a>","synthetic":true,"types":["openssl::x509::store::X509StoreRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509StoreContext.html\" title=\"struct openssl::x509::X509StoreContext\">X509StoreContext</a>","synthetic":true,"types":["openssl::x509::X509StoreContext"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509StoreContextRef.html\" title=\"struct openssl::x509::X509StoreContextRef\">X509StoreContextRef</a>","synthetic":true,"types":["openssl::x509::X509StoreContextRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509Builder.html\" title=\"struct openssl::x509::X509Builder\">X509Builder</a>","synthetic":true,"types":["openssl::x509::X509Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509.html\" title=\"struct openssl::x509::X509\">X509</a>","synthetic":true,"types":["openssl::x509::X509"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509Ref.html\" title=\"struct openssl::x509::X509Ref\">X509Ref</a>","synthetic":true,"types":["openssl::x509::X509Ref"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509v3Context.html\" title=\"struct openssl::x509::X509v3Context\">X509v3Context</a>&lt;'a&gt;","synthetic":true,"types":["openssl::x509::X509v3Context"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509Extension.html\" title=\"struct openssl::x509::X509Extension\">X509Extension</a>","synthetic":true,"types":["openssl::x509::X509Extension"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509ExtensionRef.html\" title=\"struct openssl::x509::X509ExtensionRef\">X509ExtensionRef</a>","synthetic":true,"types":["openssl::x509::X509ExtensionRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509NameBuilder.html\" title=\"struct openssl::x509::X509NameBuilder\">X509NameBuilder</a>","synthetic":true,"types":["openssl::x509::X509NameBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509Name.html\" title=\"struct openssl::x509::X509Name\">X509Name</a>","synthetic":true,"types":["openssl::x509::X509Name"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509NameRef.html\" title=\"struct openssl::x509::X509NameRef\">X509NameRef</a>","synthetic":true,"types":["openssl::x509::X509NameRef"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509NameEntries.html\" title=\"struct openssl::x509::X509NameEntries\">X509NameEntries</a>&lt;'a&gt;","synthetic":true,"types":["openssl::x509::X509NameEntries"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509NameEntry.html\" title=\"struct openssl::x509::X509NameEntry\">X509NameEntry</a>","synthetic":true,"types":["openssl::x509::X509NameEntry"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509NameEntryRef.html\" title=\"struct openssl::x509::X509NameEntryRef\">X509NameEntryRef</a>","synthetic":true,"types":["openssl::x509::X509NameEntryRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509ReqBuilder.html\" title=\"struct openssl::x509::X509ReqBuilder\">X509ReqBuilder</a>","synthetic":true,"types":["openssl::x509::X509ReqBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509Req.html\" title=\"struct openssl::x509::X509Req\">X509Req</a>","synthetic":true,"types":["openssl::x509::X509Req"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509ReqRef.html\" title=\"struct openssl::x509::X509ReqRef\">X509ReqRef</a>","synthetic":true,"types":["openssl::x509::X509ReqRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509VerifyResult.html\" title=\"struct openssl::x509::X509VerifyResult\">X509VerifyResult</a>","synthetic":true,"types":["openssl::x509::X509VerifyResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/struct.GeneralName.html\" title=\"struct openssl::x509::GeneralName\">GeneralName</a>","synthetic":true,"types":["openssl::x509::GeneralName"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/x509/struct.GeneralNameRef.html\" title=\"struct openssl::x509::GeneralNameRef\">GeneralNameRef</a>","synthetic":true,"types":["openssl::x509::GeneralNameRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/struct.AccessDescription.html\" title=\"struct openssl::x509::AccessDescription\">AccessDescription</a>","synthetic":true,"types":["openssl::x509::AccessDescription"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/x509/struct.AccessDescriptionRef.html\" title=\"struct openssl::x509::AccessDescriptionRef\">AccessDescriptionRef</a>","synthetic":true,"types":["openssl::x509::AccessDescriptionRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509Algorithm.html\" title=\"struct openssl::x509::X509Algorithm\">X509Algorithm</a>","synthetic":true,"types":["openssl::x509::X509Algorithm"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509AlgorithmRef.html\" title=\"struct openssl::x509::X509AlgorithmRef\">X509AlgorithmRef</a>","synthetic":true,"types":["openssl::x509::X509AlgorithmRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509Object.html\" title=\"struct openssl::x509::X509Object\">X509Object</a>","synthetic":true,"types":["openssl::x509::X509Object"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"openssl/x509/struct.X509ObjectRef.html\" title=\"struct openssl::x509::X509ObjectRef\">X509ObjectRef</a>","synthetic":true,"types":["openssl::x509::X509ObjectRef"]}];
implementors["openssl_probe"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"openssl_probe/struct.ProbeResult.html\" title=\"struct openssl_probe::ProbeResult\">ProbeResult</a>","synthetic":true,"types":["openssl_probe::ProbeResult"]}];
implementors["openssl_sys"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"openssl_sys/struct.AES_KEY.html\" title=\"struct openssl_sys::AES_KEY\">AES_KEY</a>","synthetic":true,"types":["openssl_sys::handwritten::aes::AES_KEY"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl_sys/struct.ASN1_ENCODING.html\" title=\"struct openssl_sys::ASN1_ENCODING\">ASN1_ENCODING</a>","synthetic":true,"types":["openssl_sys::handwritten::asn1::ASN1_ENCODING"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_ASN1_OBJECT.html\" title=\"enum openssl_sys::stack_st_ASN1_OBJECT\">stack_st_ASN1_OBJECT</a>","synthetic":true,"types":["openssl_sys::handwritten::asn1::stack_st_ASN1_OBJECT"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.BIO_METHOD.html\" title=\"enum openssl_sys::BIO_METHOD\">BIO_METHOD</a>","synthetic":true,"types":["openssl_sys::handwritten::bio::BIO_METHOD"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.CMS_ContentInfo.html\" title=\"enum openssl_sys::CMS_ContentInfo\">CMS_ContentInfo</a>","synthetic":true,"types":["openssl_sys::handwritten::cms::CMS_ContentInfo"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_void.html\" title=\"enum openssl_sys::stack_st_void\">stack_st_void</a>","synthetic":true,"types":["openssl_sys::handwritten::crypto::stack_st_void"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.point_conversion_form_t.html\" title=\"enum openssl_sys::point_conversion_form_t\">point_conversion_form_t</a>","synthetic":true,"types":["openssl_sys::handwritten::ec::point_conversion_form_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.EC_METHOD.html\" title=\"enum openssl_sys::EC_METHOD\">EC_METHOD</a>","synthetic":true,"types":["openssl_sys::handwritten::ec::EC_METHOD"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.EC_GROUP.html\" title=\"enum openssl_sys::EC_GROUP\">EC_GROUP</a>","synthetic":true,"types":["openssl_sys::handwritten::ec::EC_GROUP"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.EC_POINT.html\" title=\"enum openssl_sys::EC_POINT\">EC_POINT</a>","synthetic":true,"types":["openssl_sys::handwritten::ec::EC_POINT"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.ECDSA_SIG.html\" title=\"enum openssl_sys::ECDSA_SIG\">ECDSA_SIG</a>","synthetic":true,"types":["openssl_sys::handwritten::ec::ECDSA_SIG"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl_sys/struct.ERR_STRING_DATA.html\" title=\"struct openssl_sys::ERR_STRING_DATA\">ERR_STRING_DATA</a>","synthetic":true,"types":["openssl_sys::handwritten::err::ERR_STRING_DATA"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.OCSP_CERTID.html\" title=\"enum openssl_sys::OCSP_CERTID\">OCSP_CERTID</a>","synthetic":true,"types":["openssl_sys::handwritten::ocsp::OCSP_CERTID"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.OCSP_ONEREQ.html\" title=\"enum openssl_sys::OCSP_ONEREQ\">OCSP_ONEREQ</a>","synthetic":true,"types":["openssl_sys::handwritten::ocsp::OCSP_ONEREQ"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.OCSP_REQUEST.html\" title=\"enum openssl_sys::OCSP_REQUEST\">OCSP_REQUEST</a>","synthetic":true,"types":["openssl_sys::handwritten::ocsp::OCSP_REQUEST"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.OCSP_BASICRESP.html\" title=\"enum openssl_sys::OCSP_BASICRESP\">OCSP_BASICRESP</a>","synthetic":true,"types":["openssl_sys::handwritten::ocsp::OCSP_BASICRESP"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.PKCS12.html\" title=\"enum openssl_sys::PKCS12\">PKCS12</a>","synthetic":true,"types":["openssl_sys::handwritten::pkcs12::PKCS12"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.PKCS7_SIGNED.html\" title=\"enum openssl_sys::PKCS7_SIGNED\">PKCS7_SIGNED</a>","synthetic":true,"types":["openssl_sys::handwritten::pkcs7::PKCS7_SIGNED"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.PKCS7_ENVELOPE.html\" title=\"enum openssl_sys::PKCS7_ENVELOPE\">PKCS7_ENVELOPE</a>","synthetic":true,"types":["openssl_sys::handwritten::pkcs7::PKCS7_ENVELOPE"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.PKCS7_SIGN_ENVELOPE.html\" title=\"enum openssl_sys::PKCS7_SIGN_ENVELOPE\">PKCS7_SIGN_ENVELOPE</a>","synthetic":true,"types":["openssl_sys::handwritten::pkcs7::PKCS7_SIGN_ENVELOPE"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.PKCS7_DIGEST.html\" title=\"enum openssl_sys::PKCS7_DIGEST\">PKCS7_DIGEST</a>","synthetic":true,"types":["openssl_sys::handwritten::pkcs7::PKCS7_DIGEST"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.PKCS7_ENCRYPT.html\" title=\"enum openssl_sys::PKCS7_ENCRYPT\">PKCS7_ENCRYPT</a>","synthetic":true,"types":["openssl_sys::handwritten::pkcs7::PKCS7_ENCRYPT"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.PKCS7.html\" title=\"enum openssl_sys::PKCS7\">PKCS7</a>","synthetic":true,"types":["openssl_sys::handwritten::pkcs7::PKCS7"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_OPENSSL_STRING.html\" title=\"enum openssl_sys::stack_st_OPENSSL_STRING\">stack_st_OPENSSL_STRING</a>","synthetic":true,"types":["openssl_sys::handwritten::safestack::stack_st_OPENSSL_STRING"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl_sys/struct.SHA_CTX.html\" title=\"struct openssl_sys::SHA_CTX\">SHA_CTX</a>","synthetic":true,"types":["openssl_sys::handwritten::sha::SHA_CTX"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl_sys/struct.SHA256_CTX.html\" title=\"struct openssl_sys::SHA256_CTX\">SHA256_CTX</a>","synthetic":true,"types":["openssl_sys::handwritten::sha::SHA256_CTX"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl_sys/struct.SHA512_CTX.html\" title=\"struct openssl_sys::SHA512_CTX\">SHA512_CTX</a>","synthetic":true,"types":["openssl_sys::handwritten::sha::SHA512_CTX"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.SSL_METHOD.html\" title=\"enum openssl_sys::SSL_METHOD\">SSL_METHOD</a>","synthetic":true,"types":["openssl_sys::handwritten::ssl::SSL_METHOD"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.SSL_CIPHER.html\" title=\"enum openssl_sys::SSL_CIPHER\">SSL_CIPHER</a>","synthetic":true,"types":["openssl_sys::handwritten::ssl::SSL_CIPHER"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.SSL_SESSION.html\" title=\"enum openssl_sys::SSL_SESSION\">SSL_SESSION</a>","synthetic":true,"types":["openssl_sys::handwritten::ssl::SSL_SESSION"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_SSL_CIPHER.html\" title=\"enum openssl_sys::stack_st_SSL_CIPHER\">stack_st_SSL_CIPHER</a>","synthetic":true,"types":["openssl_sys::handwritten::ssl::stack_st_SSL_CIPHER"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl_sys/struct.SRTP_PROTECTION_PROFILE.html\" title=\"struct openssl_sys::SRTP_PROTECTION_PROFILE\">SRTP_PROTECTION_PROFILE</a>","synthetic":true,"types":["openssl_sys::handwritten::ssl::SRTP_PROTECTION_PROFILE"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_SRTP_PROTECTION_PROFILE.html\" title=\"enum openssl_sys::stack_st_SRTP_PROTECTION_PROFILE\">stack_st_SRTP_PROTECTION_PROFILE</a>","synthetic":true,"types":["openssl_sys::handwritten::ssl::stack_st_SRTP_PROTECTION_PROFILE"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.OPENSSL_STACK.html\" title=\"enum openssl_sys::OPENSSL_STACK\">OPENSSL_STACK</a>","synthetic":true,"types":["openssl_sys::handwritten::stack::OPENSSL_STACK"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.ASN1_INTEGER.html\" title=\"enum openssl_sys::ASN1_INTEGER\">ASN1_INTEGER</a>","synthetic":true,"types":["openssl_sys::handwritten::types::ASN1_INTEGER"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.ASN1_GENERALIZEDTIME.html\" title=\"enum openssl_sys::ASN1_GENERALIZEDTIME\">ASN1_GENERALIZEDTIME</a>","synthetic":true,"types":["openssl_sys::handwritten::types::ASN1_GENERALIZEDTIME"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.ASN1_STRING.html\" title=\"enum openssl_sys::ASN1_STRING\">ASN1_STRING</a>","synthetic":true,"types":["openssl_sys::handwritten::types::ASN1_STRING"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.ASN1_BIT_STRING.html\" title=\"enum openssl_sys::ASN1_BIT_STRING\">ASN1_BIT_STRING</a>","synthetic":true,"types":["openssl_sys::handwritten::types::ASN1_BIT_STRING"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.ASN1_TIME.html\" title=\"enum openssl_sys::ASN1_TIME\">ASN1_TIME</a>","synthetic":true,"types":["openssl_sys::handwritten::types::ASN1_TIME"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.ASN1_TYPE.html\" title=\"enum openssl_sys::ASN1_TYPE\">ASN1_TYPE</a>","synthetic":true,"types":["openssl_sys::handwritten::types::ASN1_TYPE"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.ASN1_OBJECT.html\" title=\"enum openssl_sys::ASN1_OBJECT\">ASN1_OBJECT</a>","synthetic":true,"types":["openssl_sys::handwritten::types::ASN1_OBJECT"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.ASN1_OCTET_STRING.html\" title=\"enum openssl_sys::ASN1_OCTET_STRING\">ASN1_OCTET_STRING</a>","synthetic":true,"types":["openssl_sys::handwritten::types::ASN1_OCTET_STRING"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.bio_st.html\" title=\"enum openssl_sys::bio_st\">bio_st</a>","synthetic":true,"types":["openssl_sys::handwritten::types::bio_st"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.BIO.html\" title=\"enum openssl_sys::BIO\">BIO</a>","synthetic":true,"types":["openssl_sys::handwritten::types::BIO"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.BIGNUM.html\" title=\"enum openssl_sys::BIGNUM\">BIGNUM</a>","synthetic":true,"types":["openssl_sys::handwritten::types::BIGNUM"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.BN_BLINDING.html\" title=\"enum openssl_sys::BN_BLINDING\">BN_BLINDING</a>","synthetic":true,"types":["openssl_sys::handwritten::types::BN_BLINDING"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.BN_MONT_CTX.html\" title=\"enum openssl_sys::BN_MONT_CTX\">BN_MONT_CTX</a>","synthetic":true,"types":["openssl_sys::handwritten::types::BN_MONT_CTX"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.BN_CTX.html\" title=\"enum openssl_sys::BN_CTX\">BN_CTX</a>","synthetic":true,"types":["openssl_sys::handwritten::types::BN_CTX"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.BN_GENCB.html\" title=\"enum openssl_sys::BN_GENCB\">BN_GENCB</a>","synthetic":true,"types":["openssl_sys::handwritten::types::BN_GENCB"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.EVP_CIPHER.html\" title=\"enum openssl_sys::EVP_CIPHER\">EVP_CIPHER</a>","synthetic":true,"types":["openssl_sys::handwritten::types::EVP_CIPHER"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.EVP_CIPHER_CTX.html\" title=\"enum openssl_sys::EVP_CIPHER_CTX\">EVP_CIPHER_CTX</a>","synthetic":true,"types":["openssl_sys::handwritten::types::EVP_CIPHER_CTX"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.EVP_MD.html\" title=\"enum openssl_sys::EVP_MD\">EVP_MD</a>","synthetic":true,"types":["openssl_sys::handwritten::types::EVP_MD"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.EVP_MD_CTX.html\" title=\"enum openssl_sys::EVP_MD_CTX\">EVP_MD_CTX</a>","synthetic":true,"types":["openssl_sys::handwritten::types::EVP_MD_CTX"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.PKCS8_PRIV_KEY_INFO.html\" title=\"enum openssl_sys::PKCS8_PRIV_KEY_INFO\">PKCS8_PRIV_KEY_INFO</a>","synthetic":true,"types":["openssl_sys::handwritten::types::PKCS8_PRIV_KEY_INFO"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.EVP_PKEY_ASN1_METHOD.html\" title=\"enum openssl_sys::EVP_PKEY_ASN1_METHOD\">EVP_PKEY_ASN1_METHOD</a>","synthetic":true,"types":["openssl_sys::handwritten::types::EVP_PKEY_ASN1_METHOD"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.EVP_PKEY_CTX.html\" title=\"enum openssl_sys::EVP_PKEY_CTX\">EVP_PKEY_CTX</a>","synthetic":true,"types":["openssl_sys::handwritten::types::EVP_PKEY_CTX"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.HMAC_CTX.html\" title=\"enum openssl_sys::HMAC_CTX\">HMAC_CTX</a>","synthetic":true,"types":["openssl_sys::handwritten::types::HMAC_CTX"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.DH.html\" title=\"enum openssl_sys::DH\">DH</a>","synthetic":true,"types":["openssl_sys::handwritten::types::DH"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.DH_METHOD.html\" title=\"enum openssl_sys::DH_METHOD\">DH_METHOD</a>","synthetic":true,"types":["openssl_sys::handwritten::types::DH_METHOD"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.DSA.html\" title=\"enum openssl_sys::DSA\">DSA</a>","synthetic":true,"types":["openssl_sys::handwritten::types::DSA"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.DSA_METHOD.html\" title=\"enum openssl_sys::DSA_METHOD\">DSA_METHOD</a>","synthetic":true,"types":["openssl_sys::handwritten::types::DSA_METHOD"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.RSA.html\" title=\"enum openssl_sys::RSA\">RSA</a>","synthetic":true,"types":["openssl_sys::handwritten::types::RSA"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.RSA_METHOD.html\" title=\"enum openssl_sys::RSA_METHOD\">RSA_METHOD</a>","synthetic":true,"types":["openssl_sys::handwritten::types::RSA_METHOD"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.EC_KEY.html\" title=\"enum openssl_sys::EC_KEY\">EC_KEY</a>","synthetic":true,"types":["openssl_sys::handwritten::types::EC_KEY"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509.html\" title=\"enum openssl_sys::X509\">X509</a>","synthetic":true,"types":["openssl_sys::handwritten::types::X509"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_ALGOR.html\" title=\"enum openssl_sys::X509_ALGOR\">X509_ALGOR</a>","synthetic":true,"types":["openssl_sys::handwritten::types::X509_ALGOR"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_LOOKUP_METHOD.html\" title=\"enum openssl_sys::X509_LOOKUP_METHOD\">X509_LOOKUP_METHOD</a>","synthetic":true,"types":["openssl_sys::handwritten::types::X509_LOOKUP_METHOD"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_NAME.html\" title=\"enum openssl_sys::X509_NAME\">X509_NAME</a>","synthetic":true,"types":["openssl_sys::handwritten::types::X509_NAME"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_STORE.html\" title=\"enum openssl_sys::X509_STORE\">X509_STORE</a>","synthetic":true,"types":["openssl_sys::handwritten::types::X509_STORE"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_STORE_CTX.html\" title=\"enum openssl_sys::X509_STORE_CTX\">X509_STORE_CTX</a>","synthetic":true,"types":["openssl_sys::handwritten::types::X509_STORE_CTX"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_VERIFY_PARAM.html\" title=\"enum openssl_sys::X509_VERIFY_PARAM\">X509_VERIFY_PARAM</a>","synthetic":true,"types":["openssl_sys::handwritten::types::X509_VERIFY_PARAM"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_OBJECT.html\" title=\"enum openssl_sys::X509_OBJECT\">X509_OBJECT</a>","synthetic":true,"types":["openssl_sys::handwritten::types::X509_OBJECT"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_LOOKUP.html\" title=\"enum openssl_sys::X509_LOOKUP\">X509_LOOKUP</a>","synthetic":true,"types":["openssl_sys::handwritten::types::X509_LOOKUP"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl_sys/struct.X509V3_CTX.html\" title=\"struct openssl_sys::X509V3_CTX\">X509V3_CTX</a>","synthetic":true,"types":["openssl_sys::handwritten::types::X509V3_CTX"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.CONF.html\" title=\"enum openssl_sys::CONF\">CONF</a>","synthetic":true,"types":["openssl_sys::handwritten::types::CONF"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.OPENSSL_INIT_SETTINGS.html\" title=\"enum openssl_sys::OPENSSL_INIT_SETTINGS\">OPENSSL_INIT_SETTINGS</a>","synthetic":true,"types":["openssl_sys::handwritten::types::OPENSSL_INIT_SETTINGS"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.ENGINE.html\" title=\"enum openssl_sys::ENGINE\">ENGINE</a>","synthetic":true,"types":["openssl_sys::handwritten::types::ENGINE"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.SSL.html\" title=\"enum openssl_sys::SSL\">SSL</a>","synthetic":true,"types":["openssl_sys::handwritten::types::SSL"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.SSL_CTX.html\" title=\"enum openssl_sys::SSL_CTX\">SSL_CTX</a>","synthetic":true,"types":["openssl_sys::handwritten::types::SSL_CTX"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.COMP_CTX.html\" title=\"enum openssl_sys::COMP_CTX\">COMP_CTX</a>","synthetic":true,"types":["openssl_sys::handwritten::types::COMP_CTX"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.COMP_METHOD.html\" title=\"enum openssl_sys::COMP_METHOD\">COMP_METHOD</a>","synthetic":true,"types":["openssl_sys::handwritten::types::COMP_METHOD"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.CRYPTO_EX_DATA.html\" title=\"enum openssl_sys::CRYPTO_EX_DATA\">CRYPTO_EX_DATA</a>","synthetic":true,"types":["openssl_sys::handwritten::types::CRYPTO_EX_DATA"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.OCSP_RESPONSE.html\" title=\"enum openssl_sys::OCSP_RESPONSE\">OCSP_RESPONSE</a>","synthetic":true,"types":["openssl_sys::handwritten::types::OCSP_RESPONSE"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl_sys/struct.X509_VAL.html\" title=\"struct openssl_sys::X509_VAL\">X509_VAL</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::X509_VAL"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_NAME_ENTRY.html\" title=\"enum openssl_sys::X509_NAME_ENTRY\">X509_NAME_ENTRY</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::X509_NAME_ENTRY"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_X509_NAME.html\" title=\"enum openssl_sys::stack_st_X509_NAME\">stack_st_X509_NAME</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::stack_st_X509_NAME"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_EXTENSION.html\" title=\"enum openssl_sys::X509_EXTENSION\">X509_EXTENSION</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::X509_EXTENSION"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_X509_EXTENSION.html\" title=\"enum openssl_sys::stack_st_X509_EXTENSION\">stack_st_X509_EXTENSION</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::stack_st_X509_EXTENSION"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_X509_ATTRIBUTE.html\" title=\"enum openssl_sys::stack_st_X509_ATTRIBUTE\">stack_st_X509_ATTRIBUTE</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::stack_st_X509_ATTRIBUTE"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_REQ_INFO.html\" title=\"enum openssl_sys::X509_REQ_INFO\">X509_REQ_INFO</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::X509_REQ_INFO"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_CRL.html\" title=\"enum openssl_sys::X509_CRL\">X509_CRL</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::X509_CRL"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_X509_CRL.html\" title=\"enum openssl_sys::stack_st_X509_CRL\">stack_st_X509_CRL</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::stack_st_X509_CRL"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_CRL_INFO.html\" title=\"enum openssl_sys::X509_CRL_INFO\">X509_CRL_INFO</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::X509_CRL_INFO"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_REVOKED.html\" title=\"enum openssl_sys::X509_REVOKED\">X509_REVOKED</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::X509_REVOKED"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_X509_REVOKED.html\" title=\"enum openssl_sys::stack_st_X509_REVOKED\">stack_st_X509_REVOKED</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::stack_st_X509_REVOKED"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_REQ.html\" title=\"enum openssl_sys::X509_REQ\">X509_REQ</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::X509_REQ"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.X509_CINF.html\" title=\"enum openssl_sys::X509_CINF\">X509_CINF</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::X509_CINF"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_X509.html\" title=\"enum openssl_sys::stack_st_X509\">stack_st_X509</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::stack_st_X509"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_X509_OBJECT.html\" title=\"enum openssl_sys::stack_st_X509_OBJECT\">stack_st_X509_OBJECT</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::stack_st_X509_OBJECT"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_X509_LOOKUP.html\" title=\"enum openssl_sys::stack_st_X509_LOOKUP\">stack_st_X509_LOOKUP</a>","synthetic":true,"types":["openssl_sys::handwritten::x509::stack_st_X509_LOOKUP"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.CONF_METHOD.html\" title=\"enum openssl_sys::CONF_METHOD\">CONF_METHOD</a>","synthetic":true,"types":["openssl_sys::handwritten::x509v3::CONF_METHOD"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl_sys/struct.ACCESS_DESCRIPTION.html\" title=\"struct openssl_sys::ACCESS_DESCRIPTION\">ACCESS_DESCRIPTION</a>","synthetic":true,"types":["openssl_sys::handwritten::x509v3::ACCESS_DESCRIPTION"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_ACCESS_DESCRIPTION.html\" title=\"enum openssl_sys::stack_st_ACCESS_DESCRIPTION\">stack_st_ACCESS_DESCRIPTION</a>","synthetic":true,"types":["openssl_sys::handwritten::x509v3::stack_st_ACCESS_DESCRIPTION"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl_sys/struct.AUTHORITY_KEYID.html\" title=\"struct openssl_sys::AUTHORITY_KEYID\">AUTHORITY_KEYID</a>","synthetic":true,"types":["openssl_sys::handwritten::x509v3::AUTHORITY_KEYID"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.EVP_PKEY.html\" title=\"enum openssl_sys::EVP_PKEY\">EVP_PKEY</a>","synthetic":true,"types":["openssl_sys::types::EVP_PKEY"]},{"text":"impl Freeze for <a class=\"struct\" href=\"openssl_sys/struct.GENERAL_NAME.html\" title=\"struct openssl_sys::GENERAL_NAME\">GENERAL_NAME</a>","synthetic":true,"types":["openssl_sys::x509v3::GENERAL_NAME"]},{"text":"impl Freeze for <a class=\"enum\" href=\"openssl_sys/enum.stack_st_GENERAL_NAME.html\" title=\"enum openssl_sys::stack_st_GENERAL_NAME\">stack_st_GENERAL_NAME</a>","synthetic":true,"types":["openssl_sys::x509v3::stack_st_GENERAL_NAME"]}];
implementors["ordered_float"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"ordered_float/struct.OrderedFloat.html\" title=\"struct ordered_float::OrderedFloat\">OrderedFloat</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["ordered_float::OrderedFloat"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"ordered_float/struct.NotNan.html\" title=\"struct ordered_float::NotNan\">NotNan</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["ordered_float::NotNan"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ordered_float/struct.FloatIsNan.html\" title=\"struct ordered_float::FloatIsNan\">FloatIsNan</a>","synthetic":true,"types":["ordered_float::FloatIsNan"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"enum\" href=\"ordered_float/enum.ParseNotNanError.html\" title=\"enum ordered_float::ParseNotNanError\">ParseNotNanError</a>&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["ordered_float::ParseNotNanError"]}];
implementors["percent_encoding"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"percent_encoding/struct.AsciiSet.html\" title=\"struct percent_encoding::AsciiSet\">AsciiSet</a>","synthetic":true,"types":["percent_encoding::AsciiSet"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"percent_encoding/struct.PercentEncode.html\" title=\"struct percent_encoding::PercentEncode\">PercentEncode</a>&lt;'a&gt;","synthetic":true,"types":["percent_encoding::PercentEncode"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"percent_encoding/struct.PercentDecode.html\" title=\"struct percent_encoding::PercentDecode\">PercentDecode</a>&lt;'a&gt;","synthetic":true,"types":["percent_encoding::PercentDecode"]}];
implementors["petgraph"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.Time.html\" title=\"struct petgraph::visit::Time\">Time</a>","synthetic":true,"types":["petgraph::visit::dfsvisit::Time"]},{"text":"impl&lt;N&gt; Freeze for <a class=\"enum\" href=\"petgraph/visit/enum.DfsEvent.html\" title=\"enum petgraph::visit::DfsEvent\">DfsEvent</a>&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::dfsvisit::DfsEvent"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"enum\" href=\"petgraph/visit/enum.Control.html\" title=\"enum petgraph::visit::Control\">Control</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::dfsvisit::Control"]},{"text":"impl&lt;N, VM&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.Dfs.html\" title=\"struct petgraph::visit::Dfs\">Dfs</a>&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::traversal::Dfs"]},{"text":"impl&lt;N, VM&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.DfsPostOrder.html\" title=\"struct petgraph::visit::DfsPostOrder\">DfsPostOrder</a>&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::traversal::DfsPostOrder"]},{"text":"impl&lt;N, VM&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.Bfs.html\" title=\"struct petgraph::visit::Bfs\">Bfs</a>&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::traversal::Bfs"]},{"text":"impl&lt;N, VM&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.Topo.html\" title=\"struct petgraph::visit::Topo\">Topo</a>&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::traversal::Topo"]},{"text":"impl&lt;W, C&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.WalkerIter.html\" title=\"struct petgraph::visit::WalkerIter\">WalkerIter</a>&lt;W, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::traversal::WalkerIter"]},{"text":"impl&lt;G, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.NodeFiltered.html\" title=\"struct petgraph::visit::NodeFiltered\">NodeFiltered</a>&lt;G, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::filter::NodeFiltered"]},{"text":"impl&lt;'a, I, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.NodeFilteredNeighbors.html\" title=\"struct petgraph::visit::NodeFilteredNeighbors\">NodeFilteredNeighbors</a>&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::filter::NodeFilteredNeighbors"]},{"text":"impl&lt;'a, I, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.NodeFilteredNodes.html\" title=\"struct petgraph::visit::NodeFilteredNodes\">NodeFilteredNodes</a>&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::filter::NodeFilteredNodes"]},{"text":"impl&lt;'a, G, I, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.NodeFilteredEdgeReferences.html\" title=\"struct petgraph::visit::NodeFilteredEdgeReferences\">NodeFilteredEdgeReferences</a>&lt;'a, G, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::filter::NodeFilteredEdgeReferences"]},{"text":"impl&lt;'a, G, I, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.NodeFilteredEdges.html\" title=\"struct petgraph::visit::NodeFilteredEdges\">NodeFilteredEdges</a>&lt;'a, G, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::filter::NodeFilteredEdges"]},{"text":"impl&lt;G, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.EdgeFiltered.html\" title=\"struct petgraph::visit::EdgeFiltered\">EdgeFiltered</a>&lt;G, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::filter::EdgeFiltered"]},{"text":"impl&lt;'a, G, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.EdgeFilteredNeighbors.html\" title=\"struct petgraph::visit::EdgeFilteredNeighbors\">EdgeFilteredNeighbors</a>&lt;'a, G, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as <a class=\"trait\" href=\"petgraph/visit/trait.IntoEdges.html\" title=\"trait petgraph::visit::IntoEdges\">IntoEdges</a>&gt;::<a class=\"associatedtype\" href=\"petgraph/visit/trait.IntoEdges.html#associatedtype.Edges\" title=\"type petgraph::visit::IntoEdges::Edges\">Edges</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::filter::EdgeFilteredNeighbors"]},{"text":"impl&lt;'a, G, I, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.EdgeFilteredEdges.html\" title=\"struct petgraph::visit::EdgeFilteredEdges\">EdgeFilteredEdges</a>&lt;'a, G, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::filter::EdgeFilteredEdges"]},{"text":"impl&lt;'a, G, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.EdgeFilteredNeighborsDirected.html\" title=\"struct petgraph::visit::EdgeFilteredNeighborsDirected\">EdgeFilteredNeighborsDirected</a>&lt;'a, G, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as <a class=\"trait\" href=\"petgraph/visit/trait.IntoEdgesDirected.html\" title=\"trait petgraph::visit::IntoEdgesDirected\">IntoEdgesDirected</a>&gt;::<a class=\"associatedtype\" href=\"petgraph/visit/trait.IntoEdgesDirected.html#associatedtype.EdgesDirected\" title=\"type petgraph::visit::IntoEdgesDirected::EdgesDirected\">EdgesDirected</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as <a class=\"trait\" href=\"petgraph/visit/trait.GraphBase.html\" title=\"trait petgraph::visit::GraphBase\">GraphBase</a>&gt;::<a class=\"associatedtype\" href=\"petgraph/visit/trait.GraphBase.html#associatedtype.NodeId\" title=\"type petgraph::visit::GraphBase::NodeId\">NodeId</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::filter::EdgeFilteredNeighborsDirected"]},{"text":"impl&lt;G&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.Reversed.html\" title=\"struct petgraph::visit::Reversed\">Reversed</a>&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::reversed::Reversed"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.ReversedEdges.html\" title=\"struct petgraph::visit::ReversedEdges\">ReversedEdges</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::reversed::ReversedEdges"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.ReversedEdgeReference.html\" title=\"struct petgraph::visit::ReversedEdgeReference\">ReversedEdgeReference</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::reversed::ReversedEdgeReference"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"petgraph/visit/struct.ReversedEdgeReferences.html\" title=\"struct petgraph::visit::ReversedEdgeReferences\">ReversedEdgeReferences</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::visit::reversed::ReversedEdgeReferences"]},{"text":"impl&lt;N, E&gt; Freeze for <a class=\"enum\" href=\"petgraph/data/enum.Element.html\" title=\"enum petgraph::data::Element\">Element</a>&lt;N, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::data::Element"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"petgraph/data/struct.FilterElements.html\" title=\"struct petgraph::data::FilterElements\">FilterElements</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::data::FilterElements"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/adj/struct.EdgeIndex.html\" title=\"struct petgraph::adj::EdgeIndex\">EdgeIndex</a>&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::adj::EdgeIndex"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/adj/struct.OutgoingEdgeIndices.html\" title=\"struct petgraph::adj::OutgoingEdgeIndices\">OutgoingEdgeIndices</a>&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::adj::OutgoingEdgeIndices"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/adj/struct.Neighbors.html\" title=\"struct petgraph::adj::Neighbors\">Neighbors</a>&lt;'a, E, Ix&gt;","synthetic":true,"types":["petgraph::adj::Neighbors"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/adj/struct.EdgeReference.html\" title=\"struct petgraph::adj::EdgeReference\">EdgeReference</a>&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::adj::EdgeReference"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/adj/struct.EdgeIndices.html\" title=\"struct petgraph::adj::EdgeIndices\">EdgeIndices</a>&lt;'a, E, Ix&gt;","synthetic":true,"types":["petgraph::adj::EdgeIndices"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/adj/struct.NodeIndices.html\" title=\"struct petgraph::adj::NodeIndices\">NodeIndices</a>&lt;Ix&gt;","synthetic":true,"types":["petgraph::adj::NodeIndices"]},{"text":"impl&lt;E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/adj/struct.List.html\" title=\"struct petgraph::adj::List\">List</a>&lt;E, Ix&gt;","synthetic":true,"types":["petgraph::adj::List"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/adj/struct.EdgeReferences.html\" title=\"struct petgraph::adj::EdgeReferences\">EdgeReferences</a>&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::adj::EdgeReferences"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/adj/struct.OutgoingEdgeReferences.html\" title=\"struct petgraph::adj::OutgoingEdgeReferences\">OutgoingEdgeReferences</a>&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::adj::OutgoingEdgeReferences"]},{"text":"impl&lt;NodeId, EdgeWeight&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/bellman_ford/struct.Paths.html\" title=\"struct petgraph::algo::bellman_ford::Paths\">Paths</a>&lt;NodeId, EdgeWeight&gt;","synthetic":true,"types":["petgraph::algo::bellman_ford::Paths"]},{"text":"impl&lt;N&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/dominators/struct.Dominators.html\" title=\"struct petgraph::algo::dominators::Dominators\">Dominators</a>&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::algo::dominators::Dominators"]},{"text":"impl&lt;'a, N&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/dominators/struct.DominatorsIter.html\" title=\"struct petgraph::algo::dominators::DominatorsIter\">DominatorsIter</a>&lt;'a, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::algo::dominators::DominatorsIter"]},{"text":"impl&lt;'a, N&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/dominators/struct.DominatedByIter.html\" title=\"struct petgraph::algo::dominators::DominatedByIter\">DominatedByIter</a>&lt;'a, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::algo::dominators::DominatedByIter"]},{"text":"impl&lt;G&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/matching/struct.Matching.html\" title=\"struct petgraph::algo::matching::Matching\">Matching</a>&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::algo::matching::Matching"]},{"text":"impl&lt;'a, G&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/matching/struct.MatchedNodes.html\" title=\"struct petgraph::algo::matching::MatchedNodes\">MatchedNodes</a>&lt;'a, G&gt;","synthetic":true,"types":["petgraph::algo::matching::MatchedNodes"]},{"text":"impl&lt;'a, G&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/matching/struct.MatchedEdges.html\" title=\"struct petgraph::algo::matching::MatchedEdges\">MatchedEdges</a>&lt;'a, G&gt;","synthetic":true,"types":["petgraph::algo::matching::MatchedEdges"]},{"text":"impl&lt;N, VM&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/struct.DfsSpace.html\" title=\"struct petgraph::algo::DfsSpace\">DfsSpace</a>&lt;N, VM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;VM: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::algo::DfsSpace"]},{"text":"impl&lt;N&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/struct.TarjanScc.html\" title=\"struct petgraph::algo::TarjanScc\">TarjanScc</a>&lt;N&gt;","synthetic":true,"types":["petgraph::algo::TarjanScc"]},{"text":"impl&lt;G&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/struct.MinSpanningTree.html\" title=\"struct petgraph::algo::MinSpanningTree\">MinSpanningTree</a>&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as <a class=\"trait\" href=\"petgraph/visit/trait.IntoNodeReferences.html\" title=\"trait petgraph::visit::IntoNodeReferences\">IntoNodeReferences</a>&gt;::<a class=\"associatedtype\" href=\"petgraph/visit/trait.IntoNodeReferences.html#associatedtype.NodeReferences\" title=\"type petgraph::visit::IntoNodeReferences::NodeReferences\">NodeReferences</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::algo::MinSpanningTree"]},{"text":"impl&lt;N&gt; Freeze for <a class=\"struct\" href=\"petgraph/algo/struct.Cycle.html\" title=\"struct petgraph::algo::Cycle\">Cycle</a>&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::algo::Cycle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"petgraph/algo/struct.NegativeCycle.html\" title=\"struct petgraph::algo::NegativeCycle\">NegativeCycle</a>","synthetic":true,"types":["petgraph::algo::NegativeCycle"]},{"text":"impl&lt;N, E, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/csr/struct.Csr.html\" title=\"struct petgraph::csr::Csr\">Csr</a>&lt;N, E, Ty, Ix&gt;","synthetic":true,"types":["petgraph::csr::Csr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"petgraph/csr/struct.EdgesNotSorted.html\" title=\"struct petgraph::csr::EdgesNotSorted\">EdgesNotSorted</a>","synthetic":true,"types":["petgraph::csr::EdgesNotSorted"]},{"text":"impl&lt;'a, E, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/csr/struct.Edges.html\" title=\"struct petgraph::csr::Edges\">Edges</a>&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::csr::Edges"]},{"text":"impl&lt;'a, E, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/csr/struct.EdgeReference.html\" title=\"struct petgraph::csr::EdgeReference\">EdgeReference</a>&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::csr::EdgeReference"]},{"text":"impl&lt;'a, E, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/csr/struct.EdgeReferences.html\" title=\"struct petgraph::csr::EdgeReferences\">EdgeReferences</a>&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::csr::EdgeReferences"]},{"text":"impl&lt;'a, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/csr/struct.Neighbors.html\" title=\"struct petgraph::csr::Neighbors\">Neighbors</a>&lt;'a, Ix&gt;","synthetic":true,"types":["petgraph::csr::Neighbors"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/csr/struct.NodeIdentifiers.html\" title=\"struct petgraph::csr::NodeIdentifiers\">NodeIdentifiers</a>&lt;Ix&gt;","synthetic":true,"types":["petgraph::csr::NodeIdentifiers"]},{"text":"impl&lt;'a, N, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/csr/struct.NodeReferences.html\" title=\"struct petgraph::csr::NodeReferences\">NodeReferences</a>&lt;'a, N, Ix&gt;","synthetic":true,"types":["petgraph::csr::NodeReferences"]},{"text":"impl&lt;'a, G&gt; Freeze for <a class=\"struct\" href=\"petgraph/dot/struct.Dot.html\" title=\"struct petgraph::dot::Dot\">Dot</a>&lt;'a, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::dot::Dot"]},{"text":"impl Freeze for <a class=\"enum\" href=\"petgraph/dot/enum.Config.html\" title=\"enum petgraph::dot::Config\">Config</a>","synthetic":true,"types":["petgraph::dot::Config"]},{"text":"impl&lt;N, E, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.StableGraph.html\" title=\"struct petgraph::stable_graph::StableGraph\">StableGraph</a>&lt;N, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::stable_graph::StableGraph"]},{"text":"impl&lt;'a, N, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.NodeReferences.html\" title=\"struct petgraph::stable_graph::NodeReferences\">NodeReferences</a>&lt;'a, N, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::stable_graph::NodeReferences"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.EdgeReference.html\" title=\"struct petgraph::stable_graph::EdgeReference\">EdgeReference</a>&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::stable_graph::EdgeReference"]},{"text":"impl&lt;'a, E, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.Edges.html\" title=\"struct petgraph::stable_graph::Edges\">Edges</a>&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::stable_graph::Edges"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.EdgeReferences.html\" title=\"struct petgraph::stable_graph::EdgeReferences\">EdgeReferences</a>&lt;'a, E, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::stable_graph::EdgeReferences"]},{"text":"impl&lt;'a, N, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.Externals.html\" title=\"struct petgraph::stable_graph::Externals\">Externals</a>&lt;'a, N, Ty, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::stable_graph::Externals"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.Neighbors.html\" title=\"struct petgraph::stable_graph::Neighbors\">Neighbors</a>&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::stable_graph::Neighbors"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.WalkNeighbors.html\" title=\"struct petgraph::stable_graph::WalkNeighbors\">WalkNeighbors</a>&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::stable_graph::WalkNeighbors"]},{"text":"impl&lt;'a, N, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.NodeIndices.html\" title=\"struct petgraph::stable_graph::NodeIndices\">NodeIndices</a>&lt;'a, N, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::stable_graph::NodeIndices"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/stable_graph/struct.EdgeIndices.html\" title=\"struct petgraph::stable_graph::EdgeIndices\">EdgeIndices</a>&lt;'a, E, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::stable_graph::EdgeIndices"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.NodeIndex.html\" title=\"struct petgraph::graph::NodeIndex\">NodeIndex</a>&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::NodeIndex"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.EdgeIndex.html\" title=\"struct petgraph::graph::EdgeIndex\">EdgeIndex</a>&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::EdgeIndex"]},{"text":"impl&lt;N, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.Node.html\" title=\"struct petgraph::graph::Node\">Node</a>&lt;N, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::Node"]},{"text":"impl&lt;E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.Edge.html\" title=\"struct petgraph::graph::Edge\">Edge</a>&lt;E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::Edge"]},{"text":"impl&lt;N, E, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.Graph.html\" title=\"struct petgraph::graph::Graph\">Graph</a>&lt;N, E, Ty, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::Graph"]},{"text":"impl&lt;'a, N, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.Externals.html\" title=\"struct petgraph::graph::Externals\">Externals</a>&lt;'a, N, Ty, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::Externals"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.Neighbors.html\" title=\"struct petgraph::graph::Neighbors\">Neighbors</a>&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::Neighbors"]},{"text":"impl&lt;'a, E, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.Edges.html\" title=\"struct petgraph::graph::Edges\">Edges</a>&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::Edges"]},{"text":"impl&lt;'a, E, Ty, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.EdgesConnecting.html\" title=\"struct petgraph::graph::EdgesConnecting\">EdgesConnecting</a>&lt;'a, E, Ty, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::EdgesConnecting"]},{"text":"impl&lt;'a, N, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.NodeWeightsMut.html\" title=\"struct petgraph::graph::NodeWeightsMut\">NodeWeightsMut</a>&lt;'a, N, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::NodeWeightsMut"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.EdgeWeightsMut.html\" title=\"struct petgraph::graph::EdgeWeightsMut\">EdgeWeightsMut</a>&lt;'a, E, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::EdgeWeightsMut"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.WalkNeighbors.html\" title=\"struct petgraph::graph::WalkNeighbors\">WalkNeighbors</a>&lt;Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::WalkNeighbors"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.NodeIndices.html\" title=\"struct petgraph::graph::NodeIndices\">NodeIndices</a>&lt;Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::NodeIndices"]},{"text":"impl&lt;Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.EdgeIndices.html\" title=\"struct petgraph::graph::EdgeIndices\">EdgeIndices</a>&lt;Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::EdgeIndices"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.EdgeReference.html\" title=\"struct petgraph::graph::EdgeReference\">EdgeReference</a>&lt;'a, E, Ix&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ix: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graph_impl::EdgeReference"]},{"text":"impl&lt;'a, N, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.NodeReferences.html\" title=\"struct petgraph::graph::NodeReferences\">NodeReferences</a>&lt;'a, N, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::NodeReferences"]},{"text":"impl&lt;'a, E, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.EdgeReferences.html\" title=\"struct petgraph::graph::EdgeReferences\">EdgeReferences</a>&lt;'a, E, Ix&gt;","synthetic":true,"types":["petgraph::graph_impl::EdgeReferences"]},{"text":"impl&lt;'a, G&gt; Freeze for <a class=\"struct\" href=\"petgraph/graph/struct.Frozen.html\" title=\"struct petgraph::graph::Frozen\">Frozen</a>&lt;'a, G&gt;","synthetic":true,"types":["petgraph::graph_impl::Frozen"]},{"text":"impl&lt;N, E, Ty&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.GraphMap.html\" title=\"struct petgraph::graphmap::GraphMap\">GraphMap</a>&lt;N, E, Ty&gt;","synthetic":true,"types":["petgraph::graphmap::GraphMap"]},{"text":"impl&lt;'a, N&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.Nodes.html\" title=\"struct petgraph::graphmap::Nodes\">Nodes</a>&lt;'a, N&gt;","synthetic":true,"types":["petgraph::graphmap::Nodes"]},{"text":"impl&lt;'a, N, Ty&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.Neighbors.html\" title=\"struct petgraph::graphmap::Neighbors\">Neighbors</a>&lt;'a, N, Ty&gt;","synthetic":true,"types":["petgraph::graphmap::Neighbors"]},{"text":"impl&lt;'a, N, Ty&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.NeighborsDirected.html\" title=\"struct petgraph::graphmap::NeighborsDirected\">NeighborsDirected</a>&lt;'a, N, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graphmap::NeighborsDirected"]},{"text":"impl&lt;'a, N, E, Ty&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.Edges.html\" title=\"struct petgraph::graphmap::Edges\">Edges</a>&lt;'a, N, E, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graphmap::Edges"]},{"text":"impl&lt;'a, N, E, Ty&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.EdgesDirected.html\" title=\"struct petgraph::graphmap::EdgesDirected\">EdgesDirected</a>&lt;'a, N, E, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::graphmap::EdgesDirected"]},{"text":"impl&lt;'a, N, E, Ty&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.AllEdges.html\" title=\"struct petgraph::graphmap::AllEdges\">AllEdges</a>&lt;'a, N, E, Ty&gt;","synthetic":true,"types":["petgraph::graphmap::AllEdges"]},{"text":"impl&lt;'a, N, E, Ty&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.AllEdgesMut.html\" title=\"struct petgraph::graphmap::AllEdgesMut\">AllEdgesMut</a>&lt;'a, N, E, Ty&gt;","synthetic":true,"types":["petgraph::graphmap::AllEdgesMut"]},{"text":"impl&lt;'b, T&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.Ptr.html\" title=\"struct petgraph::graphmap::Ptr\">Ptr</a>&lt;'b, T&gt;","synthetic":true,"types":["petgraph::graphmap::Ptr"]},{"text":"impl&lt;'a, N, E, Ty&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.NodeIdentifiers.html\" title=\"struct petgraph::graphmap::NodeIdentifiers\">NodeIdentifiers</a>&lt;'a, N, E, Ty&gt;","synthetic":true,"types":["petgraph::graphmap::NodeIdentifiers"]},{"text":"impl&lt;'a, N, E, Ty&gt; Freeze for <a class=\"struct\" href=\"petgraph/graphmap/struct.NodeReferences.html\" title=\"struct petgraph::graphmap::NodeReferences\">NodeReferences</a>&lt;'a, N, E, Ty&gt;","synthetic":true,"types":["petgraph::graphmap::NodeReferences"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.NotZero.html\" title=\"struct petgraph::matrix_graph::NotZero\">NotZero</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["petgraph::matrix_graph::NotZero"]},{"text":"impl&lt;N, E, Ty, Null, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.MatrixGraph.html\" title=\"struct petgraph::matrix_graph::MatrixGraph\">MatrixGraph</a>&lt;N, E, Ty, Null, Ix&gt;","synthetic":true,"types":["petgraph::matrix_graph::MatrixGraph"]},{"text":"impl&lt;'a, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.NodeIdentifiers.html\" title=\"struct petgraph::matrix_graph::NodeIdentifiers\">NodeIdentifiers</a>&lt;'a, Ix&gt;","synthetic":true,"types":["petgraph::matrix_graph::NodeIdentifiers"]},{"text":"impl&lt;'a, N, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.NodeReferences.html\" title=\"struct petgraph::matrix_graph::NodeReferences\">NodeReferences</a>&lt;'a, N, Ix&gt;","synthetic":true,"types":["petgraph::matrix_graph::NodeReferences"]},{"text":"impl&lt;'a, Ty, Null, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.EdgeReferences.html\" title=\"struct petgraph::matrix_graph::EdgeReferences\">EdgeReferences</a>&lt;'a, Ty, Null, Ix&gt;","synthetic":true,"types":["petgraph::matrix_graph::EdgeReferences"]},{"text":"impl&lt;'a, Ty, Null, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.Neighbors.html\" title=\"struct petgraph::matrix_graph::Neighbors\">Neighbors</a>&lt;'a, Ty, Null, Ix&gt;","synthetic":true,"types":["petgraph::matrix_graph::Neighbors"]},{"text":"impl&lt;'a, Ty, Null, Ix&gt; Freeze for <a class=\"struct\" href=\"petgraph/matrix_graph/struct.Edges.html\" title=\"struct petgraph::matrix_graph::Edges\">Edges</a>&lt;'a, Ty, Null, Ix&gt;","synthetic":true,"types":["petgraph::matrix_graph::Edges"]},{"text":"impl&lt;K&gt; Freeze for <a class=\"struct\" href=\"petgraph/unionfind/struct.UnionFind.html\" title=\"struct petgraph::unionfind::UnionFind\">UnionFind</a>&lt;K&gt;","synthetic":true,"types":["petgraph::unionfind::UnionFind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"petgraph/enum.Direction.html\" title=\"enum petgraph::Direction\">Direction</a>","synthetic":true,"types":["petgraph::Direction"]},{"text":"impl Freeze for <a class=\"enum\" href=\"petgraph/enum.Directed.html\" title=\"enum petgraph::Directed\">Directed</a>","synthetic":true,"types":["petgraph::Directed"]},{"text":"impl Freeze for <a class=\"enum\" href=\"petgraph/enum.Undirected.html\" title=\"enum petgraph::Undirected\">Undirected</a>","synthetic":true,"types":["petgraph::Undirected"]}];
implementors["png"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"png/chunk/struct.ChunkType.html\" title=\"struct png::chunk::ChunkType\">ChunkType</a>","synthetic":true,"types":["png::chunk::ChunkType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"png/enum.ColorType.html\" title=\"enum png::ColorType\">ColorType</a>","synthetic":true,"types":["png::common::ColorType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"png/enum.BitDepth.html\" title=\"enum png::BitDepth\">BitDepth</a>","synthetic":true,"types":["png::common::BitDepth"]},{"text":"impl Freeze for <a class=\"struct\" href=\"png/struct.PixelDimensions.html\" title=\"struct png::PixelDimensions\">PixelDimensions</a>","synthetic":true,"types":["png::common::PixelDimensions"]},{"text":"impl Freeze for <a class=\"enum\" href=\"png/enum.Unit.html\" title=\"enum png::Unit\">Unit</a>","synthetic":true,"types":["png::common::Unit"]},{"text":"impl Freeze for <a class=\"enum\" href=\"png/enum.DisposeOp.html\" title=\"enum png::DisposeOp\">DisposeOp</a>","synthetic":true,"types":["png::common::DisposeOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"png/enum.BlendOp.html\" title=\"enum png::BlendOp\">BlendOp</a>","synthetic":true,"types":["png::common::BlendOp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"png/struct.FrameControl.html\" title=\"struct png::FrameControl\">FrameControl</a>","synthetic":true,"types":["png::common::FrameControl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"png/struct.AnimationControl.html\" title=\"struct png::AnimationControl\">AnimationControl</a>","synthetic":true,"types":["png::common::AnimationControl"]},{"text":"impl Freeze for <a class=\"enum\" href=\"png/enum.Compression.html\" title=\"enum png::Compression\">Compression</a>","synthetic":true,"types":["png::common::Compression"]},{"text":"impl Freeze for <a class=\"struct\" href=\"png/struct.ScaledFloat.html\" title=\"struct png::ScaledFloat\">ScaledFloat</a>","synthetic":true,"types":["png::common::ScaledFloat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"png/struct.SourceChromaticities.html\" title=\"struct png::SourceChromaticities\">SourceChromaticities</a>","synthetic":true,"types":["png::common::SourceChromaticities"]},{"text":"impl Freeze for <a class=\"enum\" href=\"png/enum.SrgbRenderingIntent.html\" title=\"enum png::SrgbRenderingIntent\">SrgbRenderingIntent</a>","synthetic":true,"types":["png::common::SrgbRenderingIntent"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"png/struct.Info.html\" title=\"struct png::Info\">Info</a>&lt;'a&gt;","synthetic":true,"types":["png::common::Info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"png/struct.Transformations.html\" title=\"struct png::Transformations\">Transformations</a>","synthetic":true,"types":["png::common::Transformations"]},{"text":"impl Freeze for <a class=\"struct\" href=\"png/struct.ParameterError.html\" title=\"struct png::ParameterError\">ParameterError</a>","synthetic":true,"types":["png::common::ParameterError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"png/enum.Decoded.html\" title=\"enum png::Decoded\">Decoded</a>","synthetic":true,"types":["png::decoder::stream::Decoded"]},{"text":"impl Freeze for <a class=\"enum\" href=\"png/enum.DecodingError.html\" title=\"enum png::DecodingError\">DecodingError</a>","synthetic":true,"types":["png::decoder::stream::DecodingError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"png/struct.StreamingDecoder.html\" title=\"struct png::StreamingDecoder\">StreamingDecoder</a>","synthetic":true,"types":["png::decoder::stream::StreamingDecoder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"png/struct.OutputInfo.html\" title=\"struct png::OutputInfo\">OutputInfo</a>","synthetic":true,"types":["png::decoder::OutputInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"png/struct.Limits.html\" title=\"struct png::Limits\">Limits</a>","synthetic":true,"types":["png::decoder::Limits"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"png/struct.Decoder.html\" title=\"struct png::Decoder\">Decoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["png::decoder::Decoder"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"png/struct.Reader.html\" title=\"struct png::Reader\">Reader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["png::decoder::Reader"]},{"text":"impl Freeze for <a class=\"enum\" href=\"png/enum.EncodingError.html\" title=\"enum png::EncodingError\">EncodingError</a>","synthetic":true,"types":["png::encoder::EncodingError"]},{"text":"impl&lt;'a, W&gt; Freeze for <a class=\"struct\" href=\"png/struct.Encoder.html\" title=\"struct png::Encoder\">Encoder</a>&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["png::encoder::Encoder"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"png/struct.Writer.html\" title=\"struct png::Writer\">Writer</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["png::encoder::Writer"]},{"text":"impl&lt;'a, W&gt; Freeze for <a class=\"struct\" href=\"png/struct.StreamWriter.html\" title=\"struct png::StreamWriter\">StreamWriter</a>&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["png::encoder::StreamWriter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"png/enum.FilterType.html\" title=\"enum png::FilterType\">FilterType</a>","synthetic":true,"types":["png::filter::FilterType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"png/enum.AdaptiveFilterType.html\" title=\"enum png::AdaptiveFilterType\">AdaptiveFilterType</a>","synthetic":true,"types":["png::filter::AdaptiveFilterType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"png/text_metadata/struct.TEXtChunk.html\" title=\"struct png::text_metadata::TEXtChunk\">TEXtChunk</a>","synthetic":true,"types":["png::text_metadata::TEXtChunk"]},{"text":"impl Freeze for <a class=\"struct\" href=\"png/text_metadata/struct.ZTXtChunk.html\" title=\"struct png::text_metadata::ZTXtChunk\">ZTXtChunk</a>","synthetic":true,"types":["png::text_metadata::ZTXtChunk"]},{"text":"impl Freeze for <a class=\"struct\" href=\"png/text_metadata/struct.ITXtChunk.html\" title=\"struct png::text_metadata::ITXtChunk\">ITXtChunk</a>","synthetic":true,"types":["png::text_metadata::ITXtChunk"]}];
implementors["ppv_lite86"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesS3.html\" title=\"struct ppv_lite86::x86_64::YesS3\">YesS3</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesS3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoS3.html\" title=\"struct ppv_lite86::x86_64::NoS3\">NoS3</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoS3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesS4.html\" title=\"struct ppv_lite86::x86_64::YesS4\">YesS4</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesS4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoS4.html\" title=\"struct ppv_lite86::x86_64::NoS4\">NoS4</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoS4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesA1.html\" title=\"struct ppv_lite86::x86_64::YesA1\">YesA1</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesA1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoA1.html\" title=\"struct ppv_lite86::x86_64::NoA1\">NoA1</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoA1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesA2.html\" title=\"struct ppv_lite86::x86_64::YesA2\">YesA2</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesA2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoA2.html\" title=\"struct ppv_lite86::x86_64::NoA2\">NoA2</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoA2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.YesNI.html\" title=\"struct ppv_lite86::x86_64::YesNI\">YesNI</a>","synthetic":true,"types":["ppv_lite86::x86_64::YesNI"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.NoNI.html\" title=\"struct ppv_lite86::x86_64::NoNI\">NoNI</a>","synthetic":true,"types":["ppv_lite86::x86_64::NoNI"]},{"text":"impl&lt;S3, S4, NI&gt; Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.SseMachine.html\" title=\"struct ppv_lite86::x86_64::SseMachine\">SseMachine</a>&lt;S3, S4, NI&gt;","synthetic":true,"types":["ppv_lite86::x86_64::SseMachine"]},{"text":"impl&lt;NI&gt; Freeze for <a class=\"struct\" href=\"ppv_lite86/x86_64/struct.Avx2Machine.html\" title=\"struct ppv_lite86::x86_64::Avx2Machine\">Avx2Machine</a>&lt;NI&gt;","synthetic":true,"types":["ppv_lite86::x86_64::Avx2Machine"]},{"text":"impl Freeze for <a class=\"union\" href=\"ppv_lite86/x86_64/union.vec128_storage.html\" title=\"union ppv_lite86::x86_64::vec128_storage\">vec128_storage</a>","synthetic":true,"types":["ppv_lite86::x86_64::vec128_storage"]},{"text":"impl Freeze for <a class=\"union\" href=\"ppv_lite86/x86_64/union.vec256_storage.html\" title=\"union ppv_lite86::x86_64::vec256_storage\">vec256_storage</a>","synthetic":true,"types":["ppv_lite86::x86_64::vec256_storage"]},{"text":"impl Freeze for <a class=\"union\" href=\"ppv_lite86/x86_64/union.vec512_storage.html\" title=\"union ppv_lite86::x86_64::vec512_storage\">vec512_storage</a>","synthetic":true,"types":["ppv_lite86::x86_64::vec512_storage"]}];
implementors["proc_macro2"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/token_stream/struct.IntoIter.html\" title=\"struct proc_macro2::token_stream::IntoIter\">IntoIter</a>","synthetic":true,"types":["proc_macro2::token_stream::IntoIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.TokenStream.html\" title=\"struct proc_macro2::TokenStream\">TokenStream</a>","synthetic":true,"types":["proc_macro2::TokenStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.LexError.html\" title=\"struct proc_macro2::LexError\">LexError</a>","synthetic":true,"types":["proc_macro2::LexError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Span.html\" title=\"struct proc_macro2::Span\">Span</a>","synthetic":true,"types":["proc_macro2::Span"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.TokenTree.html\" title=\"enum proc_macro2::TokenTree\">TokenTree</a>","synthetic":true,"types":["proc_macro2::TokenTree"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Group.html\" title=\"struct proc_macro2::Group\">Group</a>","synthetic":true,"types":["proc_macro2::Group"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.Delimiter.html\" title=\"enum proc_macro2::Delimiter\">Delimiter</a>","synthetic":true,"types":["proc_macro2::Delimiter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Punct.html\" title=\"struct proc_macro2::Punct\">Punct</a>","synthetic":true,"types":["proc_macro2::Punct"]},{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.Spacing.html\" title=\"enum proc_macro2::Spacing\">Spacing</a>","synthetic":true,"types":["proc_macro2::Spacing"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Ident.html\" title=\"struct proc_macro2::Ident\">Ident</a>","synthetic":true,"types":["proc_macro2::Ident"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Literal.html\" title=\"struct proc_macro2::Literal\">Literal</a>","synthetic":true,"types":["proc_macro2::Literal"]}];
implementors["proc_macro_error"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"proc_macro_error/enum.Level.html\" title=\"enum proc_macro_error::Level\">Level</a>","synthetic":true,"types":["proc_macro_error::diagnostic::Level"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro_error/struct.Diagnostic.html\" title=\"struct proc_macro_error::Diagnostic\">Diagnostic</a>","synthetic":true,"types":["proc_macro_error::diagnostic::Diagnostic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"proc_macro_error/struct.SpanRange.html\" title=\"struct proc_macro_error::SpanRange\">SpanRange</a>","synthetic":true,"types":["proc_macro_error::SpanRange"]}];
implementors["psl_types"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"psl_types/enum.Type.html\" title=\"enum psl_types::Type\">Type</a>","synthetic":true,"types":["psl_types::Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"psl_types/struct.Info.html\" title=\"struct psl_types::Info\">Info</a>","synthetic":true,"types":["psl_types::Info"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"psl_types/struct.Suffix.html\" title=\"struct psl_types::Suffix\">Suffix</a>&lt;'a&gt;","synthetic":true,"types":["psl_types::Suffix"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"psl_types/struct.Domain.html\" title=\"struct psl_types::Domain\">Domain</a>&lt;'a&gt;","synthetic":true,"types":["psl_types::Domain"]}];
implementors["publicsuffix"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"publicsuffix/enum.Error.html\" title=\"enum publicsuffix::Error\">Error</a>","synthetic":true,"types":["publicsuffix::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"publicsuffix/struct.List.html\" title=\"struct publicsuffix::List\">List</a>","synthetic":true,"types":["publicsuffix::List"]},{"text":"impl Freeze for <a class=\"struct\" href=\"publicsuffix/struct.IcannList.html\" title=\"struct publicsuffix::IcannList\">IcannList</a>","synthetic":true,"types":["publicsuffix::IcannList"]},{"text":"impl Freeze for <a class=\"struct\" href=\"publicsuffix/struct.PrivateList.html\" title=\"struct publicsuffix::PrivateList\">PrivateList</a>","synthetic":true,"types":["publicsuffix::PrivateList"]}];
implementors["quick_xml"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"quick_xml/de/enum.DeError.html\" title=\"enum quick_xml::de::DeError\">DeError</a>","synthetic":true,"types":["quick_xml::errors::serialize::DeError"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"quick_xml/de/struct.Deserializer.html\" title=\"struct quick_xml::de::Deserializer\">Deserializer</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["quick_xml::de::Deserializer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"quick_xml/enum.Error.html\" title=\"enum quick_xml::Error\">Error</a>","synthetic":true,"types":["quick_xml::errors::Error"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"quick_xml/events/attributes/struct.Attributes.html\" title=\"struct quick_xml::events::attributes::Attributes\">Attributes</a>&lt;'a&gt;","synthetic":true,"types":["quick_xml::events::attributes::Attributes"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"quick_xml/events/attributes/struct.Attribute.html\" title=\"struct quick_xml::events::attributes::Attribute\">Attribute</a>&lt;'a&gt;","synthetic":true,"types":["quick_xml::events::attributes::Attribute"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"quick_xml/events/struct.BytesStart.html\" title=\"struct quick_xml::events::BytesStart\">BytesStart</a>&lt;'a&gt;","synthetic":true,"types":["quick_xml::events::BytesStart"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"quick_xml/events/struct.BytesDecl.html\" title=\"struct quick_xml::events::BytesDecl\">BytesDecl</a>&lt;'a&gt;","synthetic":true,"types":["quick_xml::events::BytesDecl"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"quick_xml/events/struct.BytesEnd.html\" title=\"struct quick_xml::events::BytesEnd\">BytesEnd</a>&lt;'a&gt;","synthetic":true,"types":["quick_xml::events::BytesEnd"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"quick_xml/events/struct.BytesText.html\" title=\"struct quick_xml::events::BytesText\">BytesText</a>&lt;'a&gt;","synthetic":true,"types":["quick_xml::events::BytesText"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"quick_xml/events/enum.Event.html\" title=\"enum quick_xml::events::Event\">Event</a>&lt;'a&gt;","synthetic":true,"types":["quick_xml::events::Event"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"quick_xml/struct.Reader.html\" title=\"struct quick_xml::Reader\">Reader</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["quick_xml::reader::Reader"]},{"text":"impl&lt;'r, W&gt; Freeze for <a class=\"struct\" href=\"quick_xml/se/struct.Serializer.html\" title=\"struct quick_xml::se::Serializer\">Serializer</a>&lt;'r, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["quick_xml::se::Serializer"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"quick_xml/struct.Writer.html\" title=\"struct quick_xml::Writer\">Writer</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["quick_xml::writer::Writer"]}];
implementors["quickxml_to_serde"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"quickxml_to_serde/enum.NullValue.html\" title=\"enum quickxml_to_serde::NullValue\">NullValue</a>","synthetic":true,"types":["quickxml_to_serde::NullValue"]},{"text":"impl Freeze for <a class=\"enum\" href=\"quickxml_to_serde/enum.JsonArray.html\" title=\"enum quickxml_to_serde::JsonArray\">JsonArray</a>","synthetic":true,"types":["quickxml_to_serde::JsonArray"]},{"text":"impl Freeze for <a class=\"enum\" href=\"quickxml_to_serde/enum.JsonType.html\" title=\"enum quickxml_to_serde::JsonType\">JsonType</a>","synthetic":true,"types":["quickxml_to_serde::JsonType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"quickxml_to_serde/struct.Config.html\" title=\"struct quickxml_to_serde::Config\">Config</a>","synthetic":true,"types":["quickxml_to_serde::Config"]}];
implementors["rand"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Bernoulli.html\" title=\"struct rand::distributions::Bernoulli\">Bernoulli</a>","synthetic":true,"types":["rand::distributions::bernoulli::Bernoulli"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand/distributions/enum.BernoulliError.html\" title=\"enum rand::distributions::BernoulliError\">BernoulliError</a>","synthetic":true,"types":["rand::distributions::bernoulli::BernoulliError"]},{"text":"impl&lt;D, R, T&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/struct.DistIter.html\" title=\"struct rand::distributions::DistIter\">DistIter</a>&lt;D, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::distribution::DistIter"]},{"text":"impl&lt;D, F, T, S&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/struct.DistMap.html\" title=\"struct rand::distributions::DistMap\">DistMap</a>&lt;D, F, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::distribution::DistMap"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.OpenClosed01.html\" title=\"struct rand::distributions::OpenClosed01\">OpenClosed01</a>","synthetic":true,"types":["rand::distributions::float::OpenClosed01"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Open01.html\" title=\"struct rand::distributions::Open01\">Open01</a>","synthetic":true,"types":["rand::distributions::float::Open01"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Alphanumeric.html\" title=\"struct rand::distributions::Alphanumeric\">Alphanumeric</a>","synthetic":true,"types":["rand::distributions::other::Alphanumeric"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Slice.html\" title=\"struct rand::distributions::Slice\">Slice</a>&lt;'a, T&gt;","synthetic":true,"types":["rand::distributions::slice::Slice"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/weighted/struct.WeightedIndex.html\" title=\"struct rand::distributions::weighted::WeightedIndex\">WeightedIndex</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as <a class=\"trait\" href=\"rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a>&gt;::<a class=\"associatedtype\" href=\"rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" title=\"type rand::distributions::uniform::SampleUniform::Sampler\">Sampler</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::weighted_index::WeightedIndex"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand/distributions/weighted/enum.WeightedError.html\" title=\"enum rand::distributions::weighted::WeightedError\">WeightedError</a>","synthetic":true,"types":["rand::distributions::weighted_index::WeightedError"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Uniform.html\" title=\"struct rand::distributions::Uniform\">Uniform</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as <a class=\"trait\" href=\"rand/distributions/uniform/trait.SampleUniform.html\" title=\"trait rand::distributions::uniform::SampleUniform\">SampleUniform</a>&gt;::<a class=\"associatedtype\" href=\"rand/distributions/uniform/trait.SampleUniform.html#associatedtype.Sampler\" title=\"type rand::distributions::uniform::SampleUniform::Sampler\">Sampler</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::uniform::Uniform"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.UniformInt.html\" title=\"struct rand::distributions::uniform::UniformInt\">UniformInt</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::uniform::UniformInt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.UniformChar.html\" title=\"struct rand::distributions::uniform::UniformChar\">UniformChar</a>","synthetic":true,"types":["rand::distributions::uniform::UniformChar"]},{"text":"impl&lt;X&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.UniformFloat.html\" title=\"struct rand::distributions::uniform::UniformFloat\">UniformFloat</a>&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::distributions::uniform::UniformFloat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/uniform/struct.UniformDuration.html\" title=\"struct rand::distributions::uniform::UniformDuration\">UniformDuration</a>","synthetic":true,"types":["rand::distributions::uniform::UniformDuration"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"rand/distributions/weighted/alias_method/struct.WeightedIndex.html\" title=\"struct rand::distributions::weighted::alias_method::WeightedIndex\">WeightedIndex</a>&lt;W&gt;","synthetic":true,"types":["rand::distributions::weighted::alias_method::WeightedIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/distributions/struct.Standard.html\" title=\"struct rand::distributions::Standard\">Standard</a>","synthetic":true,"types":["rand::distributions::Standard"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"rand/rngs/adapter/struct.ReadRng.html\" title=\"struct rand::rngs::adapter::ReadRng\">ReadRng</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::rngs::adapter::read::ReadRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/adapter/struct.ReadError.html\" title=\"struct rand::rngs::adapter::ReadError\">ReadError</a>","synthetic":true,"types":["rand::rngs::adapter::read::ReadError"]},{"text":"impl&lt;R, Rsdr&gt; Freeze for <a class=\"struct\" href=\"rand/rngs/adapter/struct.ReseedingRng.html\" title=\"struct rand::rngs::adapter::ReseedingRng\">ReseedingRng</a>&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"rand_core/block/trait.BlockRngCore.html\" title=\"trait rand_core::block::BlockRngCore\">BlockRngCore</a>&gt;::<a class=\"associatedtype\" href=\"rand_core/block/trait.BlockRngCore.html#associatedtype.Results\" title=\"type rand_core::block::BlockRngCore::Results\">Results</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand::rngs::adapter::reseeding::ReseedingRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/mock/struct.StepRng.html\" title=\"struct rand::rngs::mock::StepRng\">StepRng</a>","synthetic":true,"types":["rand::rngs::mock::StepRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/struct.StdRng.html\" title=\"struct rand::rngs::StdRng\">StdRng</a>","synthetic":true,"types":["rand::rngs::std::StdRng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand/rngs/struct.ThreadRng.html\" title=\"struct rand::rngs::ThreadRng\">ThreadRng</a>","synthetic":true,"types":["rand::rngs::thread::ThreadRng"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand/seq/index/enum.IndexVec.html\" title=\"enum rand::seq::index::IndexVec\">IndexVec</a>","synthetic":true,"types":["rand::seq::index::IndexVec"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"rand/seq/index/enum.IndexVecIter.html\" title=\"enum rand::seq::index::IndexVecIter\">IndexVecIter</a>&lt;'a&gt;","synthetic":true,"types":["rand::seq::index::IndexVecIter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand/seq/index/enum.IndexVecIntoIter.html\" title=\"enum rand::seq::index::IndexVecIntoIter\">IndexVecIntoIter</a>","synthetic":true,"types":["rand::seq::index::IndexVecIntoIter"]},{"text":"impl&lt;'a, S:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, T&gt; Freeze for <a class=\"struct\" href=\"rand/seq/struct.SliceChooseIter.html\" title=\"struct rand::seq::SliceChooseIter\">SliceChooseIter</a>&lt;'a, S, T&gt;","synthetic":true,"types":["rand::seq::SliceChooseIter"]}];
implementors["rand_chacha"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha20Core.html\" title=\"struct rand_chacha::ChaCha20Core\">ChaCha20Core</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha20Core"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha20Rng.html\" title=\"struct rand_chacha::ChaCha20Rng\">ChaCha20Rng</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha20Rng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha12Core.html\" title=\"struct rand_chacha::ChaCha12Core\">ChaCha12Core</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha12Core"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha12Rng.html\" title=\"struct rand_chacha::ChaCha12Rng\">ChaCha12Rng</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha12Rng"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha8Core.html\" title=\"struct rand_chacha::ChaCha8Core\">ChaCha8Core</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha8Core"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_chacha/struct.ChaCha8Rng.html\" title=\"struct rand_chacha::ChaCha8Rng\">ChaCha8Rng</a>","synthetic":true,"types":["rand_chacha::chacha::ChaCha8Rng"]}];
implementors["rand_core"] = [{"text":"impl&lt;R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"rand_core/block/struct.BlockRng.html\" title=\"struct rand_core::block::BlockRng\">BlockRng</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"rand_core/block/trait.BlockRngCore.html\" title=\"trait rand_core::block::BlockRngCore\">BlockRngCore</a>&gt;::<a class=\"associatedtype\" href=\"rand_core/block/trait.BlockRngCore.html#associatedtype.Results\" title=\"type rand_core::block::BlockRngCore::Results\">Results</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_core::block::BlockRng"]},{"text":"impl&lt;R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"rand_core/block/struct.BlockRng64.html\" title=\"struct rand_core::block::BlockRng64\">BlockRng64</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as <a class=\"trait\" href=\"rand_core/block/trait.BlockRngCore.html\" title=\"trait rand_core::block::BlockRngCore\">BlockRngCore</a>&gt;::<a class=\"associatedtype\" href=\"rand_core/block/trait.BlockRngCore.html#associatedtype.Results\" title=\"type rand_core::block::BlockRngCore::Results\">Results</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_core::block::BlockRng64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_core/struct.Error.html\" title=\"struct rand_core::Error\">Error</a>","synthetic":true,"types":["rand_core::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_core/struct.OsRng.html\" title=\"struct rand_core::OsRng\">OsRng</a>","synthetic":true,"types":["rand_core::os::OsRng"]}];
implementors["rand_distr"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"rand_distr/struct.Binomial.html\" title=\"struct rand_distr::Binomial\">Binomial</a>","synthetic":true,"types":["rand_distr::binomial::Binomial"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand_distr/enum.BinomialError.html\" title=\"enum rand_distr::BinomialError\">Error</a>","synthetic":true,"types":["rand_distr::binomial::Error"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"rand_distr/struct.Cauchy.html\" title=\"struct rand_distr::Cauchy\">Cauchy</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_distr::cauchy::Cauchy"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand_distr/enum.CauchyError.html\" title=\"enum rand_distr::CauchyError\">Error</a>","synthetic":true,"types":["rand_distr::cauchy::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_distr/struct.Exp1.html\" title=\"struct rand_distr::Exp1\">Exp1</a>","synthetic":true,"types":["rand_distr::exponential::Exp1"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"rand_distr/struct.Exp.html\" title=\"struct rand_distr::Exp\">Exp</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_distr::exponential::Exp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand_distr/enum.ExpError.html\" title=\"enum rand_distr::ExpError\">Error</a>","synthetic":true,"types":["rand_distr::exponential::Error"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"rand_distr/struct.Frechet.html\" title=\"struct rand_distr::Frechet\">Frechet</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_distr::frechet::Frechet"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand_distr/enum.FrechetError.html\" title=\"enum rand_distr::FrechetError\">Error</a>","synthetic":true,"types":["rand_distr::frechet::Error"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"rand_distr/struct.Gamma.html\" title=\"struct rand_distr::Gamma\">Gamma</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_distr::gamma::Gamma"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand_distr/enum.GammaError.html\" title=\"enum rand_distr::GammaError\">Error</a>","synthetic":true,"types":["rand_distr::gamma::Error"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"rand_distr/struct.ChiSquared.html\" title=\"struct rand_distr::ChiSquared\">ChiSquared</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_distr::gamma::ChiSquared"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand_distr/enum.ChiSquaredError.html\" title=\"enum rand_distr::ChiSquaredError\">ChiSquaredError</a>","synthetic":true,"types":["rand_distr::gamma::ChiSquaredError"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"rand_distr/struct.FisherF.html\" title=\"struct rand_distr::FisherF\">FisherF</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_distr::gamma::FisherF"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand_distr/enum.FisherFError.html\" title=\"enum rand_distr::FisherFError\">FisherFError</a>","synthetic":true,"types":["rand_distr::gamma::FisherFError"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"rand_distr/struct.StudentT.html\" title=\"struct rand_distr::StudentT\">StudentT</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_distr::gamma::StudentT"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"rand_distr/struct.Beta.html\" title=\"struct rand_distr::Beta\">Beta</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_distr::gamma::Beta"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand_distr/enum.BetaError.html\" title=\"enum rand_distr::BetaError\">BetaError</a>","synthetic":true,"types":["rand_distr::gamma::BetaError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_distr/struct.Geometric.html\" title=\"struct rand_distr::Geometric\">Geometric</a>","synthetic":true,"types":["rand_distr::geometric::Geometric"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand_distr/enum.GeoError.html\" title=\"enum rand_distr::GeoError\">Error</a>","synthetic":true,"types":["rand_distr::geometric::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_distr/struct.StandardGeometric.html\" title=\"struct rand_distr::StandardGeometric\">StandardGeometric</a>","synthetic":true,"types":["rand_distr::geometric::StandardGeometric"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"rand_distr/struct.Gumbel.html\" title=\"struct rand_distr::Gumbel\">Gumbel</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_distr::gumbel::Gumbel"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand_distr/enum.GumbelError.html\" title=\"enum rand_distr::GumbelError\">Error</a>","synthetic":true,"types":["rand_distr::gumbel::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_distr/struct.Hypergeometric.html\" title=\"struct rand_distr::Hypergeometric\">Hypergeometric</a>","synthetic":true,"types":["rand_distr::hypergeometric::Hypergeometric"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand_distr/enum.HyperGeoError.html\" title=\"enum rand_distr::HyperGeoError\">Error</a>","synthetic":true,"types":["rand_distr::hypergeometric::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand_distr/enum.InverseGaussianError.html\" title=\"enum rand_distr::InverseGaussianError\">Error</a>","synthetic":true,"types":["rand_distr::inverse_gaussian::Error"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"rand_distr/struct.InverseGaussian.html\" title=\"struct rand_distr::InverseGaussian\">InverseGaussian</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_distr::inverse_gaussian::InverseGaussian"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_distr/struct.StandardNormal.html\" title=\"struct rand_distr::StandardNormal\">StandardNormal</a>","synthetic":true,"types":["rand_distr::normal::StandardNormal"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"rand_distr/struct.Normal.html\" title=\"struct rand_distr::Normal\">Normal</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_distr::normal::Normal"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand_distr/enum.NormalError.html\" title=\"enum rand_distr::NormalError\">Error</a>","synthetic":true,"types":["rand_distr::normal::Error"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"rand_distr/struct.LogNormal.html\" title=\"struct rand_distr::LogNormal\">LogNormal</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_distr::normal::LogNormal"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand_distr/enum.NormalInverseGaussianError.html\" title=\"enum rand_distr::NormalInverseGaussianError\">Error</a>","synthetic":true,"types":["rand_distr::normal_inverse_gaussian::Error"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"rand_distr/struct.NormalInverseGaussian.html\" title=\"struct rand_distr::NormalInverseGaussian\">NormalInverseGaussian</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_distr::normal_inverse_gaussian::NormalInverseGaussian"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"rand_distr/struct.Pareto.html\" title=\"struct rand_distr::Pareto\">Pareto</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_distr::pareto::Pareto"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand_distr/enum.ParetoError.html\" title=\"enum rand_distr::ParetoError\">Error</a>","synthetic":true,"types":["rand_distr::pareto::Error"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"rand_distr/struct.Pert.html\" title=\"struct rand_distr::Pert\">Pert</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_distr::pert::Pert"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand_distr/enum.PertError.html\" title=\"enum rand_distr::PertError\">PertError</a>","synthetic":true,"types":["rand_distr::pert::PertError"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"rand_distr/struct.Poisson.html\" title=\"struct rand_distr::Poisson\">Poisson</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_distr::poisson::Poisson"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand_distr/enum.PoissonError.html\" title=\"enum rand_distr::PoissonError\">Error</a>","synthetic":true,"types":["rand_distr::poisson::Error"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"rand_distr/struct.SkewNormal.html\" title=\"struct rand_distr::SkewNormal\">SkewNormal</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_distr::skew_normal::SkewNormal"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand_distr/enum.SkewNormalError.html\" title=\"enum rand_distr::SkewNormalError\">Error</a>","synthetic":true,"types":["rand_distr::skew_normal::Error"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"rand_distr/struct.Triangular.html\" title=\"struct rand_distr::Triangular\">Triangular</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_distr::triangular::Triangular"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand_distr/enum.TriangularError.html\" title=\"enum rand_distr::TriangularError\">TriangularError</a>","synthetic":true,"types":["rand_distr::triangular::TriangularError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_distr/struct.UnitBall.html\" title=\"struct rand_distr::UnitBall\">UnitBall</a>","synthetic":true,"types":["rand_distr::unit_ball::UnitBall"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_distr/struct.UnitCircle.html\" title=\"struct rand_distr::UnitCircle\">UnitCircle</a>","synthetic":true,"types":["rand_distr::unit_circle::UnitCircle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_distr/struct.UnitDisc.html\" title=\"struct rand_distr::UnitDisc\">UnitDisc</a>","synthetic":true,"types":["rand_distr::unit_disc::UnitDisc"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_distr/struct.UnitSphere.html\" title=\"struct rand_distr::UnitSphere\">UnitSphere</a>","synthetic":true,"types":["rand_distr::unit_sphere::UnitSphere"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"rand_distr/struct.Weibull.html\" title=\"struct rand_distr::Weibull\">Weibull</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_distr::weibull::Weibull"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand_distr/enum.WeibullError.html\" title=\"enum rand_distr::WeibullError\">Error</a>","synthetic":true,"types":["rand_distr::weibull::Error"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"rand_distr/struct.Zeta.html\" title=\"struct rand_distr::Zeta\">Zeta</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_distr::zipf::Zeta"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand_distr/enum.ZetaError.html\" title=\"enum rand_distr::ZetaError\">ZetaError</a>","synthetic":true,"types":["rand_distr::zipf::ZetaError"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"rand_distr/struct.Zipf.html\" title=\"struct rand_distr::Zipf\">Zipf</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["rand_distr::zipf::Zipf"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rand_distr/enum.ZipfError.html\" title=\"enum rand_distr::ZipfError\">ZipfError</a>","synthetic":true,"types":["rand_distr::zipf::ZipfError"]}];
implementors["rand_pcg"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"rand_pcg/struct.Lcg128Xsl64.html\" title=\"struct rand_pcg::Lcg128Xsl64\">Lcg128Xsl64</a>","synthetic":true,"types":["rand_pcg::pcg128::Lcg128Xsl64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_pcg/struct.Mcg128Xsl64.html\" title=\"struct rand_pcg::Mcg128Xsl64\">Mcg128Xsl64</a>","synthetic":true,"types":["rand_pcg::pcg128::Mcg128Xsl64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rand_pcg/struct.Lcg64Xsh32.html\" title=\"struct rand_pcg::Lcg64Xsh32\">Lcg64Xsh32</a>","synthetic":true,"types":["rand_pcg::pcg64::Lcg64Xsh32"]}];
implementors["rayon"] = [{"text":"impl&lt;T, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.1/std/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"rayon/array/struct.IntoIter.html\" title=\"struct rayon::array::IntoIter\">IntoIter</a>&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::array::IntoIter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/binary_heap/struct.IntoIter.html\" title=\"struct rayon::collections::binary_heap::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["rayon::collections::binary_heap::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/binary_heap/struct.Iter.html\" title=\"struct rayon::collections::binary_heap::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::binary_heap::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/binary_heap/struct.Drain.html\" title=\"struct rayon::collections::binary_heap::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::binary_heap::Drain"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/btree_map/struct.IntoIter.html\" title=\"struct rayon::collections::btree_map::IntoIter\">IntoIter</a>&lt;K, V&gt;","synthetic":true,"types":["rayon::collections::btree_map::IntoIter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/btree_map/struct.Iter.html\" title=\"struct rayon::collections::btree_map::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["rayon::collections::btree_map::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/btree_map/struct.IterMut.html\" title=\"struct rayon::collections::btree_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["rayon::collections::btree_map::IterMut"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/btree_set/struct.IntoIter.html\" title=\"struct rayon::collections::btree_set::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["rayon::collections::btree_set::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/btree_set/struct.Iter.html\" title=\"struct rayon::collections::btree_set::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::btree_set::Iter"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/hash_map/struct.IntoIter.html\" title=\"struct rayon::collections::hash_map::IntoIter\">IntoIter</a>&lt;K, V&gt;","synthetic":true,"types":["rayon::collections::hash_map::IntoIter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/hash_map/struct.Iter.html\" title=\"struct rayon::collections::hash_map::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["rayon::collections::hash_map::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/hash_map/struct.IterMut.html\" title=\"struct rayon::collections::hash_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["rayon::collections::hash_map::IterMut"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/hash_map/struct.Drain.html\" title=\"struct rayon::collections::hash_map::Drain\">Drain</a>&lt;'a, K, V&gt;","synthetic":true,"types":["rayon::collections::hash_map::Drain"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/hash_set/struct.IntoIter.html\" title=\"struct rayon::collections::hash_set::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["rayon::collections::hash_set::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/hash_set/struct.Iter.html\" title=\"struct rayon::collections::hash_set::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::hash_set::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/hash_set/struct.Drain.html\" title=\"struct rayon::collections::hash_set::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::hash_set::Drain"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/linked_list/struct.IntoIter.html\" title=\"struct rayon::collections::linked_list::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["rayon::collections::linked_list::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/linked_list/struct.Iter.html\" title=\"struct rayon::collections::linked_list::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::linked_list::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/linked_list/struct.IterMut.html\" title=\"struct rayon::collections::linked_list::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::linked_list::IterMut"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/vec_deque/struct.IntoIter.html\" title=\"struct rayon::collections::vec_deque::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["rayon::collections::vec_deque::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/vec_deque/struct.Iter.html\" title=\"struct rayon::collections::vec_deque::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::vec_deque::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/vec_deque/struct.IterMut.html\" title=\"struct rayon::collections::vec_deque::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::vec_deque::IterMut"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/collections/vec_deque/struct.Drain.html\" title=\"struct rayon::collections::vec_deque::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::collections::vec_deque::Drain"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Chain.html\" title=\"struct rayon::iter::Chain\">Chain</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::chain::Chain"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Chunks.html\" title=\"struct rayon::iter::Chunks\">Chunks</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::chunks::Chunks"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Cloned.html\" title=\"struct rayon::iter::Cloned\">Cloned</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::cloned::Cloned"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Copied.html\" title=\"struct rayon::iter::Copied\">Copied</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::copied::Copied"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Empty.html\" title=\"struct rayon::iter::Empty\">Empty</a>&lt;T&gt;","synthetic":true,"types":["rayon::iter::empty::Empty"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Enumerate.html\" title=\"struct rayon::iter::Enumerate\">Enumerate</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::enumerate::Enumerate"]},{"text":"impl&lt;I, P&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Filter.html\" title=\"struct rayon::iter::Filter\">Filter</a>&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::filter::Filter"]},{"text":"impl&lt;I, P&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.FilterMap.html\" title=\"struct rayon::iter::FilterMap\">FilterMap</a>&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::filter_map::FilterMap"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.FlatMap.html\" title=\"struct rayon::iter::FlatMap\">FlatMap</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::flat_map::FlatMap"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.FlatMapIter.html\" title=\"struct rayon::iter::FlatMapIter\">FlatMapIter</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::flat_map_iter::FlatMapIter"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Flatten.html\" title=\"struct rayon::iter::Flatten\">Flatten</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::flatten::Flatten"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.FlattenIter.html\" title=\"struct rayon::iter::FlattenIter\">FlattenIter</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::flatten_iter::FlattenIter"]},{"text":"impl&lt;I, ID, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Fold.html\" title=\"struct rayon::iter::Fold\">Fold</a>&lt;I, ID, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;ID: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::fold::Fold"]},{"text":"impl&lt;I, U, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.FoldWith.html\" title=\"struct rayon::iter::FoldWith\">FoldWith</a>&lt;I, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::fold::FoldWith"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Inspect.html\" title=\"struct rayon::iter::Inspect\">Inspect</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::inspect::Inspect"]},{"text":"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Interleave.html\" title=\"struct rayon::iter::Interleave\">Interleave</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::interleave::Interleave"]},{"text":"impl&lt;I, J&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.InterleaveShortest.html\" title=\"struct rayon::iter::InterleaveShortest\">InterleaveShortest</a>&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::interleave_shortest::InterleaveShortest"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Intersperse.html\" title=\"struct rayon::iter::Intersperse\">Intersperse</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as <a class=\"trait\" href=\"rayon/iter/trait.ParallelIterator.html\" title=\"trait rayon::iter::ParallelIterator\">ParallelIterator</a>&gt;::<a class=\"associatedtype\" href=\"rayon/iter/trait.ParallelIterator.html#associatedtype.Item\" title=\"type rayon::iter::ParallelIterator::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::intersperse::Intersperse"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.MinLen.html\" title=\"struct rayon::iter::MinLen\">MinLen</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::len::MinLen"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.MaxLen.html\" title=\"struct rayon::iter::MaxLen\">MaxLen</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::len::MaxLen"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Map.html\" title=\"struct rayon::iter::Map\">Map</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::map::Map"]},{"text":"impl&lt;I, T, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.MapWith.html\" title=\"struct rayon::iter::MapWith\">MapWith</a>&lt;I, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::map_with::MapWith"]},{"text":"impl&lt;I, INIT, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.MapInit.html\" title=\"struct rayon::iter::MapInit\">MapInit</a>&lt;I, INIT, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;INIT: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::map_with::MapInit"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.MultiZip.html\" title=\"struct rayon::iter::MultiZip\">MultiZip</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::multizip::MultiZip"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Once.html\" title=\"struct rayon::iter::Once\">Once</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::once::Once"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.PanicFuse.html\" title=\"struct rayon::iter::PanicFuse\">PanicFuse</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::panic_fuse::PanicFuse"]},{"text":"impl&lt;Iter&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.IterBridge.html\" title=\"struct rayon::iter::IterBridge\">IterBridge</a>&lt;Iter&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Iter: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::par_bridge::IterBridge"]},{"text":"impl&lt;I, P&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Positions.html\" title=\"struct rayon::iter::Positions\">Positions</a>&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::positions::Positions"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Repeat.html\" title=\"struct rayon::iter::Repeat\">Repeat</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::repeat::Repeat"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.RepeatN.html\" title=\"struct rayon::iter::RepeatN\">RepeatN</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::repeat::RepeatN"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Rev.html\" title=\"struct rayon::iter::Rev\">Rev</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::rev::Rev"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Skip.html\" title=\"struct rayon::iter::Skip\">Skip</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::skip::Skip"]},{"text":"impl&lt;D, S&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Split.html\" title=\"struct rayon::iter::Split\">Split</a>&lt;D, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::splitter::Split"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Take.html\" title=\"struct rayon::iter::Take\">Take</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::take::Take"]},{"text":"impl&lt;I, U, ID, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.TryFold.html\" title=\"struct rayon::iter::TryFold\">TryFold</a>&lt;I, U, ID, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;ID: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::try_fold::TryFold"]},{"text":"impl&lt;I, U, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.TryFoldWith.html\" title=\"struct rayon::iter::TryFoldWith\">TryFoldWith</a>&lt;I, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as Try&gt;::Output: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::try_fold::TryFoldWith"]},{"text":"impl&lt;I, F&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Update.html\" title=\"struct rayon::iter::Update\">Update</a>&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::update::Update"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.WhileSome.html\" title=\"struct rayon::iter::WhileSome\">WhileSome</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::while_some::WhileSome"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.Zip.html\" title=\"struct rayon::iter::Zip\">Zip</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::zip::Zip"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.ZipEq.html\" title=\"struct rayon::iter::ZipEq\">ZipEq</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::zip_eq::ZipEq"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"rayon/iter/struct.StepBy.html\" title=\"struct rayon::iter::StepBy\">StepBy</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::iter::step_by::StepBy"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/option/struct.IntoIter.html\" title=\"struct rayon::option::IntoIter\">IntoIter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::option::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/option/struct.Iter.html\" title=\"struct rayon::option::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::option::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/option/struct.IterMut.html\" title=\"struct rayon::option::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::option::IterMut"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/range/struct.Iter.html\" title=\"struct rayon::range::Iter\">Iter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::range::Iter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/range_inclusive/struct.Iter.html\" title=\"struct rayon::range_inclusive::Iter\">Iter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::range_inclusive::Iter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/result/struct.IntoIter.html\" title=\"struct rayon::result::IntoIter\">IntoIter</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::result::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/result/struct.Iter.html\" title=\"struct rayon::result::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::result::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rayon/result/struct.IterMut.html\" title=\"struct rayon::result::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["rayon::result::IterMut"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.Chunks.html\" title=\"struct rayon::slice::Chunks\">Chunks</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::chunks::Chunks"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.ChunksExact.html\" title=\"struct rayon::slice::ChunksExact\">ChunksExact</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::chunks::ChunksExact"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.ChunksMut.html\" title=\"struct rayon::slice::ChunksMut\">ChunksMut</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::chunks::ChunksMut"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.ChunksExactMut.html\" title=\"struct rayon::slice::ChunksExactMut\">ChunksExactMut</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::chunks::ChunksExactMut"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.RChunks.html\" title=\"struct rayon::slice::RChunks\">RChunks</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::rchunks::RChunks"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.RChunksExact.html\" title=\"struct rayon::slice::RChunksExact\">RChunksExact</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::rchunks::RChunksExact"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.RChunksMut.html\" title=\"struct rayon::slice::RChunksMut\">RChunksMut</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::rchunks::RChunksMut"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.RChunksExactMut.html\" title=\"struct rayon::slice::RChunksExactMut\">RChunksExactMut</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::rchunks::RChunksExactMut"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.Iter.html\" title=\"struct rayon::slice::Iter\">Iter</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::Iter"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.Windows.html\" title=\"struct rayon::slice::Windows\">Windows</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::Windows"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.IterMut.html\" title=\"struct rayon::slice::IterMut\">IterMut</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::slice::IterMut"]},{"text":"impl&lt;'data, T, P&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.Split.html\" title=\"struct rayon::slice::Split\">Split</a>&lt;'data, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::slice::Split"]},{"text":"impl&lt;'data, T, P&gt; Freeze for <a class=\"struct\" href=\"rayon/slice/struct.SplitMut.html\" title=\"struct rayon::slice::SplitMut\">SplitMut</a>&lt;'data, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::slice::SplitMut"]},{"text":"impl&lt;'ch&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.Chars.html\" title=\"struct rayon::str::Chars\">Chars</a>&lt;'ch&gt;","synthetic":true,"types":["rayon::str::Chars"]},{"text":"impl&lt;'ch&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.CharIndices.html\" title=\"struct rayon::str::CharIndices\">CharIndices</a>&lt;'ch&gt;","synthetic":true,"types":["rayon::str::CharIndices"]},{"text":"impl&lt;'ch&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.Bytes.html\" title=\"struct rayon::str::Bytes\">Bytes</a>&lt;'ch&gt;","synthetic":true,"types":["rayon::str::Bytes"]},{"text":"impl&lt;'ch&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.EncodeUtf16.html\" title=\"struct rayon::str::EncodeUtf16\">EncodeUtf16</a>&lt;'ch&gt;","synthetic":true,"types":["rayon::str::EncodeUtf16"]},{"text":"impl&lt;'ch, P&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.Split.html\" title=\"struct rayon::str::Split\">Split</a>&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::str::Split"]},{"text":"impl&lt;'ch, P&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.SplitTerminator.html\" title=\"struct rayon::str::SplitTerminator\">SplitTerminator</a>&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::str::SplitTerminator"]},{"text":"impl&lt;'ch&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.Lines.html\" title=\"struct rayon::str::Lines\">Lines</a>&lt;'ch&gt;","synthetic":true,"types":["rayon::str::Lines"]},{"text":"impl&lt;'ch&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.SplitWhitespace.html\" title=\"struct rayon::str::SplitWhitespace\">SplitWhitespace</a>&lt;'ch&gt;","synthetic":true,"types":["rayon::str::SplitWhitespace"]},{"text":"impl&lt;'ch, P&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.Matches.html\" title=\"struct rayon::str::Matches\">Matches</a>&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::str::Matches"]},{"text":"impl&lt;'ch, P&gt; Freeze for <a class=\"struct\" href=\"rayon/str/struct.MatchIndices.html\" title=\"struct rayon::str::MatchIndices\">MatchIndices</a>&lt;'ch, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon::str::MatchIndices"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"rayon/string/struct.Drain.html\" title=\"struct rayon::string::Drain\">Drain</a>&lt;'a&gt;","synthetic":true,"types":["rayon::string::Drain"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rayon/vec/struct.IntoIter.html\" title=\"struct rayon::vec::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["rayon::vec::IntoIter"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"rayon/vec/struct.Drain.html\" title=\"struct rayon::vec::Drain\">Drain</a>&lt;'data, T&gt;","synthetic":true,"types":["rayon::vec::Drain"]}];
implementors["rayon_core"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"rayon_core/struct.ThreadBuilder.html\" title=\"struct rayon_core::ThreadBuilder\">ThreadBuilder</a>","synthetic":true,"types":["rayon_core::registry::ThreadBuilder"]},{"text":"impl&lt;'scope&gt; !Freeze for <a class=\"struct\" href=\"rayon_core/struct.Scope.html\" title=\"struct rayon_core::Scope\">Scope</a>&lt;'scope&gt;","synthetic":true,"types":["rayon_core::scope::Scope"]},{"text":"impl&lt;'scope&gt; !Freeze for <a class=\"struct\" href=\"rayon_core/struct.ScopeFifo.html\" title=\"struct rayon_core::ScopeFifo\">ScopeFifo</a>&lt;'scope&gt;","synthetic":true,"types":["rayon_core::scope::ScopeFifo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rayon_core/struct.ThreadPool.html\" title=\"struct rayon_core::ThreadPool\">ThreadPool</a>","synthetic":true,"types":["rayon_core::thread_pool::ThreadPool"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rayon_core/struct.ThreadPoolBuildError.html\" title=\"struct rayon_core::ThreadPoolBuildError\">ThreadPoolBuildError</a>","synthetic":true,"types":["rayon_core::ThreadPoolBuildError"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"rayon_core/struct.ThreadPoolBuilder.html\" title=\"struct rayon_core::ThreadPoolBuilder\">ThreadPoolBuilder</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["rayon_core::ThreadPoolBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rayon_core/struct.Configuration.html\" title=\"struct rayon_core::Configuration\">Configuration</a>","synthetic":true,"types":["rayon_core::Configuration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rayon_core/struct.FnContext.html\" title=\"struct rayon_core::FnContext\">FnContext</a>","synthetic":true,"types":["rayon_core::FnContext"]}];
implementors["regex"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.RegexBuilder.html\" title=\"struct regex::bytes::RegexBuilder\">RegexBuilder</a>","synthetic":true,"types":["regex::re_builder::bytes::RegexBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.RegexSetBuilder.html\" title=\"struct regex::bytes::RegexSetBuilder\">RegexSetBuilder</a>","synthetic":true,"types":["regex::re_builder::set_bytes::RegexSetBuilder"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Match.html\" title=\"struct regex::bytes::Match\">Match</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_bytes::Match"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Regex.html\" title=\"struct regex::bytes::Regex\">Regex</a>","synthetic":true,"types":["regex::re_bytes::Regex"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Matches.html\" title=\"struct regex::bytes::Matches\">Matches</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_bytes::Matches"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.CaptureMatches.html\" title=\"struct regex::bytes::CaptureMatches\">CaptureMatches</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_bytes::CaptureMatches"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Split.html\" title=\"struct regex::bytes::Split\">Split</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_bytes::Split"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SplitN.html\" title=\"struct regex::bytes::SplitN\">SplitN</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_bytes::SplitN"]},{"text":"impl&lt;'r&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.CaptureNames.html\" title=\"struct regex::bytes::CaptureNames\">CaptureNames</a>&lt;'r&gt;","synthetic":true,"types":["regex::re_bytes::CaptureNames"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.CaptureLocations.html\" title=\"struct regex::bytes::CaptureLocations\">CaptureLocations</a>","synthetic":true,"types":["regex::re_bytes::CaptureLocations"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.Captures.html\" title=\"struct regex::bytes::Captures\">Captures</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_bytes::Captures"]},{"text":"impl&lt;'c, 't&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SubCaptureMatches.html\" title=\"struct regex::bytes::SubCaptureMatches\">SubCaptureMatches</a>&lt;'c, 't&gt;","synthetic":true,"types":["regex::re_bytes::SubCaptureMatches"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.ReplacerRef.html\" title=\"struct regex::bytes::ReplacerRef\">ReplacerRef</a>&lt;'a, R&gt;","synthetic":true,"types":["regex::re_bytes::ReplacerRef"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.NoExpand.html\" title=\"struct regex::bytes::NoExpand\">NoExpand</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_bytes::NoExpand"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.RegexSet.html\" title=\"struct regex::bytes::RegexSet\">RegexSet</a>","synthetic":true,"types":["regex::re_set::bytes::RegexSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SetMatches.html\" title=\"struct regex::bytes::SetMatches\">SetMatches</a>","synthetic":true,"types":["regex::re_set::bytes::SetMatches"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SetMatchesIntoIter.html\" title=\"struct regex::bytes::SetMatchesIntoIter\">SetMatchesIntoIter</a>","synthetic":true,"types":["regex::re_set::bytes::SetMatchesIntoIter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"regex/bytes/struct.SetMatchesIter.html\" title=\"struct regex::bytes::SetMatchesIter\">SetMatchesIter</a>&lt;'a&gt;","synthetic":true,"types":["regex::re_set::bytes::SetMatchesIter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex/enum.Error.html\" title=\"enum regex::Error\">Error</a>","synthetic":true,"types":["regex::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.RegexBuilder.html\" title=\"struct regex::RegexBuilder\">RegexBuilder</a>","synthetic":true,"types":["regex::re_builder::unicode::RegexBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.RegexSetBuilder.html\" title=\"struct regex::RegexSetBuilder\">RegexSetBuilder</a>","synthetic":true,"types":["regex::re_builder::set_unicode::RegexSetBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.RegexSet.html\" title=\"struct regex::RegexSet\">RegexSet</a>","synthetic":true,"types":["regex::re_set::unicode::RegexSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.SetMatches.html\" title=\"struct regex::SetMatches\">SetMatches</a>","synthetic":true,"types":["regex::re_set::unicode::SetMatches"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.SetMatchesIntoIter.html\" title=\"struct regex::SetMatchesIntoIter\">SetMatchesIntoIter</a>","synthetic":true,"types":["regex::re_set::unicode::SetMatchesIntoIter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"regex/struct.SetMatchesIter.html\" title=\"struct regex::SetMatchesIter\">SetMatchesIter</a>&lt;'a&gt;","synthetic":true,"types":["regex::re_set::unicode::SetMatchesIter"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/struct.Match.html\" title=\"struct regex::Match\">Match</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_unicode::Match"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.Regex.html\" title=\"struct regex::Regex\">Regex</a>","synthetic":true,"types":["regex::re_unicode::Regex"]},{"text":"impl&lt;'r&gt; Freeze for <a class=\"struct\" href=\"regex/struct.CaptureNames.html\" title=\"struct regex::CaptureNames\">CaptureNames</a>&lt;'r&gt;","synthetic":true,"types":["regex::re_unicode::CaptureNames"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.Split.html\" title=\"struct regex::Split\">Split</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_unicode::Split"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.SplitN.html\" title=\"struct regex::SplitN\">SplitN</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_unicode::SplitN"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex/struct.CaptureLocations.html\" title=\"struct regex::CaptureLocations\">CaptureLocations</a>","synthetic":true,"types":["regex::re_unicode::CaptureLocations"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/struct.Captures.html\" title=\"struct regex::Captures\">Captures</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_unicode::Captures"]},{"text":"impl&lt;'c, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.SubCaptureMatches.html\" title=\"struct regex::SubCaptureMatches\">SubCaptureMatches</a>&lt;'c, 't&gt;","synthetic":true,"types":["regex::re_unicode::SubCaptureMatches"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.CaptureMatches.html\" title=\"struct regex::CaptureMatches\">CaptureMatches</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_unicode::CaptureMatches"]},{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"regex/struct.Matches.html\" title=\"struct regex::Matches\">Matches</a>&lt;'r, 't&gt;","synthetic":true,"types":["regex::re_unicode::Matches"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"regex/struct.ReplacerRef.html\" title=\"struct regex::ReplacerRef\">ReplacerRef</a>&lt;'a, R&gt;","synthetic":true,"types":["regex::re_unicode::ReplacerRef"]},{"text":"impl&lt;'t&gt; Freeze for <a class=\"struct\" href=\"regex/struct.NoExpand.html\" title=\"struct regex::NoExpand\">NoExpand</a>&lt;'t&gt;","synthetic":true,"types":["regex::re_unicode::NoExpand"]}];
implementors["regex_automata"] = [{"text":"impl&lt;T, S&gt; Freeze for <a class=\"enum\" href=\"regex_automata/dense/enum.DenseDFA.html\" title=\"enum regex_automata::dense::DenseDFA\">DenseDFA</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["regex_automata::dense_imp::DenseDFA"]},{"text":"impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"regex_automata/dense/struct.Standard.html\" title=\"struct regex_automata::dense::Standard\">Standard</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["regex_automata::dense_imp::Standard"]},{"text":"impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"regex_automata/dense/struct.ByteClass.html\" title=\"struct regex_automata::dense::ByteClass\">ByteClass</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["regex_automata::dense_imp::ByteClass"]},{"text":"impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"regex_automata/dense/struct.Premultiplied.html\" title=\"struct regex_automata::dense::Premultiplied\">Premultiplied</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["regex_automata::dense_imp::Premultiplied"]},{"text":"impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"regex_automata/dense/struct.PremultipliedByteClass.html\" title=\"struct regex_automata::dense::PremultipliedByteClass\">PremultipliedByteClass</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["regex_automata::dense_imp::PremultipliedByteClass"]},{"text":"impl&lt;D&gt; Freeze for <a class=\"struct\" href=\"regex_automata/struct.Regex.html\" title=\"struct regex_automata::Regex\">Regex</a>&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["regex_automata::regex::Regex"]},{"text":"impl&lt;T, S&gt; Freeze for <a class=\"enum\" href=\"regex_automata/sparse/enum.SparseDFA.html\" title=\"enum regex_automata::sparse::SparseDFA\">SparseDFA</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["regex_automata::sparse_imp::SparseDFA"]},{"text":"impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"regex_automata/sparse/struct.Standard.html\" title=\"struct regex_automata::sparse::Standard\">Standard</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["regex_automata::sparse_imp::Standard"]},{"text":"impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"regex_automata/sparse/struct.ByteClass.html\" title=\"struct regex_automata::sparse::ByteClass\">ByteClass</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["regex_automata::sparse_imp::ByteClass"]}];
implementors["regex_syntax"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/parse/struct.ParserBuilder.html\" title=\"struct regex_syntax::ast::parse::ParserBuilder\">ParserBuilder</a>","synthetic":true,"types":["regex_syntax::ast::parse::ParserBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"regex_syntax/ast/parse/struct.Parser.html\" title=\"struct regex_syntax::ast::parse::Parser\">Parser</a>","synthetic":true,"types":["regex_syntax::ast::parse::Parser"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/print/struct.Printer.html\" title=\"struct regex_syntax::ast::print::Printer\">Printer</a>","synthetic":true,"types":["regex_syntax::ast::print::Printer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Error.html\" title=\"struct regex_syntax::ast::Error\">Error</a>","synthetic":true,"types":["regex_syntax::ast::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ErrorKind.html\" title=\"enum regex_syntax::ast::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["regex_syntax::ast::ErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Span.html\" title=\"struct regex_syntax::ast::Span\">Span</a>","synthetic":true,"types":["regex_syntax::ast::Span"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Position.html\" title=\"struct regex_syntax::ast::Position\">Position</a>","synthetic":true,"types":["regex_syntax::ast::Position"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.WithComments.html\" title=\"struct regex_syntax::ast::WithComments\">WithComments</a>","synthetic":true,"types":["regex_syntax::ast::WithComments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Comment.html\" title=\"struct regex_syntax::ast::Comment\">Comment</a>","synthetic":true,"types":["regex_syntax::ast::Comment"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.Ast.html\" title=\"enum regex_syntax::ast::Ast\">Ast</a>","synthetic":true,"types":["regex_syntax::ast::Ast"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Alternation.html\" title=\"struct regex_syntax::ast::Alternation\">Alternation</a>","synthetic":true,"types":["regex_syntax::ast::Alternation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Concat.html\" title=\"struct regex_syntax::ast::Concat\">Concat</a>","synthetic":true,"types":["regex_syntax::ast::Concat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Literal.html\" title=\"struct regex_syntax::ast::Literal\">Literal</a>","synthetic":true,"types":["regex_syntax::ast::Literal"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.LiteralKind.html\" title=\"enum regex_syntax::ast::LiteralKind\">LiteralKind</a>","synthetic":true,"types":["regex_syntax::ast::LiteralKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.SpecialLiteralKind.html\" title=\"enum regex_syntax::ast::SpecialLiteralKind\">SpecialLiteralKind</a>","synthetic":true,"types":["regex_syntax::ast::SpecialLiteralKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.HexLiteralKind.html\" title=\"enum regex_syntax::ast::HexLiteralKind\">HexLiteralKind</a>","synthetic":true,"types":["regex_syntax::ast::HexLiteralKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.Class.html\" title=\"enum regex_syntax::ast::Class\">Class</a>","synthetic":true,"types":["regex_syntax::ast::Class"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassPerl.html\" title=\"struct regex_syntax::ast::ClassPerl\">ClassPerl</a>","synthetic":true,"types":["regex_syntax::ast::ClassPerl"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassPerlKind.html\" title=\"enum regex_syntax::ast::ClassPerlKind\">ClassPerlKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassPerlKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassAscii.html\" title=\"struct regex_syntax::ast::ClassAscii\">ClassAscii</a>","synthetic":true,"types":["regex_syntax::ast::ClassAscii"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassAsciiKind.html\" title=\"enum regex_syntax::ast::ClassAsciiKind\">ClassAsciiKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassAsciiKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassUnicode.html\" title=\"struct regex_syntax::ast::ClassUnicode\">ClassUnicode</a>","synthetic":true,"types":["regex_syntax::ast::ClassUnicode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassUnicodeKind.html\" title=\"enum regex_syntax::ast::ClassUnicodeKind\">ClassUnicodeKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassUnicodeKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassUnicodeOpKind.html\" title=\"enum regex_syntax::ast::ClassUnicodeOpKind\">ClassUnicodeOpKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassUnicodeOpKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassBracketed.html\" title=\"struct regex_syntax::ast::ClassBracketed\">ClassBracketed</a>","synthetic":true,"types":["regex_syntax::ast::ClassBracketed"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassSet.html\" title=\"enum regex_syntax::ast::ClassSet\">ClassSet</a>","synthetic":true,"types":["regex_syntax::ast::ClassSet"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassSetItem.html\" title=\"enum regex_syntax::ast::ClassSetItem\">ClassSetItem</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetItem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassSetRange.html\" title=\"struct regex_syntax::ast::ClassSetRange\">ClassSetRange</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassSetUnion.html\" title=\"struct regex_syntax::ast::ClassSetUnion\">ClassSetUnion</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetUnion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.ClassSetBinaryOp.html\" title=\"struct regex_syntax::ast::ClassSetBinaryOp\">ClassSetBinaryOp</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetBinaryOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.ClassSetBinaryOpKind.html\" title=\"enum regex_syntax::ast::ClassSetBinaryOpKind\">ClassSetBinaryOpKind</a>","synthetic":true,"types":["regex_syntax::ast::ClassSetBinaryOpKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Assertion.html\" title=\"struct regex_syntax::ast::Assertion\">Assertion</a>","synthetic":true,"types":["regex_syntax::ast::Assertion"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.AssertionKind.html\" title=\"enum regex_syntax::ast::AssertionKind\">AssertionKind</a>","synthetic":true,"types":["regex_syntax::ast::AssertionKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Repetition.html\" title=\"struct regex_syntax::ast::Repetition\">Repetition</a>","synthetic":true,"types":["regex_syntax::ast::Repetition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.RepetitionOp.html\" title=\"struct regex_syntax::ast::RepetitionOp\">RepetitionOp</a>","synthetic":true,"types":["regex_syntax::ast::RepetitionOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.RepetitionKind.html\" title=\"enum regex_syntax::ast::RepetitionKind\">RepetitionKind</a>","synthetic":true,"types":["regex_syntax::ast::RepetitionKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.RepetitionRange.html\" title=\"enum regex_syntax::ast::RepetitionRange\">RepetitionRange</a>","synthetic":true,"types":["regex_syntax::ast::RepetitionRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Group.html\" title=\"struct regex_syntax::ast::Group\">Group</a>","synthetic":true,"types":["regex_syntax::ast::Group"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.GroupKind.html\" title=\"enum regex_syntax::ast::GroupKind\">GroupKind</a>","synthetic":true,"types":["regex_syntax::ast::GroupKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.CaptureName.html\" title=\"struct regex_syntax::ast::CaptureName\">CaptureName</a>","synthetic":true,"types":["regex_syntax::ast::CaptureName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.SetFlags.html\" title=\"struct regex_syntax::ast::SetFlags\">SetFlags</a>","synthetic":true,"types":["regex_syntax::ast::SetFlags"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.Flags.html\" title=\"struct regex_syntax::ast::Flags\">Flags</a>","synthetic":true,"types":["regex_syntax::ast::Flags"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/ast/struct.FlagsItem.html\" title=\"struct regex_syntax::ast::FlagsItem\">FlagsItem</a>","synthetic":true,"types":["regex_syntax::ast::FlagsItem"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.FlagsItemKind.html\" title=\"enum regex_syntax::ast::FlagsItemKind\">FlagsItemKind</a>","synthetic":true,"types":["regex_syntax::ast::FlagsItemKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/ast/enum.Flag.html\" title=\"enum regex_syntax::ast::Flag\">Flag</a>","synthetic":true,"types":["regex_syntax::ast::Flag"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/enum.Error.html\" title=\"enum regex_syntax::Error\">Error</a>","synthetic":true,"types":["regex_syntax::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/literal/struct.Literals.html\" title=\"struct regex_syntax::hir::literal::Literals\">Literals</a>","synthetic":true,"types":["regex_syntax::hir::literal::Literals"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/literal/struct.Literal.html\" title=\"struct regex_syntax::hir::literal::Literal\">Literal</a>","synthetic":true,"types":["regex_syntax::hir::literal::Literal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/print/struct.Printer.html\" title=\"struct regex_syntax::hir::print::Printer\">Printer</a>","synthetic":true,"types":["regex_syntax::hir::print::Printer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/translate/struct.TranslatorBuilder.html\" title=\"struct regex_syntax::hir::translate::TranslatorBuilder\">TranslatorBuilder</a>","synthetic":true,"types":["regex_syntax::hir::translate::TranslatorBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"regex_syntax/hir/translate/struct.Translator.html\" title=\"struct regex_syntax::hir::translate::Translator\">Translator</a>","synthetic":true,"types":["regex_syntax::hir::translate::Translator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.CaseFoldError.html\" title=\"struct regex_syntax::hir::CaseFoldError\">CaseFoldError</a>","synthetic":true,"types":["regex_syntax::unicode::CaseFoldError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.Error.html\" title=\"struct regex_syntax::hir::Error\">Error</a>","synthetic":true,"types":["regex_syntax::hir::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.ErrorKind.html\" title=\"enum regex_syntax::hir::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["regex_syntax::hir::ErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.Hir.html\" title=\"struct regex_syntax::hir::Hir\">Hir</a>","synthetic":true,"types":["regex_syntax::hir::Hir"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.HirKind.html\" title=\"enum regex_syntax::hir::HirKind\">HirKind</a>","synthetic":true,"types":["regex_syntax::hir::HirKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.Literal.html\" title=\"enum regex_syntax::hir::Literal\">Literal</a>","synthetic":true,"types":["regex_syntax::hir::Literal"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.Class.html\" title=\"enum regex_syntax::hir::Class\">Class</a>","synthetic":true,"types":["regex_syntax::hir::Class"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassUnicode.html\" title=\"struct regex_syntax::hir::ClassUnicode\">ClassUnicode</a>","synthetic":true,"types":["regex_syntax::hir::ClassUnicode"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassUnicodeIter.html\" title=\"struct regex_syntax::hir::ClassUnicodeIter\">ClassUnicodeIter</a>&lt;'a&gt;","synthetic":true,"types":["regex_syntax::hir::ClassUnicodeIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassUnicodeRange.html\" title=\"struct regex_syntax::hir::ClassUnicodeRange\">ClassUnicodeRange</a>","synthetic":true,"types":["regex_syntax::hir::ClassUnicodeRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassBytes.html\" title=\"struct regex_syntax::hir::ClassBytes\">ClassBytes</a>","synthetic":true,"types":["regex_syntax::hir::ClassBytes"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassBytesIter.html\" title=\"struct regex_syntax::hir::ClassBytesIter\">ClassBytesIter</a>&lt;'a&gt;","synthetic":true,"types":["regex_syntax::hir::ClassBytesIter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.ClassBytesRange.html\" title=\"struct regex_syntax::hir::ClassBytesRange\">ClassBytesRange</a>","synthetic":true,"types":["regex_syntax::hir::ClassBytesRange"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.Anchor.html\" title=\"enum regex_syntax::hir::Anchor\">Anchor</a>","synthetic":true,"types":["regex_syntax::hir::Anchor"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.WordBoundary.html\" title=\"enum regex_syntax::hir::WordBoundary\">WordBoundary</a>","synthetic":true,"types":["regex_syntax::hir::WordBoundary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.Group.html\" title=\"struct regex_syntax::hir::Group\">Group</a>","synthetic":true,"types":["regex_syntax::hir::Group"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.GroupKind.html\" title=\"enum regex_syntax::hir::GroupKind\">GroupKind</a>","synthetic":true,"types":["regex_syntax::hir::GroupKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/hir/struct.Repetition.html\" title=\"struct regex_syntax::hir::Repetition\">Repetition</a>","synthetic":true,"types":["regex_syntax::hir::Repetition"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.RepetitionKind.html\" title=\"enum regex_syntax::hir::RepetitionKind\">RepetitionKind</a>","synthetic":true,"types":["regex_syntax::hir::RepetitionKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/hir/enum.RepetitionRange.html\" title=\"enum regex_syntax::hir::RepetitionRange\">RepetitionRange</a>","synthetic":true,"types":["regex_syntax::hir::RepetitionRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/struct.ParserBuilder.html\" title=\"struct regex_syntax::ParserBuilder\">ParserBuilder</a>","synthetic":true,"types":["regex_syntax::parser::ParserBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"regex_syntax/struct.Parser.html\" title=\"struct regex_syntax::Parser\">Parser</a>","synthetic":true,"types":["regex_syntax::parser::Parser"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/struct.UnicodeWordError.html\" title=\"struct regex_syntax::UnicodeWordError\">UnicodeWordError</a>","synthetic":true,"types":["regex_syntax::unicode::UnicodeWordError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"regex_syntax/utf8/enum.Utf8Sequence.html\" title=\"enum regex_syntax::utf8::Utf8Sequence\">Utf8Sequence</a>","synthetic":true,"types":["regex_syntax::utf8::Utf8Sequence"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/utf8/struct.Utf8Range.html\" title=\"struct regex_syntax::utf8::Utf8Range\">Utf8Range</a>","synthetic":true,"types":["regex_syntax::utf8::Utf8Range"]},{"text":"impl Freeze for <a class=\"struct\" href=\"regex_syntax/utf8/struct.Utf8Sequences.html\" title=\"struct regex_syntax::utf8::Utf8Sequences\">Utf8Sequences</a>","synthetic":true,"types":["regex_syntax::utf8::Utf8Sequences"]}];
implementors["reqwest"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"reqwest/struct.Error.html\" title=\"struct reqwest::Error\">Error</a>","synthetic":true,"types":["reqwest::error::Error"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"reqwest/struct.Body.html\" title=\"struct reqwest::Body\">Body</a>","synthetic":true,"types":["reqwest::async_impl::body::Body"]},{"text":"impl Freeze for <a class=\"struct\" href=\"reqwest/struct.Client.html\" title=\"struct reqwest::Client\">Client</a>","synthetic":true,"types":["reqwest::async_impl::client::Client"]},{"text":"impl Freeze for <a class=\"struct\" href=\"reqwest/struct.ClientBuilder.html\" title=\"struct reqwest::ClientBuilder\">ClientBuilder</a>","synthetic":true,"types":["reqwest::async_impl::client::ClientBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"reqwest/struct.Request.html\" title=\"struct reqwest::Request\">Request</a>","synthetic":true,"types":["reqwest::async_impl::request::Request"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"reqwest/struct.RequestBuilder.html\" title=\"struct reqwest::RequestBuilder\">RequestBuilder</a>","synthetic":true,"types":["reqwest::async_impl::request::RequestBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"reqwest/struct.Response.html\" title=\"struct reqwest::Response\">Response</a>","synthetic":true,"types":["reqwest::async_impl::response::Response"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"reqwest/blocking/struct.Body.html\" title=\"struct reqwest::blocking::Body\">Body</a>","synthetic":true,"types":["reqwest::blocking::body::Body"]},{"text":"impl Freeze for <a class=\"struct\" href=\"reqwest/blocking/struct.Client.html\" title=\"struct reqwest::blocking::Client\">Client</a>","synthetic":true,"types":["reqwest::blocking::client::Client"]},{"text":"impl Freeze for <a class=\"struct\" href=\"reqwest/blocking/struct.ClientBuilder.html\" title=\"struct reqwest::blocking::ClientBuilder\">ClientBuilder</a>","synthetic":true,"types":["reqwest::blocking::client::ClientBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"reqwest/blocking/struct.Request.html\" title=\"struct reqwest::blocking::Request\">Request</a>","synthetic":true,"types":["reqwest::blocking::request::Request"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"reqwest/blocking/struct.RequestBuilder.html\" title=\"struct reqwest::blocking::RequestBuilder\">RequestBuilder</a>","synthetic":true,"types":["reqwest::blocking::request::RequestBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"reqwest/blocking/struct.Response.html\" title=\"struct reqwest::blocking::Response\">Response</a>","synthetic":true,"types":["reqwest::blocking::response::Response"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"reqwest/cookie/struct.Cookie.html\" title=\"struct reqwest::cookie::Cookie\">Cookie</a>&lt;'a&gt;","synthetic":true,"types":["reqwest::cookie::Cookie"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"reqwest/cookie/struct.Jar.html\" title=\"struct reqwest::cookie::Jar\">Jar</a>","synthetic":true,"types":["reqwest::cookie::Jar"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"reqwest/struct.Proxy.html\" title=\"struct reqwest::Proxy\">Proxy</a>","synthetic":true,"types":["reqwest::proxy::Proxy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"reqwest/redirect/struct.Policy.html\" title=\"struct reqwest::redirect::Policy\">Policy</a>","synthetic":true,"types":["reqwest::redirect::Policy"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"reqwest/redirect/struct.Attempt.html\" title=\"struct reqwest::redirect::Attempt\">Attempt</a>&lt;'a&gt;","synthetic":true,"types":["reqwest::redirect::Attempt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"reqwest/redirect/struct.Action.html\" title=\"struct reqwest::redirect::Action\">Action</a>","synthetic":true,"types":["reqwest::redirect::Action"]},{"text":"impl Freeze for <a class=\"struct\" href=\"reqwest/tls/struct.Certificate.html\" title=\"struct reqwest::tls::Certificate\">Certificate</a>","synthetic":true,"types":["reqwest::tls::Certificate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"reqwest/tls/struct.Identity.html\" title=\"struct reqwest::tls::Identity\">Identity</a>","synthetic":true,"types":["reqwest::tls::Identity"]},{"text":"impl Freeze for <a class=\"struct\" href=\"reqwest/tls/struct.Version.html\" title=\"struct reqwest::tls::Version\">Version</a>","synthetic":true,"types":["reqwest::tls::Version"]}];
implementors["rust_miscellaneous_pkg"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"rust_miscellaneous_pkg/custom_request/custom_request/struct.CustomResponse.html\" title=\"struct rust_miscellaneous_pkg::custom_request::custom_request::CustomResponse\">CustomResponse</a>","synthetic":true,"types":["rust_miscellaneous_pkg::custom_request::custom_request::CustomResponse"]}];
implementors["rustc_serialize"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"rustc_serialize/base64/enum.CharacterSet.html\" title=\"enum rustc_serialize::base64::CharacterSet\">CharacterSet</a>","synthetic":true,"types":["rustc_serialize::base64::CharacterSet"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustc_serialize/base64/enum.Newline.html\" title=\"enum rustc_serialize::base64::Newline\">Newline</a>","synthetic":true,"types":["rustc_serialize::base64::Newline"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustc_serialize/base64/struct.Config.html\" title=\"struct rustc_serialize::base64::Config\">Config</a>","synthetic":true,"types":["rustc_serialize::base64::Config"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustc_serialize/base64/enum.FromBase64Error.html\" title=\"enum rustc_serialize::base64::FromBase64Error\">FromBase64Error</a>","synthetic":true,"types":["rustc_serialize::base64::FromBase64Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustc_serialize/hex/enum.FromHexError.html\" title=\"enum rustc_serialize::hex::FromHexError\">FromHexError</a>","synthetic":true,"types":["rustc_serialize::hex::FromHexError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustc_serialize/json/enum.Json.html\" title=\"enum rustc_serialize::json::Json\">Json</a>","synthetic":true,"types":["rustc_serialize::json::Json"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"rustc_serialize/json/struct.PrettyJson.html\" title=\"struct rustc_serialize::json::PrettyJson\">PrettyJson</a>&lt;'a&gt;","synthetic":true,"types":["rustc_serialize::json::PrettyJson"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rustc_serialize/json/struct.AsJson.html\" title=\"struct rustc_serialize::json::AsJson\">AsJson</a>&lt;'a, T&gt;","synthetic":true,"types":["rustc_serialize::json::AsJson"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"rustc_serialize/json/struct.AsPrettyJson.html\" title=\"struct rustc_serialize::json::AsPrettyJson\">AsPrettyJson</a>&lt;'a, T&gt;","synthetic":true,"types":["rustc_serialize::json::AsPrettyJson"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustc_serialize/json/enum.ErrorCode.html\" title=\"enum rustc_serialize::json::ErrorCode\">ErrorCode</a>","synthetic":true,"types":["rustc_serialize::json::ErrorCode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustc_serialize/json/enum.ParserError.html\" title=\"enum rustc_serialize::json::ParserError\">ParserError</a>","synthetic":true,"types":["rustc_serialize::json::ParserError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustc_serialize/json/enum.DecoderError.html\" title=\"enum rustc_serialize::json::DecoderError\">DecoderError</a>","synthetic":true,"types":["rustc_serialize::json::DecoderError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustc_serialize/json/enum.EncoderError.html\" title=\"enum rustc_serialize::json::EncoderError\">EncoderError</a>","synthetic":true,"types":["rustc_serialize::json::EncoderError"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"rustc_serialize/json/struct.Encoder.html\" title=\"struct rustc_serialize::json::Encoder\">Encoder</a>&lt;'a&gt;","synthetic":true,"types":["rustc_serialize::json::Encoder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rustc_serialize/json/enum.JsonEvent.html\" title=\"enum rustc_serialize::json::JsonEvent\">JsonEvent</a>","synthetic":true,"types":["rustc_serialize::json::JsonEvent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustc_serialize/json/struct.Stack.html\" title=\"struct rustc_serialize::json::Stack\">Stack</a>","synthetic":true,"types":["rustc_serialize::json::Stack"]},{"text":"impl&lt;'l&gt; Freeze for <a class=\"enum\" href=\"rustc_serialize/json/enum.StackElement.html\" title=\"enum rustc_serialize::json::StackElement\">StackElement</a>&lt;'l&gt;","synthetic":true,"types":["rustc_serialize::json::StackElement"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rustc_serialize/json/struct.Parser.html\" title=\"struct rustc_serialize::json::Parser\">Parser</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rustc_serialize::json::Parser"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"rustc_serialize/json/struct.Builder.html\" title=\"struct rustc_serialize::json::Builder\">Builder</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["rustc_serialize::json::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rustc_serialize/json/struct.Decoder.html\" title=\"struct rustc_serialize::json::Decoder\">Decoder</a>","synthetic":true,"types":["rustc_serialize::json::Decoder"]}];
implementors["ryu"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ryu/struct.Buffer.html\" title=\"struct ryu::Buffer\">Buffer</a>","synthetic":true,"types":["ryu::buffer::Buffer"]}];
implementors["safe_arch"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"safe_arch/struct.m128.html\" title=\"struct safe_arch::m128\">m128</a>","synthetic":true,"types":["safe_arch::x86_x64::m128_::m128"]},{"text":"impl Freeze for <a class=\"struct\" href=\"safe_arch/struct.m128d.html\" title=\"struct safe_arch::m128d\">m128d</a>","synthetic":true,"types":["safe_arch::x86_x64::m128d_::m128d"]},{"text":"impl Freeze for <a class=\"struct\" href=\"safe_arch/struct.m128i.html\" title=\"struct safe_arch::m128i\">m128i</a>","synthetic":true,"types":["safe_arch::x86_x64::m128i_::m128i"]},{"text":"impl Freeze for <a class=\"struct\" href=\"safe_arch/struct.m256.html\" title=\"struct safe_arch::m256\">m256</a>","synthetic":true,"types":["safe_arch::x86_x64::m256_::m256"]},{"text":"impl Freeze for <a class=\"struct\" href=\"safe_arch/struct.m256d.html\" title=\"struct safe_arch::m256d\">m256d</a>","synthetic":true,"types":["safe_arch::x86_x64::m256d_::m256d"]},{"text":"impl Freeze for <a class=\"struct\" href=\"safe_arch/struct.m256i.html\" title=\"struct safe_arch::m256i\">m256i</a>","synthetic":true,"types":["safe_arch::x86_x64::m256i_::m256i"]}];
implementors["scoped_threadpool"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"scoped_threadpool/struct.Pool.html\" title=\"struct scoped_threadpool::Pool\">Pool</a>","synthetic":true,"types":["scoped_threadpool::Pool"]},{"text":"impl&lt;'pool, 'scope&gt; Freeze for <a class=\"struct\" href=\"scoped_threadpool/struct.Scope.html\" title=\"struct scoped_threadpool::Scope\">Scope</a>&lt;'pool, 'scope&gt;","synthetic":true,"types":["scoped_threadpool::Scope"]}];
implementors["scopeguard"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"scopeguard/enum.Always.html\" title=\"enum scopeguard::Always\">Always</a>","synthetic":true,"types":["scopeguard::Always"]},{"text":"impl&lt;T, F, S&gt; Freeze for <a class=\"struct\" href=\"scopeguard/struct.ScopeGuard.html\" title=\"struct scopeguard::ScopeGuard\">ScopeGuard</a>&lt;T, F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["scopeguard::ScopeGuard"]}];
implementors["serde"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"serde/de/value/struct.Error.html\" title=\"struct serde::de::value::Error\">Error</a>","synthetic":true,"types":["serde::de::value::Error"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.UnitDeserializer.html\" title=\"struct serde::de::value::UnitDeserializer\">UnitDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::UnitDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BoolDeserializer.html\" title=\"struct serde::de::value::BoolDeserializer\">BoolDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::BoolDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I8Deserializer.html\" title=\"struct serde::de::value::I8Deserializer\">I8Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I8Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I16Deserializer.html\" title=\"struct serde::de::value::I16Deserializer\">I16Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I16Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I32Deserializer.html\" title=\"struct serde::de::value::I32Deserializer\">I32Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I32Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I64Deserializer.html\" title=\"struct serde::de::value::I64Deserializer\">I64Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I64Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.IsizeDeserializer.html\" title=\"struct serde::de::value::IsizeDeserializer\">IsizeDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::IsizeDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U8Deserializer.html\" title=\"struct serde::de::value::U8Deserializer\">U8Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U8Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U16Deserializer.html\" title=\"struct serde::de::value::U16Deserializer\">U16Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U16Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U64Deserializer.html\" title=\"struct serde::de::value::U64Deserializer\">U64Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U64Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.UsizeDeserializer.html\" title=\"struct serde::de::value::UsizeDeserializer\">UsizeDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::UsizeDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.F32Deserializer.html\" title=\"struct serde::de::value::F32Deserializer\">F32Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::F32Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.F64Deserializer.html\" title=\"struct serde::de::value::F64Deserializer\">F64Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::F64Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.CharDeserializer.html\" title=\"struct serde::de::value::CharDeserializer\">CharDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::CharDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I128Deserializer.html\" title=\"struct serde::de::value::I128Deserializer\">I128Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::I128Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U128Deserializer.html\" title=\"struct serde::de::value::U128Deserializer\">U128Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U128Deserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U32Deserializer.html\" title=\"struct serde::de::value::U32Deserializer\">U32Deserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::U32Deserializer"]},{"text":"impl&lt;'a, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.StrDeserializer.html\" title=\"struct serde::de::value::StrDeserializer\">StrDeserializer</a>&lt;'a, E&gt;","synthetic":true,"types":["serde::de::value::StrDeserializer"]},{"text":"impl&lt;'de, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BorrowedStrDeserializer.html\" title=\"struct serde::de::value::BorrowedStrDeserializer\">BorrowedStrDeserializer</a>&lt;'de, E&gt;","synthetic":true,"types":["serde::de::value::BorrowedStrDeserializer"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.StringDeserializer.html\" title=\"struct serde::de::value::StringDeserializer\">StringDeserializer</a>&lt;E&gt;","synthetic":true,"types":["serde::de::value::StringDeserializer"]},{"text":"impl&lt;'a, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.CowStrDeserializer.html\" title=\"struct serde::de::value::CowStrDeserializer\">CowStrDeserializer</a>&lt;'a, E&gt;","synthetic":true,"types":["serde::de::value::CowStrDeserializer"]},{"text":"impl&lt;'a, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BytesDeserializer.html\" title=\"struct serde::de::value::BytesDeserializer\">BytesDeserializer</a>&lt;'a, E&gt;","synthetic":true,"types":["serde::de::value::BytesDeserializer"]},{"text":"impl&lt;'de, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BorrowedBytesDeserializer.html\" title=\"struct serde::de::value::BorrowedBytesDeserializer\">BorrowedBytesDeserializer</a>&lt;'de, E&gt;","synthetic":true,"types":["serde::de::value::BorrowedBytesDeserializer"]},{"text":"impl&lt;I, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.SeqDeserializer.html\" title=\"struct serde::de::value::SeqDeserializer\">SeqDeserializer</a>&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["serde::de::value::SeqDeserializer"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.SeqAccessDeserializer.html\" title=\"struct serde::de::value::SeqAccessDeserializer\">SeqAccessDeserializer</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["serde::de::value::SeqAccessDeserializer"]},{"text":"impl&lt;'de, I, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.MapDeserializer.html\" title=\"struct serde::de::value::MapDeserializer\">MapDeserializer</a>&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.62.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a> as Pair&gt;::Second: Freeze,&nbsp;</span>","synthetic":true,"types":["serde::de::value::MapDeserializer"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.MapAccessDeserializer.html\" title=\"struct serde::de::value::MapAccessDeserializer\">MapAccessDeserializer</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["serde::de::value::MapAccessDeserializer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde/de/struct.IgnoredAny.html\" title=\"struct serde::de::IgnoredAny\">IgnoredAny</a>","synthetic":true,"types":["serde::de::ignored_any::IgnoredAny"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"serde/de/enum.Unexpected.html\" title=\"enum serde::de::Unexpected\">Unexpected</a>&lt;'a&gt;","synthetic":true,"types":["serde::de::Unexpected"]},{"text":"impl&lt;Ok, Error&gt; Freeze for <a class=\"struct\" href=\"serde/ser/struct.Impossible.html\" title=\"struct serde::ser::Impossible\">Impossible</a>&lt;Ok, Error&gt;","synthetic":true,"types":["serde::ser::impossible::Impossible"]}];
implementors["serde_json"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/de/struct.SliceRead.html\" title=\"struct serde_json::de::SliceRead\">SliceRead</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::read::SliceRead"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/de/struct.StrRead.html\" title=\"struct serde_json::de::StrRead\">StrRead</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::read::StrRead"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"serde_json/de/struct.IoRead.html\" title=\"struct serde_json::de::IoRead\">IoRead</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_json::read::IoRead"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"serde_json/struct.Deserializer.html\" title=\"struct serde_json::Deserializer\">Deserializer</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_json::de::Deserializer"]},{"text":"impl&lt;'de, R, T&gt; Freeze for <a class=\"struct\" href=\"serde_json/struct.StreamDeserializer.html\" title=\"struct serde_json::StreamDeserializer\">StreamDeserializer</a>&lt;'de, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_json::de::StreamDeserializer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_json/struct.Error.html\" title=\"struct serde_json::Error\">Error</a>","synthetic":true,"types":["serde_json::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_json/error/enum.Category.html\" title=\"enum serde_json::error::Category\">Category</a>","synthetic":true,"types":["serde_json::error::Category"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"serde_json/struct.Map.html\" title=\"struct serde_json::Map\">Map</a>&lt;K, V&gt;","synthetic":true,"types":["serde_json::map::Map"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"serde_json/map/enum.Entry.html\" title=\"enum serde_json::map::Entry\">Entry</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::Entry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.VacantEntry.html\" title=\"struct serde_json::map::VacantEntry\">VacantEntry</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::VacantEntry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.OccupiedEntry.html\" title=\"struct serde_json::map::OccupiedEntry\">OccupiedEntry</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::OccupiedEntry"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.Iter.html\" title=\"struct serde_json::map::Iter\">Iter</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::Iter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.IterMut.html\" title=\"struct serde_json::map::IterMut\">IterMut</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::IterMut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_json/map/struct.IntoIter.html\" title=\"struct serde_json::map::IntoIter\">IntoIter</a>","synthetic":true,"types":["serde_json::map::IntoIter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.Keys.html\" title=\"struct serde_json::map::Keys\">Keys</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::Keys"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.Values.html\" title=\"struct serde_json::map::Values\">Values</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::Values"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.ValuesMut.html\" title=\"struct serde_json::map::ValuesMut\">ValuesMut</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::map::ValuesMut"]},{"text":"impl&lt;W, F&gt; Freeze for <a class=\"struct\" href=\"serde_json/struct.Serializer.html\" title=\"struct serde_json::Serializer\">Serializer</a>&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["serde_json::ser::Serializer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_json/ser/enum.CharEscape.html\" title=\"enum serde_json::ser::CharEscape\">CharEscape</a>","synthetic":true,"types":["serde_json::ser::CharEscape"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_json/ser/struct.CompactFormatter.html\" title=\"struct serde_json::ser::CompactFormatter\">CompactFormatter</a>","synthetic":true,"types":["serde_json::ser::CompactFormatter"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/ser/struct.PrettyFormatter.html\" title=\"struct serde_json::ser::PrettyFormatter\">PrettyFormatter</a>&lt;'a&gt;","synthetic":true,"types":["serde_json::ser::PrettyFormatter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_json/value/struct.Serializer.html\" title=\"struct serde_json::value::Serializer\">Serializer</a>","synthetic":true,"types":["serde_json::value::ser::Serializer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"serde_json/value/struct.Number.html\" title=\"struct serde_json::value::Number\">Number</a>","synthetic":true,"types":["serde_json::number::Number"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_json/enum.Value.html\" title=\"enum serde_json::Value\">Value</a>","synthetic":true,"types":["serde_json::value::Value"]}];
implementors["serde_urlencoded"] = [{"text":"impl&lt;'de&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/struct.Deserializer.html\" title=\"struct serde_urlencoded::Deserializer\">Deserializer</a>&lt;'de&gt;","synthetic":true,"types":["serde_urlencoded::de::Deserializer"]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/struct.Serializer.html\" title=\"struct serde_urlencoded::Serializer\">Serializer</a>&lt;'input, 'output, Target&gt;","synthetic":true,"types":["serde_urlencoded::ser::Serializer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"serde_urlencoded/ser/enum.Error.html\" title=\"enum serde_urlencoded::ser::Error\">Error</a>","synthetic":true,"types":["serde_urlencoded::ser::Error"]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.SeqSerializer.html\" title=\"struct serde_urlencoded::ser::SeqSerializer\">SeqSerializer</a>&lt;'input, 'output, Target&gt;","synthetic":true,"types":["serde_urlencoded::ser::SeqSerializer"]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.TupleSerializer.html\" title=\"struct serde_urlencoded::ser::TupleSerializer\">TupleSerializer</a>&lt;'input, 'output, Target&gt;","synthetic":true,"types":["serde_urlencoded::ser::TupleSerializer"]},{"text":"impl&lt;'input, 'output, T&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.TupleStructSerializer.html\" title=\"struct serde_urlencoded::ser::TupleStructSerializer\">TupleStructSerializer</a>&lt;'input, 'output, T&gt;","synthetic":true,"types":["serde_urlencoded::ser::TupleStructSerializer"]},{"text":"impl&lt;'input, 'output, T&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.TupleVariantSerializer.html\" title=\"struct serde_urlencoded::ser::TupleVariantSerializer\">TupleVariantSerializer</a>&lt;'input, 'output, T&gt;","synthetic":true,"types":["serde_urlencoded::ser::TupleVariantSerializer"]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.MapSerializer.html\" title=\"struct serde_urlencoded::ser::MapSerializer\">MapSerializer</a>&lt;'input, 'output, Target&gt;","synthetic":true,"types":["serde_urlencoded::ser::MapSerializer"]},{"text":"impl&lt;'input, 'output, Target&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.StructSerializer.html\" title=\"struct serde_urlencoded::ser::StructSerializer\">StructSerializer</a>&lt;'input, 'output, Target&gt;","synthetic":true,"types":["serde_urlencoded::ser::StructSerializer"]},{"text":"impl&lt;'input, 'output, T&gt; Freeze for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.StructVariantSerializer.html\" title=\"struct serde_urlencoded::ser::StructVariantSerializer\">StructVariantSerializer</a>&lt;'input, 'output, T&gt;","synthetic":true,"types":["serde_urlencoded::ser::StructVariantSerializer"]}];
implementors["simba"] = [{"text":"impl&lt;N&gt; Freeze for <a class=\"struct\" href=\"simba/simd/struct.AutoSimd.html\" title=\"struct simba::simd::AutoSimd\">AutoSimd</a>&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["simba::simd::auto_simd_impl::AutoSimd"]},{"text":"impl&lt;N&gt; Freeze for <a class=\"struct\" href=\"simba/simd/struct.AutoBoolSimd.html\" title=\"struct simba::simd::AutoBoolSimd\">AutoBoolSimd</a>&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["simba::simd::auto_simd_impl::AutoBoolSimd"]},{"text":"impl&lt;V&gt; Freeze for <a class=\"struct\" href=\"simba/simd/struct.SimdOption.html\" title=\"struct simba::simd::SimdOption\">SimdOption</a>&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;V as <a class=\"trait\" href=\"simba/simd/trait.SimdValue.html\" title=\"trait simba::simd::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/trait.SimdValue.html#associatedtype.SimdBool\" title=\"type simba::simd::SimdValue::SimdBool\">SimdBool</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["simba::simd::simd_option::SimdOption"]},{"text":"impl Freeze for <a class=\"struct\" href=\"simba/simd/struct.WideF32x4.html\" title=\"struct simba::simd::WideF32x4\">WideF32x4</a>","synthetic":true,"types":["simba::simd::wide_simd_impl::WideF32x4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"simba/simd/struct.WideBoolF32x4.html\" title=\"struct simba::simd::WideBoolF32x4\">WideBoolF32x4</a>","synthetic":true,"types":["simba::simd::wide_simd_impl::WideBoolF32x4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"simba/simd/struct.WideF32x8.html\" title=\"struct simba::simd::WideF32x8\">WideF32x8</a>","synthetic":true,"types":["simba::simd::wide_simd_impl::WideF32x8"]},{"text":"impl Freeze for <a class=\"struct\" href=\"simba/simd/struct.WideBoolF32x8.html\" title=\"struct simba::simd::WideBoolF32x8\">WideBoolF32x8</a>","synthetic":true,"types":["simba::simd::wide_simd_impl::WideBoolF32x8"]},{"text":"impl Freeze for <a class=\"struct\" href=\"simba/simd/struct.WideF64x4.html\" title=\"struct simba::simd::WideF64x4\">WideF64x4</a>","synthetic":true,"types":["simba::simd::wide_simd_impl::WideF64x4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"simba/simd/struct.WideBoolF64x4.html\" title=\"struct simba::simd::WideBoolF64x4\">WideBoolF64x4</a>","synthetic":true,"types":["simba::simd::wide_simd_impl::WideBoolF64x4"]}];
implementors["simplerand"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"simplerand/struct.Rng.html\" title=\"struct simplerand::Rng\">Rng</a>","synthetic":true,"types":["simplerand::Rng"]}];
implementors["slab"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.Slab.html\" title=\"struct slab::Slab\">Slab</a>&lt;T&gt;","synthetic":true,"types":["slab::Slab"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.VacantEntry.html\" title=\"struct slab::VacantEntry\">VacantEntry</a>&lt;'a, T&gt;","synthetic":true,"types":["slab::VacantEntry"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.IntoIter.html\" title=\"struct slab::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["slab::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.Iter.html\" title=\"struct slab::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["slab::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.IterMut.html\" title=\"struct slab::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["slab::IterMut"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.Drain.html\" title=\"struct slab::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["slab::Drain"]}];
implementors["smallvec"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"smallvec/enum.CollectionAllocErr.html\" title=\"enum smallvec::CollectionAllocErr\">CollectionAllocErr</a>","synthetic":true,"types":["smallvec::CollectionAllocErr"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"smallvec/struct.Drain.html\" title=\"struct smallvec::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["smallvec::Drain"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"smallvec/struct.SmallVec.html\" title=\"struct smallvec::SmallVec\">SmallVec</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["smallvec::SmallVec"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"smallvec/struct.IntoIter.html\" title=\"struct smallvec::IntoIter\">IntoIter</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["smallvec::IntoIter"]}];
implementors["socket2"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.SockAddr.html\" title=\"struct socket2::SockAddr\">SockAddr</a>","synthetic":true,"types":["socket2::sockaddr::SockAddr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.Socket.html\" title=\"struct socket2::Socket\">Socket</a>","synthetic":true,"types":["socket2::socket::Socket"]},{"text":"impl Freeze for <a class=\"enum\" href=\"socket2/enum.InterfaceIndexOrAddress.html\" title=\"enum socket2::InterfaceIndexOrAddress\">InterfaceIndexOrAddress</a>","synthetic":true,"types":["socket2::socket::InterfaceIndexOrAddress"]},{"text":"impl&lt;'s&gt; Freeze for <a class=\"struct\" href=\"socket2/struct.SockRef.html\" title=\"struct socket2::SockRef\">SockRef</a>&lt;'s&gt;","synthetic":true,"types":["socket2::sockref::SockRef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.Domain.html\" title=\"struct socket2::Domain\">Domain</a>","synthetic":true,"types":["socket2::Domain"]},{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.Type.html\" title=\"struct socket2::Type\">Type</a>","synthetic":true,"types":["socket2::Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.Protocol.html\" title=\"struct socket2::Protocol\">Protocol</a>","synthetic":true,"types":["socket2::Protocol"]},{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.RecvFlags.html\" title=\"struct socket2::RecvFlags\">RecvFlags</a>","synthetic":true,"types":["socket2::RecvFlags"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"socket2/struct.MaybeUninitSlice.html\" title=\"struct socket2::MaybeUninitSlice\">MaybeUninitSlice</a>&lt;'a&gt;","synthetic":true,"types":["socket2::MaybeUninitSlice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.TcpKeepalive.html\" title=\"struct socket2::TcpKeepalive\">TcpKeepalive</a>","synthetic":true,"types":["socket2::TcpKeepalive"]}];
implementors["spin"] = [{"text":"impl&lt;R&nbsp;=&nbsp;<a class=\"struct\" href=\"spin/relax/struct.Spin.html\" title=\"struct spin::relax::Spin\">Spin</a>&gt; !Freeze for <a class=\"struct\" href=\"spin/barrier/struct.Barrier.html\" title=\"struct spin::barrier::Barrier\">Barrier</a>&lt;R&gt;","synthetic":true,"types":["spin::barrier::Barrier"]},{"text":"impl Freeze for <a class=\"struct\" href=\"spin/barrier/struct.BarrierWaitResult.html\" title=\"struct spin::barrier::BarrierWaitResult\">BarrierWaitResult</a>","synthetic":true,"types":["spin::barrier::BarrierWaitResult"]},{"text":"impl&lt;T, F&nbsp;=&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.1/core/primitive.fn.html\">fn</a>() -&gt; T, R&nbsp;=&nbsp;<a class=\"struct\" href=\"spin/relax/struct.Spin.html\" title=\"struct spin::relax::Spin\">Spin</a>&gt; !Freeze for <a class=\"struct\" href=\"spin/lazy/struct.Lazy.html\" title=\"struct spin::lazy::Lazy\">Lazy</a>&lt;T, F, R&gt;","synthetic":true,"types":["spin::lazy::Lazy"]},{"text":"impl&lt;T, R&nbsp;=&nbsp;<a class=\"struct\" href=\"spin/relax/struct.Spin.html\" title=\"struct spin::relax::Spin\">Spin</a>&gt; !Freeze for <a class=\"struct\" href=\"spin/mutex/spin/struct.SpinMutex.html\" title=\"struct spin::mutex::spin::SpinMutex\">SpinMutex</a>&lt;T, R&gt;","synthetic":true,"types":["spin::mutex::spin::SpinMutex"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"spin/mutex/spin/struct.SpinMutexGuard.html\" title=\"struct spin::mutex::spin::SpinMutexGuard\">SpinMutexGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["spin::mutex::spin::SpinMutexGuard"]},{"text":"impl&lt;T, R&nbsp;=&nbsp;<a class=\"struct\" href=\"spin/relax/struct.Spin.html\" title=\"struct spin::relax::Spin\">Spin</a>&gt; !Freeze for <a class=\"struct\" href=\"spin/mutex/struct.Mutex.html\" title=\"struct spin::mutex::Mutex\">Mutex</a>&lt;T, R&gt;","synthetic":true,"types":["spin::mutex::Mutex"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"spin/mutex/struct.MutexGuard.html\" title=\"struct spin::mutex::MutexGuard\">MutexGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["spin::mutex::MutexGuard"]},{"text":"impl&lt;T&nbsp;=&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.1/core/primitive.unit.html\">()</a>, R&nbsp;=&nbsp;<a class=\"struct\" href=\"spin/relax/struct.Spin.html\" title=\"struct spin::relax::Spin\">Spin</a>&gt; !Freeze for <a class=\"struct\" href=\"spin/once/struct.Once.html\" title=\"struct spin::once::Once\">Once</a>&lt;T, R&gt;","synthetic":true,"types":["spin::once::Once"]},{"text":"impl&lt;T, R&nbsp;=&nbsp;<a class=\"struct\" href=\"spin/relax/struct.Spin.html\" title=\"struct spin::relax::Spin\">Spin</a>&gt; !Freeze for <a class=\"struct\" href=\"spin/rwlock/struct.RwLock.html\" title=\"struct spin::rwlock::RwLock\">RwLock</a>&lt;T, R&gt;","synthetic":true,"types":["spin::rwlock::RwLock"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"spin/rwlock/struct.RwLockReadGuard.html\" title=\"struct spin::rwlock::RwLockReadGuard\">RwLockReadGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["spin::rwlock::RwLockReadGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, R&gt; Freeze for <a class=\"struct\" href=\"spin/rwlock/struct.RwLockWriteGuard.html\" title=\"struct spin::rwlock::RwLockWriteGuard\">RwLockWriteGuard</a>&lt;'a, T, R&gt;","synthetic":true,"types":["spin::rwlock::RwLockWriteGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, R&gt; Freeze for <a class=\"struct\" href=\"spin/rwlock/struct.RwLockUpgradableGuard.html\" title=\"struct spin::rwlock::RwLockUpgradableGuard\">RwLockUpgradableGuard</a>&lt;'a, T, R&gt;","synthetic":true,"types":["spin::rwlock::RwLockUpgradableGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"spin/relax/struct.Spin.html\" title=\"struct spin::relax::Spin\">Spin</a>","synthetic":true,"types":["spin::relax::Spin"]},{"text":"impl Freeze for <a class=\"struct\" href=\"spin/relax/struct.Loop.html\" title=\"struct spin::relax::Loop\">Loop</a>","synthetic":true,"types":["spin::relax::Loop"]}];
implementors["statrs"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.Bernoulli.html\" title=\"struct statrs::distribution::Bernoulli\">Bernoulli</a>","synthetic":true,"types":["statrs::distribution::bernoulli::Bernoulli"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.Beta.html\" title=\"struct statrs::distribution::Beta\">Beta</a>","synthetic":true,"types":["statrs::distribution::beta::Beta"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.Binomial.html\" title=\"struct statrs::distribution::Binomial\">Binomial</a>","synthetic":true,"types":["statrs::distribution::binomial::Binomial"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.Categorical.html\" title=\"struct statrs::distribution::Categorical\">Categorical</a>","synthetic":true,"types":["statrs::distribution::categorical::Categorical"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.Cauchy.html\" title=\"struct statrs::distribution::Cauchy\">Cauchy</a>","synthetic":true,"types":["statrs::distribution::cauchy::Cauchy"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.Chi.html\" title=\"struct statrs::distribution::Chi\">Chi</a>","synthetic":true,"types":["statrs::distribution::chi::Chi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.ChiSquared.html\" title=\"struct statrs::distribution::ChiSquared\">ChiSquared</a>","synthetic":true,"types":["statrs::distribution::chi_squared::ChiSquared"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.Dirac.html\" title=\"struct statrs::distribution::Dirac\">Dirac</a>","synthetic":true,"types":["statrs::distribution::dirac::Dirac"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.Dirichlet.html\" title=\"struct statrs::distribution::Dirichlet\">Dirichlet</a>","synthetic":true,"types":["statrs::distribution::dirichlet::Dirichlet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.DiscreteUniform.html\" title=\"struct statrs::distribution::DiscreteUniform\">DiscreteUniform</a>","synthetic":true,"types":["statrs::distribution::discrete_uniform::DiscreteUniform"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.Empirical.html\" title=\"struct statrs::distribution::Empirical\">Empirical</a>","synthetic":true,"types":["statrs::distribution::empirical::Empirical"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.Erlang.html\" title=\"struct statrs::distribution::Erlang\">Erlang</a>","synthetic":true,"types":["statrs::distribution::erlang::Erlang"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.Exp.html\" title=\"struct statrs::distribution::Exp\">Exp</a>","synthetic":true,"types":["statrs::distribution::exponential::Exp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.FisherSnedecor.html\" title=\"struct statrs::distribution::FisherSnedecor\">FisherSnedecor</a>","synthetic":true,"types":["statrs::distribution::fisher_snedecor::FisherSnedecor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.Gamma.html\" title=\"struct statrs::distribution::Gamma\">Gamma</a>","synthetic":true,"types":["statrs::distribution::gamma::Gamma"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.Geometric.html\" title=\"struct statrs::distribution::Geometric\">Geometric</a>","synthetic":true,"types":["statrs::distribution::geometric::Geometric"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.Hypergeometric.html\" title=\"struct statrs::distribution::Hypergeometric\">Hypergeometric</a>","synthetic":true,"types":["statrs::distribution::hypergeometric::Hypergeometric"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.InverseGamma.html\" title=\"struct statrs::distribution::InverseGamma\">InverseGamma</a>","synthetic":true,"types":["statrs::distribution::inverse_gamma::InverseGamma"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.Laplace.html\" title=\"struct statrs::distribution::Laplace\">Laplace</a>","synthetic":true,"types":["statrs::distribution::laplace::Laplace"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.LogNormal.html\" title=\"struct statrs::distribution::LogNormal\">LogNormal</a>","synthetic":true,"types":["statrs::distribution::log_normal::LogNormal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.Multinomial.html\" title=\"struct statrs::distribution::Multinomial\">Multinomial</a>","synthetic":true,"types":["statrs::distribution::multinomial::Multinomial"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.MultivariateNormal.html\" title=\"struct statrs::distribution::MultivariateNormal\">MultivariateNormal</a>","synthetic":true,"types":["statrs::distribution::multivariate_normal::MultivariateNormal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.NegativeBinomial.html\" title=\"struct statrs::distribution::NegativeBinomial\">NegativeBinomial</a>","synthetic":true,"types":["statrs::distribution::negative_binomial::NegativeBinomial"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.Normal.html\" title=\"struct statrs::distribution::Normal\">Normal</a>","synthetic":true,"types":["statrs::distribution::normal::Normal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.Pareto.html\" title=\"struct statrs::distribution::Pareto\">Pareto</a>","synthetic":true,"types":["statrs::distribution::pareto::Pareto"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.Poisson.html\" title=\"struct statrs::distribution::Poisson\">Poisson</a>","synthetic":true,"types":["statrs::distribution::poisson::Poisson"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.StudentsT.html\" title=\"struct statrs::distribution::StudentsT\">StudentsT</a>","synthetic":true,"types":["statrs::distribution::students_t::StudentsT"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.Triangular.html\" title=\"struct statrs::distribution::Triangular\">Triangular</a>","synthetic":true,"types":["statrs::distribution::triangular::Triangular"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.Uniform.html\" title=\"struct statrs::distribution::Uniform\">Uniform</a>","synthetic":true,"types":["statrs::distribution::uniform::Uniform"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/distribution/struct.Weibull.html\" title=\"struct statrs::distribution::Weibull\">Weibull</a>","synthetic":true,"types":["statrs::distribution::weibull::Weibull"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/generate/struct.InfinitePeriodic.html\" title=\"struct statrs::generate::InfinitePeriodic\">InfinitePeriodic</a>","synthetic":true,"types":["statrs::generate::InfinitePeriodic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/generate/struct.InfiniteSinusoidal.html\" title=\"struct statrs::generate::InfiniteSinusoidal\">InfiniteSinusoidal</a>","synthetic":true,"types":["statrs::generate::InfiniteSinusoidal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/generate/struct.InfiniteSquare.html\" title=\"struct statrs::generate::InfiniteSquare\">InfiniteSquare</a>","synthetic":true,"types":["statrs::generate::InfiniteSquare"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/generate/struct.InfiniteTriangle.html\" title=\"struct statrs::generate::InfiniteTriangle\">InfiniteTriangle</a>","synthetic":true,"types":["statrs::generate::InfiniteTriangle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"statrs/generate/struct.InfiniteSawtooth.html\" title=\"struct statrs::generate::InfiniteSawtooth\">InfiniteSawtooth</a>","synthetic":true,"types":["statrs::generate::InfiniteSawtooth"]},{"text":"impl&lt;D&gt; Freeze for <a class=\"struct\" href=\"statrs/statistics/struct.Data.html\" title=\"struct statrs::statistics::Data\">Data</a>&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["statrs::statistics::slice_statistics::Data"]},{"text":"impl Freeze for <a class=\"enum\" href=\"statrs/statistics/enum.RankTieBreaker.html\" title=\"enum statrs::statistics::RankTieBreaker\">RankTieBreaker</a>","synthetic":true,"types":["statrs::statistics::statistics::RankTieBreaker"]},{"text":"impl Freeze for <a class=\"enum\" href=\"statrs/enum.StatsError.html\" title=\"enum statrs::StatsError\">StatsError</a>","synthetic":true,"types":["statrs::error::StatsError"]}];
implementors["string_builder"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"string_builder/struct.Builder.html\" title=\"struct string_builder::Builder\">Builder</a>","synthetic":true,"types":["string_builder::Builder"]}];
implementors["strum"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"strum/enum.ParseError.html\" title=\"enum strum::ParseError\">ParseError</a>","synthetic":true,"types":["strum::ParseError"]}];
implementors["syn"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Underscore.html\" title=\"struct syn::token::Underscore\">Underscore</a>","synthetic":true,"types":["syn::token::Underscore"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Abstract.html\" title=\"struct syn::token::Abstract\">Abstract</a>","synthetic":true,"types":["syn::token::Abstract"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.As.html\" title=\"struct syn::token::As\">As</a>","synthetic":true,"types":["syn::token::As"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Async.html\" title=\"struct syn::token::Async\">Async</a>","synthetic":true,"types":["syn::token::Async"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Auto.html\" title=\"struct syn::token::Auto\">Auto</a>","synthetic":true,"types":["syn::token::Auto"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Await.html\" title=\"struct syn::token::Await\">Await</a>","synthetic":true,"types":["syn::token::Await"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Become.html\" title=\"struct syn::token::Become\">Become</a>","synthetic":true,"types":["syn::token::Become"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Box.html\" title=\"struct syn::token::Box\">Box</a>","synthetic":true,"types":["syn::token::Box"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Break.html\" title=\"struct syn::token::Break\">Break</a>","synthetic":true,"types":["syn::token::Break"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Const.html\" title=\"struct syn::token::Const\">Const</a>","synthetic":true,"types":["syn::token::Const"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Continue.html\" title=\"struct syn::token::Continue\">Continue</a>","synthetic":true,"types":["syn::token::Continue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Crate.html\" title=\"struct syn::token::Crate\">Crate</a>","synthetic":true,"types":["syn::token::Crate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Default.html\" title=\"struct syn::token::Default\">Default</a>","synthetic":true,"types":["syn::token::Default"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Do.html\" title=\"struct syn::token::Do\">Do</a>","synthetic":true,"types":["syn::token::Do"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dyn.html\" title=\"struct syn::token::Dyn\">Dyn</a>","synthetic":true,"types":["syn::token::Dyn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Else.html\" title=\"struct syn::token::Else\">Else</a>","synthetic":true,"types":["syn::token::Else"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Enum.html\" title=\"struct syn::token::Enum\">Enum</a>","synthetic":true,"types":["syn::token::Enum"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Extern.html\" title=\"struct syn::token::Extern\">Extern</a>","synthetic":true,"types":["syn::token::Extern"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Final.html\" title=\"struct syn::token::Final\">Final</a>","synthetic":true,"types":["syn::token::Final"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Fn.html\" title=\"struct syn::token::Fn\">Fn</a>","synthetic":true,"types":["syn::token::Fn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.For.html\" title=\"struct syn::token::For\">For</a>","synthetic":true,"types":["syn::token::For"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.If.html\" title=\"struct syn::token::If\">If</a>","synthetic":true,"types":["syn::token::If"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Impl.html\" title=\"struct syn::token::Impl\">Impl</a>","synthetic":true,"types":["syn::token::Impl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.In.html\" title=\"struct syn::token::In\">In</a>","synthetic":true,"types":["syn::token::In"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Let.html\" title=\"struct syn::token::Let\">Let</a>","synthetic":true,"types":["syn::token::Let"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Loop.html\" title=\"struct syn::token::Loop\">Loop</a>","synthetic":true,"types":["syn::token::Loop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Macro.html\" title=\"struct syn::token::Macro\">Macro</a>","synthetic":true,"types":["syn::token::Macro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Match.html\" title=\"struct syn::token::Match\">Match</a>","synthetic":true,"types":["syn::token::Match"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Mod.html\" title=\"struct syn::token::Mod\">Mod</a>","synthetic":true,"types":["syn::token::Mod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Move.html\" title=\"struct syn::token::Move\">Move</a>","synthetic":true,"types":["syn::token::Move"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Mut.html\" title=\"struct syn::token::Mut\">Mut</a>","synthetic":true,"types":["syn::token::Mut"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Override.html\" title=\"struct syn::token::Override\">Override</a>","synthetic":true,"types":["syn::token::Override"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Priv.html\" title=\"struct syn::token::Priv\">Priv</a>","synthetic":true,"types":["syn::token::Priv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Pub.html\" title=\"struct syn::token::Pub\">Pub</a>","synthetic":true,"types":["syn::token::Pub"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ref.html\" title=\"struct syn::token::Ref\">Ref</a>","synthetic":true,"types":["syn::token::Ref"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Return.html\" title=\"struct syn::token::Return\">Return</a>","synthetic":true,"types":["syn::token::Return"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SelfType.html\" title=\"struct syn::token::SelfType\">SelfType</a>","synthetic":true,"types":["syn::token::SelfType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SelfValue.html\" title=\"struct syn::token::SelfValue\">SelfValue</a>","synthetic":true,"types":["syn::token::SelfValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Static.html\" title=\"struct syn::token::Static\">Static</a>","synthetic":true,"types":["syn::token::Static"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Struct.html\" title=\"struct syn::token::Struct\">Struct</a>","synthetic":true,"types":["syn::token::Struct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Super.html\" title=\"struct syn::token::Super\">Super</a>","synthetic":true,"types":["syn::token::Super"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Trait.html\" title=\"struct syn::token::Trait\">Trait</a>","synthetic":true,"types":["syn::token::Trait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Try.html\" title=\"struct syn::token::Try\">Try</a>","synthetic":true,"types":["syn::token::Try"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Type.html\" title=\"struct syn::token::Type\">Type</a>","synthetic":true,"types":["syn::token::Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Typeof.html\" title=\"struct syn::token::Typeof\">Typeof</a>","synthetic":true,"types":["syn::token::Typeof"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Union.html\" title=\"struct syn::token::Union\">Union</a>","synthetic":true,"types":["syn::token::Union"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Unsafe.html\" title=\"struct syn::token::Unsafe\">Unsafe</a>","synthetic":true,"types":["syn::token::Unsafe"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Unsized.html\" title=\"struct syn::token::Unsized\">Unsized</a>","synthetic":true,"types":["syn::token::Unsized"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Use.html\" title=\"struct syn::token::Use\">Use</a>","synthetic":true,"types":["syn::token::Use"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Virtual.html\" title=\"struct syn::token::Virtual\">Virtual</a>","synthetic":true,"types":["syn::token::Virtual"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Where.html\" title=\"struct syn::token::Where\">Where</a>","synthetic":true,"types":["syn::token::Where"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.While.html\" title=\"struct syn::token::While\">While</a>","synthetic":true,"types":["syn::token::While"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Yield.html\" title=\"struct syn::token::Yield\">Yield</a>","synthetic":true,"types":["syn::token::Yield"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Add.html\" title=\"struct syn::token::Add\">Add</a>","synthetic":true,"types":["syn::token::Add"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AddEq.html\" title=\"struct syn::token::AddEq\">AddEq</a>","synthetic":true,"types":["syn::token::AddEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.And.html\" title=\"struct syn::token::And\">And</a>","synthetic":true,"types":["syn::token::And"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AndAnd.html\" title=\"struct syn::token::AndAnd\">AndAnd</a>","synthetic":true,"types":["syn::token::AndAnd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.AndEq.html\" title=\"struct syn::token::AndEq\">AndEq</a>","synthetic":true,"types":["syn::token::AndEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.At.html\" title=\"struct syn::token::At\">At</a>","synthetic":true,"types":["syn::token::At"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Bang.html\" title=\"struct syn::token::Bang\">Bang</a>","synthetic":true,"types":["syn::token::Bang"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Caret.html\" title=\"struct syn::token::Caret\">Caret</a>","synthetic":true,"types":["syn::token::Caret"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.CaretEq.html\" title=\"struct syn::token::CaretEq\">CaretEq</a>","synthetic":true,"types":["syn::token::CaretEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Colon.html\" title=\"struct syn::token::Colon\">Colon</a>","synthetic":true,"types":["syn::token::Colon"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Colon2.html\" title=\"struct syn::token::Colon2\">Colon2</a>","synthetic":true,"types":["syn::token::Colon2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Comma.html\" title=\"struct syn::token::Comma\">Comma</a>","synthetic":true,"types":["syn::token::Comma"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Div.html\" title=\"struct syn::token::Div\">Div</a>","synthetic":true,"types":["syn::token::Div"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.DivEq.html\" title=\"struct syn::token::DivEq\">DivEq</a>","synthetic":true,"types":["syn::token::DivEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dollar.html\" title=\"struct syn::token::Dollar\">Dollar</a>","synthetic":true,"types":["syn::token::Dollar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot.html\" title=\"struct syn::token::Dot\">Dot</a>","synthetic":true,"types":["syn::token::Dot"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot2.html\" title=\"struct syn::token::Dot2\">Dot2</a>","synthetic":true,"types":["syn::token::Dot2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Dot3.html\" title=\"struct syn::token::Dot3\">Dot3</a>","synthetic":true,"types":["syn::token::Dot3"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.DotDotEq.html\" title=\"struct syn::token::DotDotEq\">DotDotEq</a>","synthetic":true,"types":["syn::token::DotDotEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Eq.html\" title=\"struct syn::token::Eq\">Eq</a>","synthetic":true,"types":["syn::token::Eq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.EqEq.html\" title=\"struct syn::token::EqEq\">EqEq</a>","synthetic":true,"types":["syn::token::EqEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ge.html\" title=\"struct syn::token::Ge\">Ge</a>","synthetic":true,"types":["syn::token::Ge"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Gt.html\" title=\"struct syn::token::Gt\">Gt</a>","synthetic":true,"types":["syn::token::Gt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Le.html\" title=\"struct syn::token::Le\">Le</a>","synthetic":true,"types":["syn::token::Le"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Lt.html\" title=\"struct syn::token::Lt\">Lt</a>","synthetic":true,"types":["syn::token::Lt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.MulEq.html\" title=\"struct syn::token::MulEq\">MulEq</a>","synthetic":true,"types":["syn::token::MulEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Ne.html\" title=\"struct syn::token::Ne\">Ne</a>","synthetic":true,"types":["syn::token::Ne"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Or.html\" title=\"struct syn::token::Or\">Or</a>","synthetic":true,"types":["syn::token::Or"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.OrEq.html\" title=\"struct syn::token::OrEq\">OrEq</a>","synthetic":true,"types":["syn::token::OrEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.OrOr.html\" title=\"struct syn::token::OrOr\">OrOr</a>","synthetic":true,"types":["syn::token::OrOr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Pound.html\" title=\"struct syn::token::Pound\">Pound</a>","synthetic":true,"types":["syn::token::Pound"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Question.html\" title=\"struct syn::token::Question\">Question</a>","synthetic":true,"types":["syn::token::Question"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.RArrow.html\" title=\"struct syn::token::RArrow\">RArrow</a>","synthetic":true,"types":["syn::token::RArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.LArrow.html\" title=\"struct syn::token::LArrow\">LArrow</a>","synthetic":true,"types":["syn::token::LArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Rem.html\" title=\"struct syn::token::Rem\">Rem</a>","synthetic":true,"types":["syn::token::Rem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.RemEq.html\" title=\"struct syn::token::RemEq\">RemEq</a>","synthetic":true,"types":["syn::token::RemEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.FatArrow.html\" title=\"struct syn::token::FatArrow\">FatArrow</a>","synthetic":true,"types":["syn::token::FatArrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Semi.html\" title=\"struct syn::token::Semi\">Semi</a>","synthetic":true,"types":["syn::token::Semi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Shl.html\" title=\"struct syn::token::Shl\">Shl</a>","synthetic":true,"types":["syn::token::Shl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.ShlEq.html\" title=\"struct syn::token::ShlEq\">ShlEq</a>","synthetic":true,"types":["syn::token::ShlEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Shr.html\" title=\"struct syn::token::Shr\">Shr</a>","synthetic":true,"types":["syn::token::Shr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.ShrEq.html\" title=\"struct syn::token::ShrEq\">ShrEq</a>","synthetic":true,"types":["syn::token::ShrEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Star.html\" title=\"struct syn::token::Star\">Star</a>","synthetic":true,"types":["syn::token::Star"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Sub.html\" title=\"struct syn::token::Sub\">Sub</a>","synthetic":true,"types":["syn::token::Sub"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.SubEq.html\" title=\"struct syn::token::SubEq\">SubEq</a>","synthetic":true,"types":["syn::token::SubEq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Tilde.html\" title=\"struct syn::token::Tilde\">Tilde</a>","synthetic":true,"types":["syn::token::Tilde"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Brace.html\" title=\"struct syn::token::Brace\">Brace</a>","synthetic":true,"types":["syn::token::Brace"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Bracket.html\" title=\"struct syn::token::Bracket\">Bracket</a>","synthetic":true,"types":["syn::token::Bracket"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Paren.html\" title=\"struct syn::token::Paren\">Paren</a>","synthetic":true,"types":["syn::token::Paren"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/token/struct.Group.html\" title=\"struct syn::token::Group\">Group</a>","synthetic":true,"types":["syn::token::Group"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Attribute.html\" title=\"struct syn::Attribute\">Attribute</a>","synthetic":true,"types":["syn::attr::Attribute"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.AttrStyle.html\" title=\"enum syn::AttrStyle\">AttrStyle</a>","synthetic":true,"types":["syn::attr::AttrStyle"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Meta.html\" title=\"enum syn::Meta\">Meta</a>","synthetic":true,"types":["syn::attr::Meta"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.MetaList.html\" title=\"struct syn::MetaList\">MetaList</a>","synthetic":true,"types":["syn::attr::MetaList"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.MetaNameValue.html\" title=\"struct syn::MetaNameValue\">MetaNameValue</a>","synthetic":true,"types":["syn::attr::MetaNameValue"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.NestedMeta.html\" title=\"enum syn::NestedMeta\">NestedMeta</a>","synthetic":true,"types":["syn::attr::NestedMeta"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Variant.html\" title=\"struct syn::Variant\">Variant</a>","synthetic":true,"types":["syn::data::Variant"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Fields.html\" title=\"enum syn::Fields\">Fields</a>","synthetic":true,"types":["syn::data::Fields"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldsNamed.html\" title=\"struct syn::FieldsNamed\">FieldsNamed</a>","synthetic":true,"types":["syn::data::FieldsNamed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldsUnnamed.html\" title=\"struct syn::FieldsUnnamed\">FieldsUnnamed</a>","synthetic":true,"types":["syn::data::FieldsUnnamed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Field.html\" title=\"struct syn::Field\">Field</a>","synthetic":true,"types":["syn::data::Field"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Visibility.html\" title=\"enum syn::Visibility\">Visibility</a>","synthetic":true,"types":["syn::data::Visibility"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisPublic.html\" title=\"struct syn::VisPublic\">VisPublic</a>","synthetic":true,"types":["syn::data::VisPublic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisCrate.html\" title=\"struct syn::VisCrate\">VisCrate</a>","synthetic":true,"types":["syn::data::VisCrate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.VisRestricted.html\" title=\"struct syn::VisRestricted\">VisRestricted</a>","synthetic":true,"types":["syn::data::VisRestricted"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Expr.html\" title=\"enum syn::Expr\">Expr</a>","synthetic":true,"types":["syn::expr::Expr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprArray.html\" title=\"struct syn::ExprArray\">ExprArray</a>","synthetic":true,"types":["syn::expr::ExprArray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAssign.html\" title=\"struct syn::ExprAssign\">ExprAssign</a>","synthetic":true,"types":["syn::expr::ExprAssign"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAssignOp.html\" title=\"struct syn::ExprAssignOp\">ExprAssignOp</a>","synthetic":true,"types":["syn::expr::ExprAssignOp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAsync.html\" title=\"struct syn::ExprAsync\">ExprAsync</a>","synthetic":true,"types":["syn::expr::ExprAsync"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprAwait.html\" title=\"struct syn::ExprAwait\">ExprAwait</a>","synthetic":true,"types":["syn::expr::ExprAwait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBinary.html\" title=\"struct syn::ExprBinary\">ExprBinary</a>","synthetic":true,"types":["syn::expr::ExprBinary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBlock.html\" title=\"struct syn::ExprBlock\">ExprBlock</a>","synthetic":true,"types":["syn::expr::ExprBlock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBox.html\" title=\"struct syn::ExprBox\">ExprBox</a>","synthetic":true,"types":["syn::expr::ExprBox"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprBreak.html\" title=\"struct syn::ExprBreak\">ExprBreak</a>","synthetic":true,"types":["syn::expr::ExprBreak"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprCall.html\" title=\"struct syn::ExprCall\">ExprCall</a>","synthetic":true,"types":["syn::expr::ExprCall"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprCast.html\" title=\"struct syn::ExprCast\">ExprCast</a>","synthetic":true,"types":["syn::expr::ExprCast"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprClosure.html\" title=\"struct syn::ExprClosure\">ExprClosure</a>","synthetic":true,"types":["syn::expr::ExprClosure"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprContinue.html\" title=\"struct syn::ExprContinue\">ExprContinue</a>","synthetic":true,"types":["syn::expr::ExprContinue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprField.html\" title=\"struct syn::ExprField\">ExprField</a>","synthetic":true,"types":["syn::expr::ExprField"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprForLoop.html\" title=\"struct syn::ExprForLoop\">ExprForLoop</a>","synthetic":true,"types":["syn::expr::ExprForLoop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprGroup.html\" title=\"struct syn::ExprGroup\">ExprGroup</a>","synthetic":true,"types":["syn::expr::ExprGroup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprIf.html\" title=\"struct syn::ExprIf\">ExprIf</a>","synthetic":true,"types":["syn::expr::ExprIf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprIndex.html\" title=\"struct syn::ExprIndex\">ExprIndex</a>","synthetic":true,"types":["syn::expr::ExprIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLet.html\" title=\"struct syn::ExprLet\">ExprLet</a>","synthetic":true,"types":["syn::expr::ExprLet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLit.html\" title=\"struct syn::ExprLit\">ExprLit</a>","synthetic":true,"types":["syn::expr::ExprLit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprLoop.html\" title=\"struct syn::ExprLoop\">ExprLoop</a>","synthetic":true,"types":["syn::expr::ExprLoop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMacro.html\" title=\"struct syn::ExprMacro\">ExprMacro</a>","synthetic":true,"types":["syn::expr::ExprMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMatch.html\" title=\"struct syn::ExprMatch\">ExprMatch</a>","synthetic":true,"types":["syn::expr::ExprMatch"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprMethodCall.html\" title=\"struct syn::ExprMethodCall\">ExprMethodCall</a>","synthetic":true,"types":["syn::expr::ExprMethodCall"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprParen.html\" title=\"struct syn::ExprParen\">ExprParen</a>","synthetic":true,"types":["syn::expr::ExprParen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprPath.html\" title=\"struct syn::ExprPath\">ExprPath</a>","synthetic":true,"types":["syn::expr::ExprPath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprRange.html\" title=\"struct syn::ExprRange\">ExprRange</a>","synthetic":true,"types":["syn::expr::ExprRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprReference.html\" title=\"struct syn::ExprReference\">ExprReference</a>","synthetic":true,"types":["syn::expr::ExprReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprRepeat.html\" title=\"struct syn::ExprRepeat\">ExprRepeat</a>","synthetic":true,"types":["syn::expr::ExprRepeat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprReturn.html\" title=\"struct syn::ExprReturn\">ExprReturn</a>","synthetic":true,"types":["syn::expr::ExprReturn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprStruct.html\" title=\"struct syn::ExprStruct\">ExprStruct</a>","synthetic":true,"types":["syn::expr::ExprStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTry.html\" title=\"struct syn::ExprTry\">ExprTry</a>","synthetic":true,"types":["syn::expr::ExprTry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTryBlock.html\" title=\"struct syn::ExprTryBlock\">ExprTryBlock</a>","synthetic":true,"types":["syn::expr::ExprTryBlock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprTuple.html\" title=\"struct syn::ExprTuple\">ExprTuple</a>","synthetic":true,"types":["syn::expr::ExprTuple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprType.html\" title=\"struct syn::ExprType\">ExprType</a>","synthetic":true,"types":["syn::expr::ExprType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprUnary.html\" title=\"struct syn::ExprUnary\">ExprUnary</a>","synthetic":true,"types":["syn::expr::ExprUnary"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprUnsafe.html\" title=\"struct syn::ExprUnsafe\">ExprUnsafe</a>","synthetic":true,"types":["syn::expr::ExprUnsafe"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprWhile.html\" title=\"struct syn::ExprWhile\">ExprWhile</a>","synthetic":true,"types":["syn::expr::ExprWhile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ExprYield.html\" title=\"struct syn::ExprYield\">ExprYield</a>","synthetic":true,"types":["syn::expr::ExprYield"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Member.html\" title=\"enum syn::Member\">Member</a>","synthetic":true,"types":["syn::expr::Member"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Index.html\" title=\"struct syn::Index\">Index</a>","synthetic":true,"types":["syn::expr::Index"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.MethodTurbofish.html\" title=\"struct syn::MethodTurbofish\">MethodTurbofish</a>","synthetic":true,"types":["syn::expr::MethodTurbofish"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericMethodArgument.html\" title=\"enum syn::GenericMethodArgument\">GenericMethodArgument</a>","synthetic":true,"types":["syn::expr::GenericMethodArgument"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldValue.html\" title=\"struct syn::FieldValue\">FieldValue</a>","synthetic":true,"types":["syn::expr::FieldValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Label.html\" title=\"struct syn::Label\">Label</a>","synthetic":true,"types":["syn::expr::Label"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Arm.html\" title=\"struct syn::Arm\">Arm</a>","synthetic":true,"types":["syn::expr::Arm"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.RangeLimits.html\" title=\"enum syn::RangeLimits\">RangeLimits</a>","synthetic":true,"types":["syn::expr::RangeLimits"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Generics.html\" title=\"struct syn::Generics\">Generics</a>","synthetic":true,"types":["syn::generics::Generics"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericParam.html\" title=\"enum syn::GenericParam\">GenericParam</a>","synthetic":true,"types":["syn::generics::GenericParam"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeParam.html\" title=\"struct syn::TypeParam\">TypeParam</a>","synthetic":true,"types":["syn::generics::TypeParam"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LifetimeDef.html\" title=\"struct syn::LifetimeDef\">LifetimeDef</a>","synthetic":true,"types":["syn::generics::LifetimeDef"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ConstParam.html\" title=\"struct syn::ConstParam\">ConstParam</a>","synthetic":true,"types":["syn::generics::ConstParam"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.ImplGenerics.html\" title=\"struct syn::ImplGenerics\">ImplGenerics</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::ImplGenerics"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.TypeGenerics.html\" title=\"struct syn::TypeGenerics\">TypeGenerics</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::TypeGenerics"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/struct.Turbofish.html\" title=\"struct syn::Turbofish\">Turbofish</a>&lt;'a&gt;","synthetic":true,"types":["syn::generics::Turbofish"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.BoundLifetimes.html\" title=\"struct syn::BoundLifetimes\">BoundLifetimes</a>","synthetic":true,"types":["syn::generics::BoundLifetimes"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.TypeParamBound.html\" title=\"enum syn::TypeParamBound\">TypeParamBound</a>","synthetic":true,"types":["syn::generics::TypeParamBound"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitBound.html\" title=\"struct syn::TraitBound\">TraitBound</a>","synthetic":true,"types":["syn::generics::TraitBound"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.TraitBoundModifier.html\" title=\"enum syn::TraitBoundModifier\">TraitBoundModifier</a>","synthetic":true,"types":["syn::generics::TraitBoundModifier"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.WhereClause.html\" title=\"struct syn::WhereClause\">WhereClause</a>","synthetic":true,"types":["syn::generics::WhereClause"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.WherePredicate.html\" title=\"enum syn::WherePredicate\">WherePredicate</a>","synthetic":true,"types":["syn::generics::WherePredicate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateType.html\" title=\"struct syn::PredicateType\">PredicateType</a>","synthetic":true,"types":["syn::generics::PredicateType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateLifetime.html\" title=\"struct syn::PredicateLifetime\">PredicateLifetime</a>","synthetic":true,"types":["syn::generics::PredicateLifetime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PredicateEq.html\" title=\"struct syn::PredicateEq\">PredicateEq</a>","synthetic":true,"types":["syn::generics::PredicateEq"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Item.html\" title=\"enum syn::Item\">Item</a>","synthetic":true,"types":["syn::item::Item"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemConst.html\" title=\"struct syn::ItemConst\">ItemConst</a>","synthetic":true,"types":["syn::item::ItemConst"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemEnum.html\" title=\"struct syn::ItemEnum\">ItemEnum</a>","synthetic":true,"types":["syn::item::ItemEnum"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemExternCrate.html\" title=\"struct syn::ItemExternCrate\">ItemExternCrate</a>","synthetic":true,"types":["syn::item::ItemExternCrate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemFn.html\" title=\"struct syn::ItemFn\">ItemFn</a>","synthetic":true,"types":["syn::item::ItemFn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemForeignMod.html\" title=\"struct syn::ItemForeignMod\">ItemForeignMod</a>","synthetic":true,"types":["syn::item::ItemForeignMod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemImpl.html\" title=\"struct syn::ItemImpl\">ItemImpl</a>","synthetic":true,"types":["syn::item::ItemImpl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemMacro.html\" title=\"struct syn::ItemMacro\">ItemMacro</a>","synthetic":true,"types":["syn::item::ItemMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemMacro2.html\" title=\"struct syn::ItemMacro2\">ItemMacro2</a>","synthetic":true,"types":["syn::item::ItemMacro2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemMod.html\" title=\"struct syn::ItemMod\">ItemMod</a>","synthetic":true,"types":["syn::item::ItemMod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemStatic.html\" title=\"struct syn::ItemStatic\">ItemStatic</a>","synthetic":true,"types":["syn::item::ItemStatic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemStruct.html\" title=\"struct syn::ItemStruct\">ItemStruct</a>","synthetic":true,"types":["syn::item::ItemStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemTrait.html\" title=\"struct syn::ItemTrait\">ItemTrait</a>","synthetic":true,"types":["syn::item::ItemTrait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemTraitAlias.html\" title=\"struct syn::ItemTraitAlias\">ItemTraitAlias</a>","synthetic":true,"types":["syn::item::ItemTraitAlias"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemType.html\" title=\"struct syn::ItemType\">ItemType</a>","synthetic":true,"types":["syn::item::ItemType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemUnion.html\" title=\"struct syn::ItemUnion\">ItemUnion</a>","synthetic":true,"types":["syn::item::ItemUnion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ItemUse.html\" title=\"struct syn::ItemUse\">ItemUse</a>","synthetic":true,"types":["syn::item::ItemUse"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.UseTree.html\" title=\"enum syn::UseTree\">UseTree</a>","synthetic":true,"types":["syn::item::UseTree"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UsePath.html\" title=\"struct syn::UsePath\">UsePath</a>","synthetic":true,"types":["syn::item::UsePath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseName.html\" title=\"struct syn::UseName\">UseName</a>","synthetic":true,"types":["syn::item::UseName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseRename.html\" title=\"struct syn::UseRename\">UseRename</a>","synthetic":true,"types":["syn::item::UseRename"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseGlob.html\" title=\"struct syn::UseGlob\">UseGlob</a>","synthetic":true,"types":["syn::item::UseGlob"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.UseGroup.html\" title=\"struct syn::UseGroup\">UseGroup</a>","synthetic":true,"types":["syn::item::UseGroup"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.ForeignItem.html\" title=\"enum syn::ForeignItem\">ForeignItem</a>","synthetic":true,"types":["syn::item::ForeignItem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemFn.html\" title=\"struct syn::ForeignItemFn\">ForeignItemFn</a>","synthetic":true,"types":["syn::item::ForeignItemFn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemStatic.html\" title=\"struct syn::ForeignItemStatic\">ForeignItemStatic</a>","synthetic":true,"types":["syn::item::ForeignItemStatic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemType.html\" title=\"struct syn::ForeignItemType\">ForeignItemType</a>","synthetic":true,"types":["syn::item::ForeignItemType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ForeignItemMacro.html\" title=\"struct syn::ForeignItemMacro\">ForeignItemMacro</a>","synthetic":true,"types":["syn::item::ForeignItemMacro"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.TraitItem.html\" title=\"enum syn::TraitItem\">TraitItem</a>","synthetic":true,"types":["syn::item::TraitItem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemConst.html\" title=\"struct syn::TraitItemConst\">TraitItemConst</a>","synthetic":true,"types":["syn::item::TraitItemConst"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemMethod.html\" title=\"struct syn::TraitItemMethod\">TraitItemMethod</a>","synthetic":true,"types":["syn::item::TraitItemMethod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemType.html\" title=\"struct syn::TraitItemType\">TraitItemType</a>","synthetic":true,"types":["syn::item::TraitItemType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TraitItemMacro.html\" title=\"struct syn::TraitItemMacro\">TraitItemMacro</a>","synthetic":true,"types":["syn::item::TraitItemMacro"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.ImplItem.html\" title=\"enum syn::ImplItem\">ImplItem</a>","synthetic":true,"types":["syn::item::ImplItem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemConst.html\" title=\"struct syn::ImplItemConst\">ImplItemConst</a>","synthetic":true,"types":["syn::item::ImplItemConst"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemMethod.html\" title=\"struct syn::ImplItemMethod\">ImplItemMethod</a>","synthetic":true,"types":["syn::item::ImplItemMethod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemType.html\" title=\"struct syn::ImplItemType\">ImplItemType</a>","synthetic":true,"types":["syn::item::ImplItemType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ImplItemMacro.html\" title=\"struct syn::ImplItemMacro\">ImplItemMacro</a>","synthetic":true,"types":["syn::item::ImplItemMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Signature.html\" title=\"struct syn::Signature\">Signature</a>","synthetic":true,"types":["syn::item::Signature"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.FnArg.html\" title=\"enum syn::FnArg\">FnArg</a>","synthetic":true,"types":["syn::item::FnArg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Receiver.html\" title=\"struct syn::Receiver\">Receiver</a>","synthetic":true,"types":["syn::item::Receiver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.File.html\" title=\"struct syn::File\">File</a>","synthetic":true,"types":["syn::file::File"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Lifetime.html\" title=\"struct syn::Lifetime\">Lifetime</a>","synthetic":true,"types":["syn::lifetime::Lifetime"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Lit.html\" title=\"enum syn::Lit\">Lit</a>","synthetic":true,"types":["syn::lit::Lit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitStr.html\" title=\"struct syn::LitStr\">LitStr</a>","synthetic":true,"types":["syn::lit::LitStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitByteStr.html\" title=\"struct syn::LitByteStr\">LitByteStr</a>","synthetic":true,"types":["syn::lit::LitByteStr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitByte.html\" title=\"struct syn::LitByte\">LitByte</a>","synthetic":true,"types":["syn::lit::LitByte"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitChar.html\" title=\"struct syn::LitChar\">LitChar</a>","synthetic":true,"types":["syn::lit::LitChar"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitInt.html\" title=\"struct syn::LitInt\">LitInt</a>","synthetic":true,"types":["syn::lit::LitInt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitFloat.html\" title=\"struct syn::LitFloat\">LitFloat</a>","synthetic":true,"types":["syn::lit::LitFloat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.LitBool.html\" title=\"struct syn::LitBool\">LitBool</a>","synthetic":true,"types":["syn::lit::LitBool"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.StrStyle.html\" title=\"enum syn::StrStyle\">StrStyle</a>","synthetic":true,"types":["syn::lit::StrStyle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Macro.html\" title=\"struct syn::Macro\">Macro</a>","synthetic":true,"types":["syn::mac::Macro"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.MacroDelimiter.html\" title=\"enum syn::MacroDelimiter\">MacroDelimiter</a>","synthetic":true,"types":["syn::mac::MacroDelimiter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DeriveInput.html\" title=\"struct syn::DeriveInput\">DeriveInput</a>","synthetic":true,"types":["syn::derive::DeriveInput"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Data.html\" title=\"enum syn::Data\">Data</a>","synthetic":true,"types":["syn::derive::Data"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataStruct.html\" title=\"struct syn::DataStruct\">DataStruct</a>","synthetic":true,"types":["syn::derive::DataStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataEnum.html\" title=\"struct syn::DataEnum\">DataEnum</a>","synthetic":true,"types":["syn::derive::DataEnum"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.DataUnion.html\" title=\"struct syn::DataUnion\">DataUnion</a>","synthetic":true,"types":["syn::derive::DataUnion"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.BinOp.html\" title=\"enum syn::BinOp\">BinOp</a>","synthetic":true,"types":["syn::op::BinOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.UnOp.html\" title=\"enum syn::UnOp\">UnOp</a>","synthetic":true,"types":["syn::op::UnOp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Block.html\" title=\"struct syn::Block\">Block</a>","synthetic":true,"types":["syn::stmt::Block"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Stmt.html\" title=\"enum syn::Stmt\">Stmt</a>","synthetic":true,"types":["syn::stmt::Stmt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Local.html\" title=\"struct syn::Local\">Local</a>","synthetic":true,"types":["syn::stmt::Local"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Type.html\" title=\"enum syn::Type\">Type</a>","synthetic":true,"types":["syn::ty::Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeArray.html\" title=\"struct syn::TypeArray\">TypeArray</a>","synthetic":true,"types":["syn::ty::TypeArray"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeBareFn.html\" title=\"struct syn::TypeBareFn\">TypeBareFn</a>","synthetic":true,"types":["syn::ty::TypeBareFn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeGroup.html\" title=\"struct syn::TypeGroup\">TypeGroup</a>","synthetic":true,"types":["syn::ty::TypeGroup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeImplTrait.html\" title=\"struct syn::TypeImplTrait\">TypeImplTrait</a>","synthetic":true,"types":["syn::ty::TypeImplTrait"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeInfer.html\" title=\"struct syn::TypeInfer\">TypeInfer</a>","synthetic":true,"types":["syn::ty::TypeInfer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeMacro.html\" title=\"struct syn::TypeMacro\">TypeMacro</a>","synthetic":true,"types":["syn::ty::TypeMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeNever.html\" title=\"struct syn::TypeNever\">TypeNever</a>","synthetic":true,"types":["syn::ty::TypeNever"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeParen.html\" title=\"struct syn::TypeParen\">TypeParen</a>","synthetic":true,"types":["syn::ty::TypeParen"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypePath.html\" title=\"struct syn::TypePath\">TypePath</a>","synthetic":true,"types":["syn::ty::TypePath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypePtr.html\" title=\"struct syn::TypePtr\">TypePtr</a>","synthetic":true,"types":["syn::ty::TypePtr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeReference.html\" title=\"struct syn::TypeReference\">TypeReference</a>","synthetic":true,"types":["syn::ty::TypeReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeSlice.html\" title=\"struct syn::TypeSlice\">TypeSlice</a>","synthetic":true,"types":["syn::ty::TypeSlice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeTraitObject.html\" title=\"struct syn::TypeTraitObject\">TypeTraitObject</a>","synthetic":true,"types":["syn::ty::TypeTraitObject"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.TypeTuple.html\" title=\"struct syn::TypeTuple\">TypeTuple</a>","synthetic":true,"types":["syn::ty::TypeTuple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Abi.html\" title=\"struct syn::Abi\">Abi</a>","synthetic":true,"types":["syn::ty::Abi"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.BareFnArg.html\" title=\"struct syn::BareFnArg\">BareFnArg</a>","synthetic":true,"types":["syn::ty::BareFnArg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Variadic.html\" title=\"struct syn::Variadic\">Variadic</a>","synthetic":true,"types":["syn::ty::Variadic"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.ReturnType.html\" title=\"enum syn::ReturnType\">ReturnType</a>","synthetic":true,"types":["syn::ty::ReturnType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.Pat.html\" title=\"enum syn::Pat\">Pat</a>","synthetic":true,"types":["syn::pat::Pat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatBox.html\" title=\"struct syn::PatBox\">PatBox</a>","synthetic":true,"types":["syn::pat::PatBox"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatIdent.html\" title=\"struct syn::PatIdent\">PatIdent</a>","synthetic":true,"types":["syn::pat::PatIdent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatLit.html\" title=\"struct syn::PatLit\">PatLit</a>","synthetic":true,"types":["syn::pat::PatLit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatMacro.html\" title=\"struct syn::PatMacro\">PatMacro</a>","synthetic":true,"types":["syn::pat::PatMacro"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatOr.html\" title=\"struct syn::PatOr\">PatOr</a>","synthetic":true,"types":["syn::pat::PatOr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatPath.html\" title=\"struct syn::PatPath\">PatPath</a>","synthetic":true,"types":["syn::pat::PatPath"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatRange.html\" title=\"struct syn::PatRange\">PatRange</a>","synthetic":true,"types":["syn::pat::PatRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatReference.html\" title=\"struct syn::PatReference\">PatReference</a>","synthetic":true,"types":["syn::pat::PatReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatRest.html\" title=\"struct syn::PatRest\">PatRest</a>","synthetic":true,"types":["syn::pat::PatRest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatSlice.html\" title=\"struct syn::PatSlice\">PatSlice</a>","synthetic":true,"types":["syn::pat::PatSlice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatStruct.html\" title=\"struct syn::PatStruct\">PatStruct</a>","synthetic":true,"types":["syn::pat::PatStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatTuple.html\" title=\"struct syn::PatTuple\">PatTuple</a>","synthetic":true,"types":["syn::pat::PatTuple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatTupleStruct.html\" title=\"struct syn::PatTupleStruct\">PatTupleStruct</a>","synthetic":true,"types":["syn::pat::PatTupleStruct"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatType.html\" title=\"struct syn::PatType\">PatType</a>","synthetic":true,"types":["syn::pat::PatType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PatWild.html\" title=\"struct syn::PatWild\">PatWild</a>","synthetic":true,"types":["syn::pat::PatWild"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.FieldPat.html\" title=\"struct syn::FieldPat\">FieldPat</a>","synthetic":true,"types":["syn::pat::FieldPat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Path.html\" title=\"struct syn::Path\">Path</a>","synthetic":true,"types":["syn::path::Path"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.PathSegment.html\" title=\"struct syn::PathSegment\">PathSegment</a>","synthetic":true,"types":["syn::path::PathSegment"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.PathArguments.html\" title=\"enum syn::PathArguments\">PathArguments</a>","synthetic":true,"types":["syn::path::PathArguments"]},{"text":"impl Freeze for <a class=\"enum\" href=\"syn/enum.GenericArgument.html\" title=\"enum syn::GenericArgument\">GenericArgument</a>","synthetic":true,"types":["syn::path::GenericArgument"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.AngleBracketedGenericArguments.html\" title=\"struct syn::AngleBracketedGenericArguments\">AngleBracketedGenericArguments</a>","synthetic":true,"types":["syn::path::AngleBracketedGenericArguments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Binding.html\" title=\"struct syn::Binding\">Binding</a>","synthetic":true,"types":["syn::path::Binding"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.Constraint.html\" title=\"struct syn::Constraint\">Constraint</a>","synthetic":true,"types":["syn::path::Constraint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.ParenthesizedGenericArguments.html\" title=\"struct syn::ParenthesizedGenericArguments\">ParenthesizedGenericArguments</a>","synthetic":true,"types":["syn::path::ParenthesizedGenericArguments"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/struct.QSelf.html\" title=\"struct syn::QSelf\">QSelf</a>","synthetic":true,"types":["syn::path::QSelf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/buffer/struct.TokenBuffer.html\" title=\"struct syn::buffer::TokenBuffer\">TokenBuffer</a>","synthetic":true,"types":["syn::buffer::TokenBuffer"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"syn/buffer/struct.Cursor.html\" title=\"struct syn::buffer::Cursor\">Cursor</a>&lt;'a&gt;","synthetic":true,"types":["syn::buffer::Cursor"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Punctuated.html\" title=\"struct syn::punctuated::Punctuated\">Punctuated</a>&lt;T, P&gt;","synthetic":true,"types":["syn::punctuated::Punctuated"]},{"text":"impl&lt;'a, T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Pairs.html\" title=\"struct syn::punctuated::Pairs\">Pairs</a>&lt;'a, T, P&gt;","synthetic":true,"types":["syn::punctuated::Pairs"]},{"text":"impl&lt;'a, T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.PairsMut.html\" title=\"struct syn::punctuated::PairsMut\">PairsMut</a>&lt;'a, T, P&gt;","synthetic":true,"types":["syn::punctuated::PairsMut"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IntoPairs.html\" title=\"struct syn::punctuated::IntoPairs\">IntoPairs</a>&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["syn::punctuated::IntoPairs"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IntoIter.html\" title=\"struct syn::punctuated::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":true,"types":["syn::punctuated::IntoIter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.Iter.html\" title=\"struct syn::punctuated::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["syn::punctuated::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"syn/punctuated/struct.IterMut.html\" title=\"struct syn::punctuated::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["syn::punctuated::IterMut"]},{"text":"impl&lt;T, P&gt; Freeze for <a class=\"enum\" href=\"syn/punctuated/enum.Pair.html\" title=\"enum syn::punctuated::Pair\">Pair</a>&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["syn::punctuated::Pair"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"syn/parse/struct.Lookahead1.html\" title=\"struct syn::parse::Lookahead1\">Lookahead1</a>&lt;'a&gt;","synthetic":true,"types":["syn::lookahead::Lookahead1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/parse/struct.Error.html\" title=\"struct syn::parse::Error\">Error</a>","synthetic":true,"types":["syn::error::Error"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"syn/parse/struct.ParseBuffer.html\" title=\"struct syn::parse::ParseBuffer\">ParseBuffer</a>&lt;'a&gt;","synthetic":true,"types":["syn::parse::ParseBuffer"]},{"text":"impl&lt;'c, 'a&gt; Freeze for <a class=\"struct\" href=\"syn/parse/struct.StepCursor.html\" title=\"struct syn::parse::StepCursor\">StepCursor</a>&lt;'c, 'a&gt;","synthetic":true,"types":["syn::parse::StepCursor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"syn/parse/struct.Nothing.html\" title=\"struct syn::parse::Nothing\">Nothing</a>","synthetic":true,"types":["syn::parse::Nothing"]}];
implementors["thousands"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"thousands/policies/struct.SeparatorPolicy.html\" title=\"struct thousands::policies::SeparatorPolicy\">SeparatorPolicy</a>&lt;'a&gt;","synthetic":true,"types":["thousands::policies::SeparatorPolicy"]}];
implementors["threadpool"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"threadpool/struct.Builder.html\" title=\"struct threadpool::Builder\">Builder</a>","synthetic":true,"types":["threadpool::Builder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"threadpool/struct.ThreadPool.html\" title=\"struct threadpool::ThreadPool\">ThreadPool</a>","synthetic":true,"types":["threadpool::ThreadPool"]}];
implementors["tiff"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"tiff/decoder/ifd/enum.Value.html\" title=\"enum tiff::decoder::ifd::Value\">Value</a>","synthetic":true,"types":["tiff::decoder::ifd::Value"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/decoder/ifd/struct.Entry.html\" title=\"struct tiff::decoder::ifd::Entry\">Entry</a>","synthetic":true,"types":["tiff::decoder::ifd::Entry"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tiff/decoder/enum.DecodingResult.html\" title=\"enum tiff::decoder::DecodingResult\">DecodingResult</a>","synthetic":true,"types":["tiff::decoder::DecodingResult"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"tiff/decoder/enum.DecodingBuffer.html\" title=\"enum tiff::decoder::DecodingBuffer\">DecodingBuffer</a>&lt;'a&gt;","synthetic":true,"types":["tiff::decoder::DecodingBuffer"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tiff/decoder/enum.ChunkType.html\" title=\"enum tiff::decoder::ChunkType\">ChunkType</a>","synthetic":true,"types":["tiff::decoder::ChunkType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/decoder/struct.Limits.html\" title=\"struct tiff::decoder::Limits\">Limits</a>","synthetic":true,"types":["tiff::decoder::Limits"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"tiff/decoder/struct.Decoder.html\" title=\"struct tiff::decoder::Decoder\">Decoder</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["tiff::decoder::Decoder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/colortype/struct.Gray8.html\" title=\"struct tiff::encoder::colortype::Gray8\">Gray8</a>","synthetic":true,"types":["tiff::encoder::colortype::Gray8"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/colortype/struct.GrayI8.html\" title=\"struct tiff::encoder::colortype::GrayI8\">GrayI8</a>","synthetic":true,"types":["tiff::encoder::colortype::GrayI8"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/colortype/struct.Gray16.html\" title=\"struct tiff::encoder::colortype::Gray16\">Gray16</a>","synthetic":true,"types":["tiff::encoder::colortype::Gray16"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/colortype/struct.GrayI16.html\" title=\"struct tiff::encoder::colortype::GrayI16\">GrayI16</a>","synthetic":true,"types":["tiff::encoder::colortype::GrayI16"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/colortype/struct.Gray32.html\" title=\"struct tiff::encoder::colortype::Gray32\">Gray32</a>","synthetic":true,"types":["tiff::encoder::colortype::Gray32"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/colortype/struct.GrayI32.html\" title=\"struct tiff::encoder::colortype::GrayI32\">GrayI32</a>","synthetic":true,"types":["tiff::encoder::colortype::GrayI32"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/colortype/struct.Gray32Float.html\" title=\"struct tiff::encoder::colortype::Gray32Float\">Gray32Float</a>","synthetic":true,"types":["tiff::encoder::colortype::Gray32Float"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/colortype/struct.Gray64.html\" title=\"struct tiff::encoder::colortype::Gray64\">Gray64</a>","synthetic":true,"types":["tiff::encoder::colortype::Gray64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/colortype/struct.GrayI64.html\" title=\"struct tiff::encoder::colortype::GrayI64\">GrayI64</a>","synthetic":true,"types":["tiff::encoder::colortype::GrayI64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/colortype/struct.Gray64Float.html\" title=\"struct tiff::encoder::colortype::Gray64Float\">Gray64Float</a>","synthetic":true,"types":["tiff::encoder::colortype::Gray64Float"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/colortype/struct.RGB8.html\" title=\"struct tiff::encoder::colortype::RGB8\">RGB8</a>","synthetic":true,"types":["tiff::encoder::colortype::RGB8"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/colortype/struct.RGB16.html\" title=\"struct tiff::encoder::colortype::RGB16\">RGB16</a>","synthetic":true,"types":["tiff::encoder::colortype::RGB16"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/colortype/struct.RGB32.html\" title=\"struct tiff::encoder::colortype::RGB32\">RGB32</a>","synthetic":true,"types":["tiff::encoder::colortype::RGB32"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/colortype/struct.RGB32Float.html\" title=\"struct tiff::encoder::colortype::RGB32Float\">RGB32Float</a>","synthetic":true,"types":["tiff::encoder::colortype::RGB32Float"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/colortype/struct.RGB64.html\" title=\"struct tiff::encoder::colortype::RGB64\">RGB64</a>","synthetic":true,"types":["tiff::encoder::colortype::RGB64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/colortype/struct.RGB64Float.html\" title=\"struct tiff::encoder::colortype::RGB64Float\">RGB64Float</a>","synthetic":true,"types":["tiff::encoder::colortype::RGB64Float"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/colortype/struct.RGBA8.html\" title=\"struct tiff::encoder::colortype::RGBA8\">RGBA8</a>","synthetic":true,"types":["tiff::encoder::colortype::RGBA8"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/colortype/struct.RGBA16.html\" title=\"struct tiff::encoder::colortype::RGBA16\">RGBA16</a>","synthetic":true,"types":["tiff::encoder::colortype::RGBA16"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/colortype/struct.RGBA32.html\" title=\"struct tiff::encoder::colortype::RGBA32\">RGBA32</a>","synthetic":true,"types":["tiff::encoder::colortype::RGBA32"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/colortype/struct.RGBA32Float.html\" title=\"struct tiff::encoder::colortype::RGBA32Float\">RGBA32Float</a>","synthetic":true,"types":["tiff::encoder::colortype::RGBA32Float"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/colortype/struct.RGBA64.html\" title=\"struct tiff::encoder::colortype::RGBA64\">RGBA64</a>","synthetic":true,"types":["tiff::encoder::colortype::RGBA64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/colortype/struct.RGBA64Float.html\" title=\"struct tiff::encoder::colortype::RGBA64Float\">RGBA64Float</a>","synthetic":true,"types":["tiff::encoder::colortype::RGBA64Float"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/colortype/struct.CMYK8.html\" title=\"struct tiff::encoder::colortype::CMYK8\">CMYK8</a>","synthetic":true,"types":["tiff::encoder::colortype::CMYK8"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/colortype/struct.CMYK16.html\" title=\"struct tiff::encoder::colortype::CMYK16\">CMYK16</a>","synthetic":true,"types":["tiff::encoder::colortype::CMYK16"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/colortype/struct.CMYK32.html\" title=\"struct tiff::encoder::colortype::CMYK32\">CMYK32</a>","synthetic":true,"types":["tiff::encoder::colortype::CMYK32"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/colortype/struct.CMYK32Float.html\" title=\"struct tiff::encoder::colortype::CMYK32Float\">CMYK32Float</a>","synthetic":true,"types":["tiff::encoder::colortype::CMYK32Float"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/colortype/struct.CMYK64.html\" title=\"struct tiff::encoder::colortype::CMYK64\">CMYK64</a>","synthetic":true,"types":["tiff::encoder::colortype::CMYK64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/colortype/struct.CMYK64Float.html\" title=\"struct tiff::encoder::colortype::CMYK64Float\">CMYK64Float</a>","synthetic":true,"types":["tiff::encoder::colortype::CMYK64Float"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/compression/struct.Deflate.html\" title=\"struct tiff::encoder::compression::Deflate\">Deflate</a>","synthetic":true,"types":["tiff::encoder::compression::deflate::Deflate"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tiff/encoder/compression/enum.DeflateLevel.html\" title=\"enum tiff::encoder::compression::DeflateLevel\">DeflateLevel</a>","synthetic":true,"types":["tiff::encoder::compression::deflate::DeflateLevel"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/compression/struct.Lzw.html\" title=\"struct tiff::encoder::compression::Lzw\">Lzw</a>","synthetic":true,"types":["tiff::encoder::compression::lzw::Lzw"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/compression/struct.Packbits.html\" title=\"struct tiff::encoder::compression::Packbits\">Packbits</a>","synthetic":true,"types":["tiff::encoder::compression::packbits::Packbits"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/compression/struct.Uncompressed.html\" title=\"struct tiff::encoder::compression::Uncompressed\">Uncompressed</a>","synthetic":true,"types":["tiff::encoder::compression::uncompressed::Uncompressed"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tiff/encoder/compression/enum.Compressor.html\" title=\"enum tiff::encoder::compression::Compressor\">Compressor</a>","synthetic":true,"types":["tiff::encoder::compression::Compressor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/struct.Ifd.html\" title=\"struct tiff::encoder::Ifd\">Ifd</a>","synthetic":true,"types":["tiff::encoder::tiff_value::Ifd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/struct.Ifd8.html\" title=\"struct tiff::encoder::Ifd8\">Ifd8</a>","synthetic":true,"types":["tiff::encoder::tiff_value::Ifd8"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/struct.Rational.html\" title=\"struct tiff::encoder::Rational\">Rational</a>","synthetic":true,"types":["tiff::encoder::tiff_value::Rational"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/struct.SRational.html\" title=\"struct tiff::encoder::SRational\">SRational</a>","synthetic":true,"types":["tiff::encoder::tiff_value::SRational"]},{"text":"impl&lt;W, K&gt; Freeze for <a class=\"struct\" href=\"tiff/encoder/struct.TiffEncoder.html\" title=\"struct tiff::encoder::TiffEncoder\">TiffEncoder</a>&lt;W, K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["tiff::encoder::TiffEncoder"]},{"text":"impl&lt;'a, W, K&gt; Freeze for <a class=\"struct\" href=\"tiff/encoder/struct.DirectoryEncoder.html\" title=\"struct tiff::encoder::DirectoryEncoder\">DirectoryEncoder</a>&lt;'a, W, K&gt;","synthetic":true,"types":["tiff::encoder::DirectoryEncoder"]},{"text":"impl&lt;'a, W, C, K, D&gt; Freeze for <a class=\"struct\" href=\"tiff/encoder/struct.ImageEncoder.html\" title=\"struct tiff::encoder::ImageEncoder\">ImageEncoder</a>&lt;'a, W, C, K, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":["tiff::encoder::ImageEncoder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/struct.TiffKindStandard.html\" title=\"struct tiff::encoder::TiffKindStandard\">TiffKindStandard</a>","synthetic":true,"types":["tiff::encoder::TiffKindStandard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tiff/encoder/struct.TiffKindBig.html\" title=\"struct tiff::encoder::TiffKindBig\">TiffKindBig</a>","synthetic":true,"types":["tiff::encoder::TiffKindBig"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tiff/enum.TiffError.html\" title=\"enum tiff::TiffError\">TiffError</a>","synthetic":true,"types":["tiff::error::TiffError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tiff/enum.TiffFormatError.html\" title=\"enum tiff::TiffFormatError\">TiffFormatError</a>","synthetic":true,"types":["tiff::error::TiffFormatError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tiff/enum.TiffUnsupportedError.html\" title=\"enum tiff::TiffUnsupportedError\">TiffUnsupportedError</a>","synthetic":true,"types":["tiff::error::TiffUnsupportedError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tiff/enum.UsageError.html\" title=\"enum tiff::UsageError\">UsageError</a>","synthetic":true,"types":["tiff::error::UsageError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tiff/tags/enum.Tag.html\" title=\"enum tiff::tags::Tag\">Tag</a>","synthetic":true,"types":["tiff::tags::Tag"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tiff/tags/enum.Type.html\" title=\"enum tiff::tags::Type\">Type</a>","synthetic":true,"types":["tiff::tags::Type"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tiff/tags/enum.CompressionMethod.html\" title=\"enum tiff::tags::CompressionMethod\">CompressionMethod</a>","synthetic":true,"types":["tiff::tags::CompressionMethod"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tiff/tags/enum.PhotometricInterpretation.html\" title=\"enum tiff::tags::PhotometricInterpretation\">PhotometricInterpretation</a>","synthetic":true,"types":["tiff::tags::PhotometricInterpretation"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tiff/tags/enum.PlanarConfiguration.html\" title=\"enum tiff::tags::PlanarConfiguration\">PlanarConfiguration</a>","synthetic":true,"types":["tiff::tags::PlanarConfiguration"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tiff/tags/enum.Predictor.html\" title=\"enum tiff::tags::Predictor\">Predictor</a>","synthetic":true,"types":["tiff::tags::Predictor"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tiff/tags/enum.ResolutionUnit.html\" title=\"enum tiff::tags::ResolutionUnit\">ResolutionUnit</a>","synthetic":true,"types":["tiff::tags::ResolutionUnit"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tiff/tags/enum.SampleFormat.html\" title=\"enum tiff::tags::SampleFormat\">SampleFormat</a>","synthetic":true,"types":["tiff::tags::SampleFormat"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tiff/enum.ColorType.html\" title=\"enum tiff::ColorType\">ColorType</a>","synthetic":true,"types":["tiff::ColorType"]}];
implementors["time"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"time/struct.Date.html\" title=\"struct time::Date\">Date</a>","synthetic":true,"types":["time::date::Date"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/struct.Duration.html\" title=\"struct time::Duration\">Duration</a>","synthetic":true,"types":["time::duration::Duration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/error/struct.ComponentRange.html\" title=\"struct time::error::ComponentRange\">ComponentRange</a>","synthetic":true,"types":["time::error::component_range::ComponentRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/error/struct.ConversionRange.html\" title=\"struct time::error::ConversionRange\">ConversionRange</a>","synthetic":true,"types":["time::error::conversion_range::ConversionRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/error/struct.DifferentVariant.html\" title=\"struct time::error::DifferentVariant\">DifferentVariant</a>","synthetic":true,"types":["time::error::different_variant::DifferentVariant"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/error/enum.Format.html\" title=\"enum time::error::Format\">Format</a>","synthetic":true,"types":["time::error::format::Format"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/error/enum.InvalidFormatDescription.html\" title=\"enum time::error::InvalidFormatDescription\">InvalidFormatDescription</a>","synthetic":true,"types":["time::error::invalid_format_description::InvalidFormatDescription"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/error/struct.InvalidVariant.html\" title=\"struct time::error::InvalidVariant\">InvalidVariant</a>","synthetic":true,"types":["time::error::invalid_variant::InvalidVariant"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/error/enum.Parse.html\" title=\"enum time::error::Parse\">Parse</a>","synthetic":true,"types":["time::error::parse::Parse"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/error/enum.ParseFromDescription.html\" title=\"enum time::error::ParseFromDescription\">ParseFromDescription</a>","synthetic":true,"types":["time::error::parse_from_description::ParseFromDescription"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/error/enum.TryFromParsed.html\" title=\"enum time::error::TryFromParsed\">TryFromParsed</a>","synthetic":true,"types":["time::error::try_from_parsed::TryFromParsed"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/error/enum.Error.html\" title=\"enum time::error::Error\">Error</a>","synthetic":true,"types":["time::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/enum.Component.html\" title=\"enum time::format_description::Component\">Component</a>","synthetic":true,"types":["time::format_description::component::Component"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Day.html\" title=\"struct time::format_description::modifier::Day\">Day</a>","synthetic":true,"types":["time::format_description::modifier::Day"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/modifier/enum.MonthRepr.html\" title=\"enum time::format_description::modifier::MonthRepr\">MonthRepr</a>","synthetic":true,"types":["time::format_description::modifier::MonthRepr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Month.html\" title=\"struct time::format_description::modifier::Month\">Month</a>","synthetic":true,"types":["time::format_description::modifier::Month"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Ordinal.html\" title=\"struct time::format_description::modifier::Ordinal\">Ordinal</a>","synthetic":true,"types":["time::format_description::modifier::Ordinal"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/modifier/enum.WeekdayRepr.html\" title=\"enum time::format_description::modifier::WeekdayRepr\">WeekdayRepr</a>","synthetic":true,"types":["time::format_description::modifier::WeekdayRepr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Weekday.html\" title=\"struct time::format_description::modifier::Weekday\">Weekday</a>","synthetic":true,"types":["time::format_description::modifier::Weekday"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/modifier/enum.WeekNumberRepr.html\" title=\"enum time::format_description::modifier::WeekNumberRepr\">WeekNumberRepr</a>","synthetic":true,"types":["time::format_description::modifier::WeekNumberRepr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.WeekNumber.html\" title=\"struct time::format_description::modifier::WeekNumber\">WeekNumber</a>","synthetic":true,"types":["time::format_description::modifier::WeekNumber"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/modifier/enum.YearRepr.html\" title=\"enum time::format_description::modifier::YearRepr\">YearRepr</a>","synthetic":true,"types":["time::format_description::modifier::YearRepr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Year.html\" title=\"struct time::format_description::modifier::Year\">Year</a>","synthetic":true,"types":["time::format_description::modifier::Year"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Hour.html\" title=\"struct time::format_description::modifier::Hour\">Hour</a>","synthetic":true,"types":["time::format_description::modifier::Hour"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Minute.html\" title=\"struct time::format_description::modifier::Minute\">Minute</a>","synthetic":true,"types":["time::format_description::modifier::Minute"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Period.html\" title=\"struct time::format_description::modifier::Period\">Period</a>","synthetic":true,"types":["time::format_description::modifier::Period"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Second.html\" title=\"struct time::format_description::modifier::Second\">Second</a>","synthetic":true,"types":["time::format_description::modifier::Second"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/modifier/enum.SubsecondDigits.html\" title=\"enum time::format_description::modifier::SubsecondDigits\">SubsecondDigits</a>","synthetic":true,"types":["time::format_description::modifier::SubsecondDigits"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.Subsecond.html\" title=\"struct time::format_description::modifier::Subsecond\">Subsecond</a>","synthetic":true,"types":["time::format_description::modifier::Subsecond"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.OffsetHour.html\" title=\"struct time::format_description::modifier::OffsetHour\">OffsetHour</a>","synthetic":true,"types":["time::format_description::modifier::OffsetHour"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.OffsetMinute.html\" title=\"struct time::format_description::modifier::OffsetMinute\">OffsetMinute</a>","synthetic":true,"types":["time::format_description::modifier::OffsetMinute"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/modifier/struct.OffsetSecond.html\" title=\"struct time::format_description::modifier::OffsetSecond\">OffsetSecond</a>","synthetic":true,"types":["time::format_description::modifier::OffsetSecond"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/modifier/enum.Padding.html\" title=\"enum time::format_description::modifier::Padding\">Padding</a>","synthetic":true,"types":["time::format_description::modifier::Padding"]},{"text":"impl&lt;const CONFIG:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.1/std/primitive.u128.html\">u128</a>&gt; Freeze for <a class=\"struct\" href=\"time/format_description/well_known/struct.Iso8601.html\" title=\"struct time::format_description::well_known::Iso8601\">Iso8601</a>&lt;CONFIG&gt;","synthetic":true,"types":["time::format_description::well_known::iso8601::Iso8601"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/well_known/iso8601/enum.FormattedComponents.html\" title=\"enum time::format_description::well_known::iso8601::FormattedComponents\">FormattedComponents</a>","synthetic":true,"types":["time::format_description::well_known::iso8601::FormattedComponents"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/well_known/iso8601/enum.DateKind.html\" title=\"enum time::format_description::well_known::iso8601::DateKind\">DateKind</a>","synthetic":true,"types":["time::format_description::well_known::iso8601::DateKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/well_known/iso8601/enum.TimePrecision.html\" title=\"enum time::format_description::well_known::iso8601::TimePrecision\">TimePrecision</a>","synthetic":true,"types":["time::format_description::well_known::iso8601::TimePrecision"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/format_description/well_known/iso8601/enum.OffsetPrecision.html\" title=\"enum time::format_description::well_known::iso8601::OffsetPrecision\">OffsetPrecision</a>","synthetic":true,"types":["time::format_description::well_known::iso8601::OffsetPrecision"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/well_known/iso8601/struct.Config.html\" title=\"struct time::format_description::well_known::iso8601::Config\">Config</a>","synthetic":true,"types":["time::format_description::well_known::iso8601::Config"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/well_known/struct.Rfc2822.html\" title=\"struct time::format_description::well_known::Rfc2822\">Rfc2822</a>","synthetic":true,"types":["time::format_description::well_known::rfc2822::Rfc2822"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/format_description/well_known/struct.Rfc3339.html\" title=\"struct time::format_description::well_known::Rfc3339\">Rfc3339</a>","synthetic":true,"types":["time::format_description::well_known::rfc3339::Rfc3339"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"time/format_description/enum.FormatItem.html\" title=\"enum time::format_description::FormatItem\">FormatItem</a>&lt;'a&gt;","synthetic":true,"types":["time::format_description::FormatItem"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/struct.Instant.html\" title=\"struct time::Instant\">Instant</a>","synthetic":true,"types":["time::instant::Instant"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/enum.Month.html\" title=\"enum time::Month\">Month</a>","synthetic":true,"types":["time::month::Month"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/struct.OffsetDateTime.html\" title=\"struct time::OffsetDateTime\">OffsetDateTime</a>","synthetic":true,"types":["time::offset_date_time::OffsetDateTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/parsing/struct.Parsed.html\" title=\"struct time::parsing::Parsed\">Parsed</a>","synthetic":true,"types":["time::parsing::parsed::Parsed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/struct.PrimitiveDateTime.html\" title=\"struct time::PrimitiveDateTime\">PrimitiveDateTime</a>","synthetic":true,"types":["time::primitive_date_time::PrimitiveDateTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/struct.Time.html\" title=\"struct time::Time\">Time</a>","synthetic":true,"types":["time::time::Time"]},{"text":"impl Freeze for <a class=\"struct\" href=\"time/struct.UtcOffset.html\" title=\"struct time::UtcOffset\">UtcOffset</a>","synthetic":true,"types":["time::utc_offset::UtcOffset"]},{"text":"impl Freeze for <a class=\"enum\" href=\"time/enum.Weekday.html\" title=\"enum time::Weekday\">Weekday</a>","synthetic":true,"types":["time::weekday::Weekday"]}];
implementors["tinyvec"] = [{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"tinyvec/struct.ArrayVec.html\" title=\"struct tinyvec::ArrayVec\">ArrayVec</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["tinyvec::arrayvec::ArrayVec"]},{"text":"impl&lt;'p, A, I&gt; Freeze for <a class=\"struct\" href=\"tinyvec/struct.ArrayVecSplice.html\" title=\"struct tinyvec::ArrayVecSplice\">ArrayVecSplice</a>&lt;'p, A, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["tinyvec::arrayvec::ArrayVecSplice"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tinyvec/struct.TryFromSliceError.html\" title=\"struct tinyvec::TryFromSliceError\">TryFromSliceError</a>","synthetic":true,"types":["tinyvec::arrayvec::TryFromSliceError"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"tinyvec/struct.ArrayVecIterator.html\" title=\"struct tinyvec::ArrayVecIterator\">ArrayVecIterator</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["tinyvec::arrayvec::ArrayVecIterator"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"tinyvec/struct.ArrayVecDrain.html\" title=\"struct tinyvec::ArrayVecDrain\">ArrayVecDrain</a>&lt;'a, T&gt;","synthetic":true,"types":["tinyvec::arrayvec_drain::ArrayVecDrain"]},{"text":"impl&lt;'s, T&gt; Freeze for <a class=\"struct\" href=\"tinyvec/struct.SliceVec.html\" title=\"struct tinyvec::SliceVec\">SliceVec</a>&lt;'s, T&gt;","synthetic":true,"types":["tinyvec::slicevec::SliceVec"]},{"text":"impl&lt;'p, 's, T&gt; Freeze for <a class=\"struct\" href=\"tinyvec/struct.SliceVecDrain.html\" title=\"struct tinyvec::SliceVecDrain\">SliceVecDrain</a>&lt;'p, 's, T&gt;","synthetic":true,"types":["tinyvec::slicevec::SliceVecDrain"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"enum\" href=\"tinyvec/enum.TinyVec.html\" title=\"enum tinyvec::TinyVec\">TinyVec</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["tinyvec::tinyvec::TinyVec"]},{"text":"impl&lt;'p, A&gt; Freeze for <a class=\"enum\" href=\"tinyvec/enum.TinyVecDrain.html\" title=\"enum tinyvec::TinyVecDrain\">TinyVecDrain</a>&lt;'p, A&gt;","synthetic":true,"types":["tinyvec::tinyvec::TinyVecDrain"]},{"text":"impl&lt;'p, A, I&gt; Freeze for <a class=\"struct\" href=\"tinyvec/struct.TinyVecSplice.html\" title=\"struct tinyvec::TinyVecSplice\">TinyVecSplice</a>&lt;'p, A, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["tinyvec::tinyvec::TinyVecSplice"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"enum\" href=\"tinyvec/enum.TinyVecIterator.html\" title=\"enum tinyvec::TinyVecIterator\">TinyVecIterator</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["tinyvec::tinyvec::TinyVecIterator"]}];
implementors["tokio"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.ReadBuf.html\" title=\"struct tokio::io::ReadBuf\">ReadBuf</a>&lt;'a&gt;","synthetic":true,"types":["tokio::io::read_buf::ReadBuf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/io/struct.Interest.html\" title=\"struct tokio::io::Interest\">Interest</a>","synthetic":true,"types":["tokio::io::interest::Interest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/io/struct.Ready.html\" title=\"struct tokio::io::Ready\">Ready</a>","synthetic":true,"types":["tokio::io::ready::Ready"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/io/unix/struct.AsyncFd.html\" title=\"struct tokio::io::unix::AsyncFd\">AsyncFd</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::io::async_fd::AsyncFd"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"tokio/io/unix/struct.AsyncFdReadyGuard.html\" title=\"struct tokio::io::unix::AsyncFdReadyGuard\">AsyncFdReadyGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::io::async_fd::AsyncFdReadyGuard"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"tokio/io/unix/struct.AsyncFdReadyMutGuard.html\" title=\"struct tokio::io::unix::AsyncFdReadyMutGuard\">AsyncFdReadyMutGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::io::async_fd::AsyncFdReadyMutGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/io/unix/struct.TryIoError.html\" title=\"struct tokio::io::unix::TryIoError\">TryIoError</a>","synthetic":true,"types":["tokio::io::async_fd::TryIoError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.ReadHalf.html\" title=\"struct tokio::io::ReadHalf\">ReadHalf</a>&lt;T&gt;","synthetic":true,"types":["tokio::io::split::ReadHalf"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.WriteHalf.html\" title=\"struct tokio::io::WriteHalf\">WriteHalf</a>&lt;T&gt;","synthetic":true,"types":["tokio::io::split::WriteHalf"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.BufReader.html\" title=\"struct tokio::io::BufReader\">BufReader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::io::util::buf_reader::BufReader"]},{"text":"impl&lt;RW&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.BufStream.html\" title=\"struct tokio::io::BufStream\">BufStream</a>&lt;RW&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;RW: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::io::util::buf_stream::BufStream"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.BufWriter.html\" title=\"struct tokio::io::BufWriter\">BufWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::io::util::buf_writer::BufWriter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/io/struct.Empty.html\" title=\"struct tokio::io::Empty\">Empty</a>","synthetic":true,"types":["tokio::io::util::empty::Empty"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.Lines.html\" title=\"struct tokio::io::Lines\">Lines</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::io::util::lines::Lines"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/io/struct.DuplexStream.html\" title=\"struct tokio::io::DuplexStream\">DuplexStream</a>","synthetic":true,"types":["tokio::io::util::mem::DuplexStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/io/struct.Repeat.html\" title=\"struct tokio::io::Repeat\">Repeat</a>","synthetic":true,"types":["tokio::io::util::repeat::Repeat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/io/struct.Sink.html\" title=\"struct tokio::io::Sink\">Sink</a>","synthetic":true,"types":["tokio::io::util::sink::Sink"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.Split.html\" title=\"struct tokio::io::Split\">Split</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::io::util::split::Split"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"tokio/io/struct.Take.html\" title=\"struct tokio::io::Take\">Take</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::io::util::take::Take"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/net/struct.TcpListener.html\" title=\"struct tokio::net::TcpListener\">TcpListener</a>","synthetic":true,"types":["tokio::net::tcp::listener::TcpListener"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/struct.TcpSocket.html\" title=\"struct tokio::net::TcpSocket\">TcpSocket</a>","synthetic":true,"types":["tokio::net::tcp::socket::TcpSocket"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio/net/tcp/struct.ReadHalf.html\" title=\"struct tokio::net::tcp::ReadHalf\">ReadHalf</a>&lt;'a&gt;","synthetic":true,"types":["tokio::net::tcp::split::ReadHalf"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio/net/tcp/struct.WriteHalf.html\" title=\"struct tokio::net::tcp::WriteHalf\">WriteHalf</a>&lt;'a&gt;","synthetic":true,"types":["tokio::net::tcp::split::WriteHalf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/tcp/struct.OwnedReadHalf.html\" title=\"struct tokio::net::tcp::OwnedReadHalf\">OwnedReadHalf</a>","synthetic":true,"types":["tokio::net::tcp::split_owned::OwnedReadHalf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/tcp/struct.OwnedWriteHalf.html\" title=\"struct tokio::net::tcp::OwnedWriteHalf\">OwnedWriteHalf</a>","synthetic":true,"types":["tokio::net::tcp::split_owned::OwnedWriteHalf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/tcp/struct.ReuniteError.html\" title=\"struct tokio::net::tcp::ReuniteError\">ReuniteError</a>","synthetic":true,"types":["tokio::net::tcp::split_owned::ReuniteError"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/net/struct.TcpStream.html\" title=\"struct tokio::net::TcpStream\">TcpStream</a>","synthetic":true,"types":["tokio::net::tcp::stream::TcpStream"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/net/struct.UdpSocket.html\" title=\"struct tokio::net::UdpSocket\">UdpSocket</a>","synthetic":true,"types":["tokio::net::udp::UdpSocket"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/net/struct.UnixDatagram.html\" title=\"struct tokio::net::UnixDatagram\">UnixDatagram</a>","synthetic":true,"types":["tokio::net::unix::datagram::socket::UnixDatagram"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/net/struct.UnixListener.html\" title=\"struct tokio::net::UnixListener\">UnixListener</a>","synthetic":true,"types":["tokio::net::unix::listener::UnixListener"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio/net/unix/struct.ReadHalf.html\" title=\"struct tokio::net::unix::ReadHalf\">ReadHalf</a>&lt;'a&gt;","synthetic":true,"types":["tokio::net::unix::split::ReadHalf"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio/net/unix/struct.WriteHalf.html\" title=\"struct tokio::net::unix::WriteHalf\">WriteHalf</a>&lt;'a&gt;","synthetic":true,"types":["tokio::net::unix::split::WriteHalf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/unix/struct.OwnedReadHalf.html\" title=\"struct tokio::net::unix::OwnedReadHalf\">OwnedReadHalf</a>","synthetic":true,"types":["tokio::net::unix::split_owned::OwnedReadHalf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/unix/struct.OwnedWriteHalf.html\" title=\"struct tokio::net::unix::OwnedWriteHalf\">OwnedWriteHalf</a>","synthetic":true,"types":["tokio::net::unix::split_owned::OwnedWriteHalf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/unix/struct.ReuniteError.html\" title=\"struct tokio::net::unix::ReuniteError\">ReuniteError</a>","synthetic":true,"types":["tokio::net::unix::split_owned::ReuniteError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/unix/struct.SocketAddr.html\" title=\"struct tokio::net::unix::SocketAddr\">SocketAddr</a>","synthetic":true,"types":["tokio::net::unix::socketaddr::SocketAddr"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/net/struct.UnixStream.html\" title=\"struct tokio::net::UnixStream\">UnixStream</a>","synthetic":true,"types":["tokio::net::unix::stream::UnixStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/net/unix/struct.UCred.html\" title=\"struct tokio::net::unix::UCred\">UCred</a>","synthetic":true,"types":["tokio::net::unix::ucred::UCred"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/task/struct.JoinError.html\" title=\"struct tokio::task::JoinError\">JoinError</a>","synthetic":true,"types":["tokio::runtime::task::error::JoinError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/task/struct.AbortHandle.html\" title=\"struct tokio::task::AbortHandle\">AbortHandle</a>","synthetic":true,"types":["tokio::runtime::task::abort::AbortHandle"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/task/struct.JoinHandle.html\" title=\"struct tokio::task::JoinHandle\">JoinHandle</a>&lt;T&gt;","synthetic":true,"types":["tokio::runtime::task::join::JoinHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/runtime/struct.Builder.html\" title=\"struct tokio::runtime::Builder\">Builder</a>","synthetic":true,"types":["tokio::runtime::builder::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/runtime/struct.Handle.html\" title=\"struct tokio::runtime::Handle\">Handle</a>","synthetic":true,"types":["tokio::runtime::handle::Handle"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio/runtime/struct.EnterGuard.html\" title=\"struct tokio::runtime::EnterGuard\">EnterGuard</a>&lt;'a&gt;","synthetic":true,"types":["tokio::runtime::handle::EnterGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/runtime/struct.TryCurrentError.html\" title=\"struct tokio::runtime::TryCurrentError\">TryCurrentError</a>","synthetic":true,"types":["tokio::runtime::handle::TryCurrentError"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/runtime/struct.Runtime.html\" title=\"struct tokio::runtime::Runtime\">Runtime</a>","synthetic":true,"types":["tokio::runtime::Runtime"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"tokio/sync/futures/struct.Notified.html\" title=\"struct tokio::sync::futures::Notified\">Notified</a>&lt;'a&gt;","synthetic":true,"types":["tokio::sync::notify::Notified"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/sync/struct.Barrier.html\" title=\"struct tokio::sync::Barrier\">Barrier</a>","synthetic":true,"types":["tokio::sync::barrier::Barrier"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/sync/struct.BarrierWaitResult.html\" title=\"struct tokio::sync::BarrierWaitResult\">BarrierWaitResult</a>","synthetic":true,"types":["tokio::sync::barrier::BarrierWaitResult"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/broadcast/error/struct.SendError.html\" title=\"struct tokio::sync::broadcast::error::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::sync::broadcast::error::SendError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio/sync/broadcast/error/enum.RecvError.html\" title=\"enum tokio::sync::broadcast::error::RecvError\">RecvError</a>","synthetic":true,"types":["tokio::sync::broadcast::error::RecvError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio/sync/broadcast/error/enum.TryRecvError.html\" title=\"enum tokio::sync::broadcast::error::TryRecvError\">TryRecvError</a>","synthetic":true,"types":["tokio::sync::broadcast::error::TryRecvError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/broadcast/struct.Sender.html\" title=\"struct tokio::sync::broadcast::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::broadcast::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/broadcast/struct.Receiver.html\" title=\"struct tokio::sync::broadcast::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::broadcast::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/struct.Sender.html\" title=\"struct tokio::sync::mpsc::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::mpsc::bounded::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/struct.WeakSender.html\" title=\"struct tokio::sync::mpsc::WeakSender\">WeakSender</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::mpsc::bounded::WeakSender"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/struct.Permit.html\" title=\"struct tokio::sync::mpsc::Permit\">Permit</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::sync::mpsc::bounded::Permit"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/struct.OwnedPermit.html\" title=\"struct tokio::sync::mpsc::OwnedPermit\">OwnedPermit</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::mpsc::bounded::OwnedPermit"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/struct.Receiver.html\" title=\"struct tokio::sync::mpsc::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::mpsc::bounded::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/struct.UnboundedSender.html\" title=\"struct tokio::sync::mpsc::UnboundedSender\">UnboundedSender</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::mpsc::unbounded::UnboundedSender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/struct.UnboundedReceiver.html\" title=\"struct tokio::sync::mpsc::UnboundedReceiver\">UnboundedReceiver</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::mpsc::unbounded::UnboundedReceiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/mpsc/error/struct.SendError.html\" title=\"struct tokio::sync::mpsc::error::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::sync::mpsc::error::SendError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"tokio/sync/mpsc/error/enum.TrySendError.html\" title=\"enum tokio::sync::mpsc::error::TrySendError\">TrySendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::sync::mpsc::error::TrySendError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio/sync/mpsc/error/enum.TryRecvError.html\" title=\"enum tokio::sync::mpsc::error::TryRecvError\">TryRecvError</a>","synthetic":true,"types":["tokio::sync::mpsc::error::TryRecvError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"tokio/sync/mpsc/error/enum.SendTimeoutError.html\" title=\"enum tokio::sync::mpsc::error::SendTimeoutError\">SendTimeoutError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::sync::mpsc::error::SendTimeoutError"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"tokio/sync/struct.Mutex.html\" title=\"struct tokio::sync::Mutex\">Mutex</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::mutex::Mutex"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.MutexGuard.html\" title=\"struct tokio::sync::MutexGuard\">MutexGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::sync::mutex::MutexGuard"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.OwnedMutexGuard.html\" title=\"struct tokio::sync::OwnedMutexGuard\">OwnedMutexGuard</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::mutex::OwnedMutexGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.MappedMutexGuard.html\" title=\"struct tokio::sync::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::sync::mutex::MappedMutexGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/sync/struct.TryLockError.html\" title=\"struct tokio::sync::TryLockError\">TryLockError</a>","synthetic":true,"types":["tokio::sync::mutex::TryLockError"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/sync/struct.Notify.html\" title=\"struct tokio::sync::Notify\">Notify</a>","synthetic":true,"types":["tokio::sync::notify::Notify"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/sync/oneshot/error/struct.RecvError.html\" title=\"struct tokio::sync::oneshot::error::RecvError\">RecvError</a>","synthetic":true,"types":["tokio::sync::oneshot::error::RecvError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio/sync/oneshot/error/enum.TryRecvError.html\" title=\"enum tokio::sync::oneshot::error::TryRecvError\">TryRecvError</a>","synthetic":true,"types":["tokio::sync::oneshot::error::TryRecvError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/oneshot/struct.Sender.html\" title=\"struct tokio::sync::oneshot::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::oneshot::Sender"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/oneshot/struct.Receiver.html\" title=\"struct tokio::sync::oneshot::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::oneshot::Receiver"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio/sync/enum.TryAcquireError.html\" title=\"enum tokio::sync::TryAcquireError\">TryAcquireError</a>","synthetic":true,"types":["tokio::sync::batch_semaphore::TryAcquireError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/sync/struct.AcquireError.html\" title=\"struct tokio::sync::AcquireError\">AcquireError</a>","synthetic":true,"types":["tokio::sync::batch_semaphore::AcquireError"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/sync/struct.Semaphore.html\" title=\"struct tokio::sync::Semaphore\">Semaphore</a>","synthetic":true,"types":["tokio::sync::semaphore::Semaphore"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.SemaphorePermit.html\" title=\"struct tokio::sync::SemaphorePermit\">SemaphorePermit</a>&lt;'a&gt;","synthetic":true,"types":["tokio::sync::semaphore::SemaphorePermit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/sync/struct.OwnedSemaphorePermit.html\" title=\"struct tokio::sync::OwnedSemaphorePermit\">OwnedSemaphorePermit</a>","synthetic":true,"types":["tokio::sync::semaphore::OwnedSemaphorePermit"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, U:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.OwnedRwLockReadGuard.html\" title=\"struct tokio::sync::OwnedRwLockReadGuard\">OwnedRwLockReadGuard</a>&lt;T, U&gt;","synthetic":true,"types":["tokio::sync::rwlock::owned_read_guard::OwnedRwLockReadGuard"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.OwnedRwLockWriteGuard.html\" title=\"struct tokio::sync::OwnedRwLockWriteGuard\">OwnedRwLockWriteGuard</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::rwlock::owned_write_guard::OwnedRwLockWriteGuard"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, U:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.OwnedRwLockMappedWriteGuard.html\" title=\"struct tokio::sync::OwnedRwLockMappedWriteGuard\">OwnedRwLockMappedWriteGuard</a>&lt;T, U&gt;","synthetic":true,"types":["tokio::sync::rwlock::owned_write_guard_mapped::OwnedRwLockMappedWriteGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.RwLockReadGuard.html\" title=\"struct tokio::sync::RwLockReadGuard\">RwLockReadGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::sync::rwlock::read_guard::RwLockReadGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.RwLockWriteGuard.html\" title=\"struct tokio::sync::RwLockWriteGuard\">RwLockWriteGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::sync::rwlock::write_guard::RwLockWriteGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/struct.RwLockMappedWriteGuard.html\" title=\"struct tokio::sync::RwLockMappedWriteGuard\">RwLockMappedWriteGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::sync::rwlock::write_guard_mapped::RwLockMappedWriteGuard"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"tokio/sync/struct.RwLock.html\" title=\"struct tokio::sync::RwLock\">RwLock</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::rwlock::RwLock"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"tokio/sync/struct.OnceCell.html\" title=\"struct tokio::sync::OnceCell\">OnceCell</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::once_cell::OnceCell"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"tokio/sync/enum.SetError.html\" title=\"enum tokio::sync::SetError\">SetError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::sync::once_cell::SetError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/watch/error/struct.SendError.html\" title=\"struct tokio::sync::watch::error::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::sync::watch::error::SendError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/sync/watch/error/struct.RecvError.html\" title=\"struct tokio::sync::watch::error::RecvError\">RecvError</a>","synthetic":true,"types":["tokio::sync::watch::error::RecvError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/watch/struct.Receiver.html\" title=\"struct tokio::sync::watch::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::watch::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/watch/struct.Sender.html\" title=\"struct tokio::sync::watch::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["tokio::sync::watch::Sender"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"tokio/sync/watch/struct.Ref.html\" title=\"struct tokio::sync::watch::Ref\">Ref</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio::sync::watch::Ref"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/task/struct.LocalSet.html\" title=\"struct tokio::task::LocalSet\">LocalSet</a>","synthetic":true,"types":["tokio::task::local::LocalSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/task/struct.LocalEnterGuard.html\" title=\"struct tokio::task::LocalEnterGuard\">LocalEnterGuard</a>","synthetic":true,"types":["tokio::task::local::LocalEnterGuard"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/task/struct.LocalKey.html\" title=\"struct tokio::task::LocalKey\">LocalKey</a>&lt;T&gt;","synthetic":true,"types":["tokio::task::task_local::LocalKey"]},{"text":"impl&lt;T, F&gt; Freeze for <a class=\"struct\" href=\"tokio/task/futures/struct.TaskLocalFuture.html\" title=\"struct tokio::task::futures::TaskLocalFuture\">TaskLocalFuture</a>&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::task::task_local::TaskLocalFuture"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"tokio/task/struct.Unconstrained.html\" title=\"struct tokio::task::Unconstrained\">Unconstrained</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio::task::unconstrained::Unconstrained"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio/task/struct.JoinSet.html\" title=\"struct tokio::task::JoinSet\">JoinSet</a>&lt;T&gt;","synthetic":true,"types":["tokio::task::join_set::JoinSet"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tokio/time/struct.Sleep.html\" title=\"struct tokio::time::Sleep\">Sleep</a>","synthetic":true,"types":["tokio::time::driver::sleep::Sleep"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/time/error/struct.Error.html\" title=\"struct tokio::time::error::Error\">Error</a>","synthetic":true,"types":["tokio::time::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/time/error/struct.Elapsed.html\" title=\"struct tokio::time::error::Elapsed\">Elapsed</a>","synthetic":true,"types":["tokio::time::error::Elapsed"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/time/struct.Instant.html\" title=\"struct tokio::time::Instant\">Instant</a>","synthetic":true,"types":["tokio::time::instant::Instant"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio/time/enum.MissedTickBehavior.html\" title=\"enum tokio::time::MissedTickBehavior\">MissedTickBehavior</a>","synthetic":true,"types":["tokio::time::interval::MissedTickBehavior"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio/time/struct.Interval.html\" title=\"struct tokio::time::Interval\">Interval</a>","synthetic":true,"types":["tokio::time::interval::Interval"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"tokio/time/struct.Timeout.html\" title=\"struct tokio::time::Timeout\">Timeout</a>&lt;T&gt;","synthetic":true,"types":["tokio::time::timeout::Timeout"]}];
implementors["tokio_native_tls"] = [{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"tokio_native_tls/struct.AllowStd.html\" title=\"struct tokio_native_tls::AllowStd\">AllowStd</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_native_tls::AllowStd"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"tokio_native_tls/struct.TlsStream.html\" title=\"struct tokio_native_tls::TlsStream\">TlsStream</a>&lt;S&gt;","synthetic":true,"types":["tokio_native_tls::TlsStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_native_tls/struct.TlsConnector.html\" title=\"struct tokio_native_tls::TlsConnector\">TlsConnector</a>","synthetic":true,"types":["tokio_native_tls::TlsConnector"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_native_tls/struct.TlsAcceptor.html\" title=\"struct tokio_native_tls::TlsAcceptor\">TlsAcceptor</a>","synthetic":true,"types":["tokio_native_tls::TlsAcceptor"]}];
implementors["tokio_stream"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_stream/wrappers/struct.ReceiverStream.html\" title=\"struct tokio_stream::wrappers::ReceiverStream\">ReceiverStream</a>&lt;T&gt;","synthetic":true,"types":["tokio_stream::wrappers::mpsc_bounded::ReceiverStream"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_stream/wrappers/struct.UnboundedReceiverStream.html\" title=\"struct tokio_stream::wrappers::UnboundedReceiverStream\">UnboundedReceiverStream</a>&lt;T&gt;","synthetic":true,"types":["tokio_stream::wrappers::mpsc_unbounded::UnboundedReceiverStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_stream/wrappers/struct.IntervalStream.html\" title=\"struct tokio_stream::wrappers::IntervalStream\">IntervalStream</a>","synthetic":true,"types":["tokio_stream::wrappers::interval::IntervalStream"]},{"text":"impl&lt;S&gt; !Freeze for <a class=\"struct\" href=\"tokio_stream/struct.Timeout.html\" title=\"struct tokio_stream::Timeout\">Timeout</a>&lt;S&gt;","synthetic":true,"types":["tokio_stream::stream_ext::timeout::Timeout"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_stream/struct.Elapsed.html\" title=\"struct tokio_stream::Elapsed\">Elapsed</a>","synthetic":true,"types":["tokio_stream::stream_ext::timeout::Elapsed"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_stream/struct.Empty.html\" title=\"struct tokio_stream::Empty\">Empty</a>&lt;T&gt;","synthetic":true,"types":["tokio_stream::empty::Empty"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"tokio_stream/struct.Iter.html\" title=\"struct tokio_stream::Iter\">Iter</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_stream::iter::Iter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_stream/struct.Once.html\" title=\"struct tokio_stream::Once\">Once</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_stream::once::Once"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_stream/struct.Pending.html\" title=\"struct tokio_stream::Pending\">Pending</a>&lt;T&gt;","synthetic":true,"types":["tokio_stream::pending::Pending"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"tokio_stream/struct.StreamMap.html\" title=\"struct tokio_stream::StreamMap\">StreamMap</a>&lt;K, V&gt;","synthetic":true,"types":["tokio_stream::stream_map::StreamMap"]}];
implementors["tokio_test"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_test/io/struct.Mock.html\" title=\"struct tokio_test::io::Mock\">Mock</a>","synthetic":true,"types":["tokio_test::io::Mock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_test/io/struct.Handle.html\" title=\"struct tokio_test::io::Handle\">Handle</a>","synthetic":true,"types":["tokio_test::io::Handle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_test/io/struct.Builder.html\" title=\"struct tokio_test::io::Builder\">Builder</a>","synthetic":true,"types":["tokio_test::io::Builder"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_test/task/struct.Spawn.html\" title=\"struct tokio_test::task::Spawn\">Spawn</a>&lt;T&gt;","synthetic":true,"types":["tokio_test::task::Spawn"]}];
implementors["tokio_util"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/codec/struct.BytesCodec.html\" title=\"struct tokio_util::codec::BytesCodec\">BytesCodec</a>","synthetic":true,"types":["tokio_util::codec::bytes_codec::BytesCodec"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"tokio_util/codec/struct.Framed.html\" title=\"struct tokio_util::codec::Framed\">Framed</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_util::codec::framed::Framed"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"tokio_util/codec/struct.FramedParts.html\" title=\"struct tokio_util::codec::FramedParts\">FramedParts</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_util::codec::framed::FramedParts"]},{"text":"impl&lt;T, D&gt; Freeze for <a class=\"struct\" href=\"tokio_util/codec/struct.FramedRead.html\" title=\"struct tokio_util::codec::FramedRead\">FramedRead</a>&lt;T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_util::codec::framed_read::FramedRead"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"struct\" href=\"tokio_util/codec/struct.FramedWrite.html\" title=\"struct tokio_util::codec::FramedWrite\">FramedWrite</a>&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_util::codec::framed_write::FramedWrite"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/codec/length_delimited/struct.Builder.html\" title=\"struct tokio_util::codec::length_delimited::Builder\">Builder</a>","synthetic":true,"types":["tokio_util::codec::length_delimited::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/codec/length_delimited/struct.LengthDelimitedCodecError.html\" title=\"struct tokio_util::codec::length_delimited::LengthDelimitedCodecError\">LengthDelimitedCodecError</a>","synthetic":true,"types":["tokio_util::codec::length_delimited::LengthDelimitedCodecError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/codec/length_delimited/struct.LengthDelimitedCodec.html\" title=\"struct tokio_util::codec::length_delimited::LengthDelimitedCodec\">LengthDelimitedCodec</a>","synthetic":true,"types":["tokio_util::codec::length_delimited::LengthDelimitedCodec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/codec/struct.LinesCodec.html\" title=\"struct tokio_util::codec::LinesCodec\">LinesCodec</a>","synthetic":true,"types":["tokio_util::codec::lines_codec::LinesCodec"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio_util/codec/enum.LinesCodecError.html\" title=\"enum tokio_util::codec::LinesCodecError\">LinesCodecError</a>","synthetic":true,"types":["tokio_util::codec::lines_codec::LinesCodecError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/codec/struct.AnyDelimiterCodec.html\" title=\"struct tokio_util::codec::AnyDelimiterCodec\">AnyDelimiterCodec</a>","synthetic":true,"types":["tokio_util::codec::any_delimiter_codec::AnyDelimiterCodec"]},{"text":"impl Freeze for <a class=\"enum\" href=\"tokio_util/codec/enum.AnyDelimiterCodecError.html\" title=\"enum tokio_util::codec::AnyDelimiterCodecError\">AnyDelimiterCodecError</a>","synthetic":true,"types":["tokio_util::codec::any_delimiter_codec::AnyDelimiterCodecError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/sync/struct.DropGuard.html\" title=\"struct tokio_util::sync::DropGuard\">DropGuard</a>","synthetic":true,"types":["tokio_util::sync::cancellation_token::guard::DropGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/sync/struct.CancellationToken.html\" title=\"struct tokio_util::sync::CancellationToken\">CancellationToken</a>","synthetic":true,"types":["tokio_util::sync::cancellation_token::CancellationToken"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"tokio_util/sync/struct.WaitForCancellationFuture.html\" title=\"struct tokio_util::sync::WaitForCancellationFuture\">WaitForCancellationFuture</a>&lt;'a&gt;","synthetic":true,"types":["tokio_util::sync::cancellation_token::WaitForCancellationFuture"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_util/sync/struct.PollSendError.html\" title=\"struct tokio_util::sync::PollSendError\">PollSendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_util::sync::mpsc::PollSendError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tokio_util/sync/struct.PollSender.html\" title=\"struct tokio_util::sync::PollSender\">PollSender</a>&lt;T&gt;","synthetic":true,"types":["tokio_util::sync::mpsc::PollSender"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tokio_util/sync/struct.PollSemaphore.html\" title=\"struct tokio_util::sync::PollSemaphore\">PollSemaphore</a>","synthetic":true,"types":["tokio_util::sync::poll_semaphore::PollSemaphore"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"tokio_util/sync/struct.ReusableBoxFuture.html\" title=\"struct tokio_util::sync::ReusableBoxFuture\">ReusableBoxFuture</a>&lt;'a, T&gt;","synthetic":true,"types":["tokio_util::sync::reusable_box::ReusableBoxFuture"]},{"text":"impl&lt;L, R&gt; Freeze for <a class=\"enum\" href=\"tokio_util/either/enum.Either.html\" title=\"enum tokio_util::either::Either\">Either</a>&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["tokio_util::either::Either"]}];
implementors["tracing"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tracing/instrument/struct.WithDispatch.html\" title=\"struct tracing::instrument::WithDispatch\">WithDispatch</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing::instrument::WithDispatch"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tracing/instrument/struct.Instrumented.html\" title=\"struct tracing::instrument::Instrumented\">Instrumented</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing::instrument::Instrumented"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing/struct.Span.html\" title=\"struct tracing::Span\">Span</a>","synthetic":true,"types":["tracing::span::Span"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tracing/span/struct.Entered.html\" title=\"struct tracing::span::Entered\">Entered</a>&lt;'a&gt;","synthetic":true,"types":["tracing::span::Entered"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing/span/struct.EnteredSpan.html\" title=\"struct tracing::span::EnteredSpan\">EnteredSpan</a>","synthetic":true,"types":["tracing::span::EnteredSpan"]}];
implementors["tracing_core"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/callsite/struct.Identifier.html\" title=\"struct tracing_core::callsite::Identifier\">Identifier</a>","synthetic":true,"types":["tracing_core::callsite::Identifier"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"tracing_core/callsite/struct.DefaultCallsite.html\" title=\"struct tracing_core::callsite::DefaultCallsite\">DefaultCallsite</a>","synthetic":true,"types":["tracing_core::callsite::DefaultCallsite"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/struct.Dispatch.html\" title=\"struct tracing_core::Dispatch\">Dispatch</a>","synthetic":true,"types":["tracing_core::dispatcher::Dispatch"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/dispatcher/struct.DefaultGuard.html\" title=\"struct tracing_core::dispatcher::DefaultGuard\">DefaultGuard</a>","synthetic":true,"types":["tracing_core::dispatcher::DefaultGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/dispatcher/struct.SetGlobalDefaultError.html\" title=\"struct tracing_core::dispatcher::SetGlobalDefaultError\">SetGlobalDefaultError</a>","synthetic":true,"types":["tracing_core::dispatcher::SetGlobalDefaultError"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tracing_core/struct.Event.html\" title=\"struct tracing_core::Event\">Event</a>&lt;'a&gt;","synthetic":true,"types":["tracing_core::event::Event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/struct.Field.html\" title=\"struct tracing_core::Field\">Field</a>","synthetic":true,"types":["tracing_core::field::Field"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/field/struct.Empty.html\" title=\"struct tracing_core::field::Empty\">Empty</a>","synthetic":true,"types":["tracing_core::field::Empty"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/field/struct.FieldSet.html\" title=\"struct tracing_core::field::FieldSet\">FieldSet</a>","synthetic":true,"types":["tracing_core::field::FieldSet"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tracing_core/field/struct.ValueSet.html\" title=\"struct tracing_core::field::ValueSet\">ValueSet</a>&lt;'a&gt;","synthetic":true,"types":["tracing_core::field::ValueSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/field/struct.Iter.html\" title=\"struct tracing_core::field::Iter\">Iter</a>","synthetic":true,"types":["tracing_core::field::Iter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tracing_core/field/struct.DisplayValue.html\" title=\"struct tracing_core::field::DisplayValue\">DisplayValue</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_core::field::DisplayValue"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tracing_core/field/struct.DebugValue.html\" title=\"struct tracing_core::field::DebugValue\">DebugValue</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tracing_core::field::DebugValue"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tracing_core/struct.Metadata.html\" title=\"struct tracing_core::Metadata\">Metadata</a>&lt;'a&gt;","synthetic":true,"types":["tracing_core::metadata::Metadata"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/metadata/struct.Kind.html\" title=\"struct tracing_core::metadata::Kind\">Kind</a>","synthetic":true,"types":["tracing_core::metadata::Kind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/struct.Level.html\" title=\"struct tracing_core::Level\">Level</a>","synthetic":true,"types":["tracing_core::metadata::Level"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/struct.LevelFilter.html\" title=\"struct tracing_core::LevelFilter\">LevelFilter</a>","synthetic":true,"types":["tracing_core::metadata::LevelFilter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/metadata/struct.ParseLevelFilterError.html\" title=\"struct tracing_core::metadata::ParseLevelFilterError\">ParseLevelFilterError</a>","synthetic":true,"types":["tracing_core::metadata::ParseLevelFilterError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/metadata/struct.ParseLevelError.html\" title=\"struct tracing_core::metadata::ParseLevelError\">ParseLevelError</a>","synthetic":true,"types":["tracing_core::metadata::ParseLevelError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>","synthetic":true,"types":["tracing_core::span::Id"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tracing_core/span/struct.Attributes.html\" title=\"struct tracing_core::span::Attributes\">Attributes</a>&lt;'a&gt;","synthetic":true,"types":["tracing_core::span::Attributes"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"tracing_core/span/struct.Record.html\" title=\"struct tracing_core::span::Record\">Record</a>&lt;'a&gt;","synthetic":true,"types":["tracing_core::span::Record"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/span/struct.Current.html\" title=\"struct tracing_core::span::Current\">Current</a>","synthetic":true,"types":["tracing_core::span::Current"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/subscriber/struct.Interest.html\" title=\"struct tracing_core::subscriber::Interest\">Interest</a>","synthetic":true,"types":["tracing_core::subscriber::Interest"]},{"text":"impl Freeze for <a class=\"struct\" href=\"tracing_core/subscriber/struct.NoSubscriber.html\" title=\"struct tracing_core::subscriber::NoSubscriber\">NoSubscriber</a>","synthetic":true,"types":["tracing_core::subscriber::NoSubscriber"]}];
implementors["triple_accel"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"triple_accel/levenshtein/struct.EditCosts.html\" title=\"struct triple_accel::levenshtein::EditCosts\">EditCosts</a>","synthetic":true,"types":["triple_accel::levenshtein::EditCosts"]},{"text":"impl Freeze for <a class=\"struct\" href=\"triple_accel/struct.Match.html\" title=\"struct triple_accel::Match\">Match</a>","synthetic":true,"types":["triple_accel::Match"]},{"text":"impl Freeze for <a class=\"enum\" href=\"triple_accel/enum.EditType.html\" title=\"enum triple_accel::EditType\">EditType</a>","synthetic":true,"types":["triple_accel::EditType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"triple_accel/struct.Edit.html\" title=\"struct triple_accel::Edit\">Edit</a>","synthetic":true,"types":["triple_accel::Edit"]},{"text":"impl Freeze for <a class=\"enum\" href=\"triple_accel/enum.SearchType.html\" title=\"enum triple_accel::SearchType\">SearchType</a>","synthetic":true,"types":["triple_accel::SearchType"]}];
implementors["try_lock"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"try_lock/struct.TryLock.html\" title=\"struct try_lock::TryLock\">TryLock</a>&lt;T&gt;","synthetic":true,"types":["try_lock::TryLock"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"try_lock/struct.Locked.html\" title=\"struct try_lock::Locked\">Locked</a>&lt;'a, T&gt;","synthetic":true,"types":["try_lock::Locked"]}];
implementors["typenum"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>","synthetic":true,"types":["typenum::bit::B0"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>","synthetic":true,"types":["typenum::bit::B1"]},{"text":"impl&lt;U&gt; Freeze for <a class=\"struct\" href=\"typenum/int/struct.PInt.html\" title=\"struct typenum::int::PInt\">PInt</a>&lt;U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["typenum::int::PInt"]},{"text":"impl&lt;U&gt; Freeze for <a class=\"struct\" href=\"typenum/int/struct.NInt.html\" title=\"struct typenum::int::NInt\">NInt</a>&lt;U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["typenum::int::NInt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>","synthetic":true,"types":["typenum::int::Z0"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>","synthetic":true,"types":["typenum::uint::UTerm"]},{"text":"impl&lt;U, B&gt; Freeze for <a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;U, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["typenum::uint::UInt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/array/struct.ATerm.html\" title=\"struct typenum::array::ATerm\">ATerm</a>","synthetic":true,"types":["typenum::array::ATerm"]},{"text":"impl&lt;V, A&gt; Freeze for <a class=\"struct\" href=\"typenum/array/struct.TArr.html\" title=\"struct typenum::array::TArr\">TArr</a>&lt;V, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>","synthetic":true,"types":["typenum::array::TArr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/struct.Greater.html\" title=\"struct typenum::Greater\">Greater</a>","synthetic":true,"types":["typenum::Greater"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/struct.Less.html\" title=\"struct typenum::Less\">Less</a>","synthetic":true,"types":["typenum::Less"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/struct.Equal.html\" title=\"struct typenum::Equal\">Equal</a>","synthetic":true,"types":["typenum::Equal"]}];
implementors["umya_spreadsheet"] = [{"text":"impl&lt;'r, 't&gt; Freeze for <a class=\"struct\" href=\"umya_spreadsheet/helper/number_format/struct.Split.html\" title=\"struct umya_spreadsheet::helper::number_format::Split\">Split</a>&lt;'r, 't&gt;","synthetic":true,"types":["umya_spreadsheet::helper::number_format::Split"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/helper/number_format/struct.ESCAPE_REGEX.html\" title=\"struct umya_spreadsheet::helper::number_format::ESCAPE_REGEX\">ESCAPE_REGEX</a>","synthetic":true,"types":["umya_spreadsheet::helper::number_format::ESCAPE_REGEX"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/helper/number_format/struct.SECTION_REGEX.html\" title=\"struct umya_spreadsheet::helper::number_format::SECTION_REGEX\">SECTION_REGEX</a>","synthetic":true,"types":["umya_spreadsheet::helper::number_format::SECTION_REGEX"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/helper/number_format/struct.DATE_TIME_REGEX.html\" title=\"struct umya_spreadsheet::helper::number_format::DATE_TIME_REGEX\">DATE_TIME_REGEX</a>","synthetic":true,"types":["umya_spreadsheet::helper::number_format::DATE_TIME_REGEX"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/helper/number_format/struct.PERCENT_DOLLAR_REGEX.html\" title=\"struct umya_spreadsheet::helper::number_format::PERCENT_DOLLAR_REGEX\">PERCENT_DOLLAR_REGEX</a>","synthetic":true,"types":["umya_spreadsheet::helper::number_format::PERCENT_DOLLAR_REGEX"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/reader/xlsx/enum.XlsxError.html\" title=\"enum umya_spreadsheet::reader::xlsx::XlsxError\">XlsxError</a>","synthetic":true,"types":["umya_spreadsheet::reader::xlsx::XlsxError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Chart.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Chart\">Chart</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::chart::Chart"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Layout.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Layout\">Layout</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::layout::Layout"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Legend.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Legend\">Legend</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::legend::Legend"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.PlotArea.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::PlotArea\">PlotArea</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::plot_area::PlotArea"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Title.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Title\">Title</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::title::Title"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.ChartText.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::ChartText\">ChartText</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::chart_text::ChartText"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.RichText.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::RichText\">RichText</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::rich_text::RichText"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Overlay.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Overlay\">Overlay</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::overlay::Overlay"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.ManualLayout.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::ManualLayout\">ManualLayout</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::manual_layout::ManualLayout"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Height.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Height\">Height</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::height::Height"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.HeightMode.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::HeightMode\">HeightMode</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::height_mode::HeightMode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.LayoutTarget.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::LayoutTarget\">LayoutTarget</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::layout_target::LayoutTarget"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Left.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Left\">Left</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::left::Left"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.LeftMode.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::LeftMode\">LeftMode</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::left_mode::LeftMode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Top.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Top\">Top</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::top::Top"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.TopMode.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::TopMode\">TopMode</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::top_mode::TopMode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Width.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Width\">Width</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::width::Width"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.WidthMode.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::WidthMode\">WidthMode</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::width_mode::WidthMode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.ChartSpace.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::ChartSpace\">ChartSpace</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::chart_space::ChartSpace"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Date1904.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Date1904\">Date1904</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::date1904::Date1904"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.EditingLanguage.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::EditingLanguage\">EditingLanguage</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::editing_language::EditingLanguage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.RoundedCorners.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::RoundedCorners\">RoundedCorners</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::rounded_corners::RoundedCorners"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.AutoTitleDeleted.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::AutoTitleDeleted\">AutoTitleDeleted</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::auto_title_deleted::AutoTitleDeleted"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.PlotVisibleOnly.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::PlotVisibleOnly\">PlotVisibleOnly</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::plot_visible_only::PlotVisibleOnly"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.DisplayBlanksAs.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::DisplayBlanksAs\">DisplayBlanksAs</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::display_blanks_as::DisplayBlanksAs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.ShowDataLabelsOverMaximum.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::ShowDataLabelsOverMaximum\">ShowDataLabelsOverMaximum</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::show_data_labels_over_maximum::ShowDataLabelsOverMaximum"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.LineChart.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::LineChart\">LineChart</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::line_chart::LineChart"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Grouping.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Grouping\">Grouping</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::grouping::Grouping"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.VaryColors.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::VaryColors\">VaryColors</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::vary_colors::VaryColors"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.AreaChartSeries.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::AreaChartSeries\">AreaChartSeries</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::area_chart_series::AreaChartSeries"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Index.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Index\">Index</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::index::Index"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Order.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Order\">Order</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::order::Order"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Values.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Values\">Values</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::values::Values"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.NumberReference.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::NumberReference\">NumberReference</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::number_reference::NumberReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Formula.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Formula\">Formula</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::formula::Formula"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.NumberingCache.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::NumberingCache\">NumberingCache</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::numbering_cache::NumberingCache"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.FormatCode.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::FormatCode\">FormatCode</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::format_code::FormatCode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.StringLiteral.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::StringLiteral\">StringLiteral</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::string_literal::StringLiteral"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.StringPoint.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::StringPoint\">StringPoint</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::string_point::StringPoint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.NumericValue.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::NumericValue\">NumericValue</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::numeric_value::NumericValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Smooth.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Smooth\">Smooth</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::smooth::Smooth"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.DataLabels.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::DataLabels\">DataLabels</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::data_labels::DataLabels"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.ShowLegendKey.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::ShowLegendKey\">ShowLegendKey</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::show_legend_key::ShowLegendKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.ShowValue.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::ShowValue\">ShowValue</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::show_value::ShowValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.ShowCategoryName.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::ShowCategoryName\">ShowCategoryName</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::show_category_name::ShowCategoryName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.ShowSeriesName.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::ShowSeriesName\">ShowSeriesName</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::show_series_name::ShowSeriesName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.ShowPercent.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::ShowPercent\">ShowPercent</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::show_percent::ShowPercent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.ShowBubbleSize.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::ShowBubbleSize\">ShowBubbleSize</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::show_bubble_size::ShowBubbleSize"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Marker.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Marker\">Marker</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::marker::Marker"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.AxisId.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::AxisId\">AxisId</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::axis_id::AxisId"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.CategoryAxis.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::CategoryAxis\">CategoryAxis</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::category_axis::CategoryAxis"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Scaling.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Scaling\">Scaling</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::scaling::Scaling"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Orientation.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Orientation\">Orientation</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::orientation::Orientation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Delete.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Delete\">Delete</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::delete::Delete"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.AxisPosition.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::AxisPosition\">AxisPosition</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::axis_position::AxisPosition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.MajorTickMark.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::MajorTickMark\">MajorTickMark</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::major_tick_mark::MajorTickMark"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.MinorTickMark.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::MinorTickMark\">MinorTickMark</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::minor_tick_mark::MinorTickMark"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.TickLabelPosition.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::TickLabelPosition\">TickLabelPosition</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::tick_label_position::TickLabelPosition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.CrossingAxis.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::CrossingAxis\">CrossingAxis</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::crossing_axis::CrossingAxis"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Crosses.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Crosses\">Crosses</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::crosses::Crosses"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.AutoLabeled.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::AutoLabeled\">AutoLabeled</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::auto_labeled::AutoLabeled"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.LabelAlignment.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::LabelAlignment\">LabelAlignment</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::label_alignment::LabelAlignment"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.LabelOffset.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::LabelOffset\">LabelOffset</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::label_offset::LabelOffset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.NoMultiLevelLabels.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::NoMultiLevelLabels\">NoMultiLevelLabels</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::no_multi_level_labels::NoMultiLevelLabels"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.ValueAxis.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::ValueAxis\">ValueAxis</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::value_axis::ValueAxis"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.MajorGridlines.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::MajorGridlines\">MajorGridlines</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::major_gridlines::MajorGridlines"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.NumberingFormat.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::NumberingFormat\">NumberingFormat</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::numbering_format::NumberingFormat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.CrossBetween.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::CrossBetween\">CrossBetween</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::cross_between::CrossBetween"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.LegendPosition.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::LegendPosition\">LegendPosition</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::legend_position::LegendPosition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.PrintSettings.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::PrintSettings\">PrintSettings</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::print_settings::PrintSettings"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.HeaderFooter.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::HeaderFooter\">HeaderFooter</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::header_footer::HeaderFooter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.PageMargins.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::PageMargins\">PageMargins</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::page_margins::PageMargins"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.PageSetup.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::PageSetup\">PageSetup</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::page_setup::PageSetup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Symbol.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Symbol\">Symbol</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::symbol::Symbol"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.PieChart.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::PieChart\">PieChart</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::pie_chart::PieChart"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.FirstSliceAngle.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::FirstSliceAngle\">FirstSliceAngle</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::first_slice_angle::FirstSliceAngle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.ShowLeaderLines.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::ShowLeaderLines\">ShowLeaderLines</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::show_leader_lines::ShowLeaderLines"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.TextProperties.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::TextProperties\">TextProperties</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::text_properties::TextProperties"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.DoughnutChart.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::DoughnutChart\">DoughnutChart</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::doughnut_chart::DoughnutChart"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.HoleSize.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::HoleSize\">HoleSize</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::hole_size::HoleSize"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.ShapeProperties.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::ShapeProperties\">ShapeProperties</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::shape_properties::ShapeProperties"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.CategoryAxisData.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::CategoryAxisData\">CategoryAxisData</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::category_axis_data::CategoryAxisData"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.StringReference.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::StringReference\">StringReference</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::string_reference::StringReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.StringCache.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::StringCache\">StringCache</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::string_cache::StringCache"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.ScatterChart.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::ScatterChart\">ScatterChart</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::scatter_chart::ScatterChart"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.ScatterStyle.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::ScatterStyle\">ScatterStyle</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::scatter_style::ScatterStyle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.XValues.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::XValues\">XValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::x_values::XValues"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.YValues.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::YValues\">YValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::y_values::YValues"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Style.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Style\">Style</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::style::Style"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.BarDirection.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::BarDirection\">BarDirection</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::bar_direction::BarDirection"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.BarChart.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::BarChart\">BarChart</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::bar_chart::BarChart"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.GapWidth.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::GapWidth\">GapWidth</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::gap_width::GapWidth"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Overlap.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Overlap\">Overlap</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::overlap::Overlap"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.InvertIfNegative.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::InvertIfNegative\">InvertIfNegative</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::invert_if_negative::InvertIfNegative"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Bar3DChart.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Bar3DChart\">Bar3DChart</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::bar_3d_chart::Bar3DChart"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Shape.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Shape\">Shape</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::shape::Shape"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.View3D.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::View3D\">View3D</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::view_3d::View3D"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.RotateX.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::RotateX\">RotateX</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::rotate_x::RotateX"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.RotateY.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::RotateY\">RotateY</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::rotate_y::RotateY"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.RightAngleAxes.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::RightAngleAxes\">RightAngleAxes</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::right_angle_axes::RightAngleAxes"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Perspective.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Perspective\">Perspective</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::perspective::Perspective"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Thickness.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Thickness\">Thickness</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::thickness::Thickness"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Floor.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Floor\">Floor</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::floor::Floor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.SideWall.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::SideWall\">SideWall</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::side_wall::SideWall"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.BackWall.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::BackWall\">BackWall</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::back_wall::BackWall"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Line3DChart.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Line3DChart\">Line3DChart</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::line_3d_chart::Line3DChart"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.SeriesAxis.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::SeriesAxis\">SeriesAxis</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::series_axis::SeriesAxis"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.RadarStyle.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::RadarStyle\">RadarStyle</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::radar_style::RadarStyle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.RadarChart.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::RadarChart\">RadarChart</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::radar_chart::RadarChart"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.BubbleChart.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::BubbleChart\">BubbleChart</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::bubble_chart::BubbleChart"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.BubbleScale.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::BubbleScale\">BubbleScale</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::bubble_scale::BubbleScale"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.ShowNegativeBubbles.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::ShowNegativeBubbles\">ShowNegativeBubbles</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::show_negative_bubbles::ShowNegativeBubbles"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.BubbleSize.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::BubbleSize\">BubbleSize</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::bubble_size::BubbleSize"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Bubble3D.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Bubble3D\">Bubble3D</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::bubble_3d::Bubble3D"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/charts/enum.AxisPositionValues.html\" title=\"enum umya_spreadsheet::structs::drawing::charts::AxisPositionValues\">AxisPositionValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::axis_position_values::AxisPositionValues"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/charts/enum.BarDirectionValues.html\" title=\"enum umya_spreadsheet::structs::drawing::charts::BarDirectionValues\">BarDirectionValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::bar_direction_values::BarDirectionValues"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/charts/enum.CrossBetweenValues.html\" title=\"enum umya_spreadsheet::structs::drawing::charts::CrossBetweenValues\">CrossBetweenValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::cross_between_values::CrossBetweenValues"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/charts/enum.CrossesValues.html\" title=\"enum umya_spreadsheet::structs::drawing::charts::CrossesValues\">CrossesValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::crosses_values::CrossesValues"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/charts/enum.DisplayBlanksAsValues.html\" title=\"enum umya_spreadsheet::structs::drawing::charts::DisplayBlanksAsValues\">DisplayBlanksAsValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::display_blanks_as_values::DisplayBlanksAsValues"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/charts/enum.GroupingValues.html\" title=\"enum umya_spreadsheet::structs::drawing::charts::GroupingValues\">GroupingValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::grouping_values::GroupingValues"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/charts/enum.LayoutModeValues.html\" title=\"enum umya_spreadsheet::structs::drawing::charts::LayoutModeValues\">LayoutModeValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::layout_mode_values::LayoutModeValues"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/charts/enum.LabelAlignmentValues.html\" title=\"enum umya_spreadsheet::structs::drawing::charts::LabelAlignmentValues\">LabelAlignmentValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::label_alignment_values::LabelAlignmentValues"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/charts/enum.LayoutTargetValues.html\" title=\"enum umya_spreadsheet::structs::drawing::charts::LayoutTargetValues\">LayoutTargetValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::layout_target_values::LayoutTargetValues"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/charts/enum.LegendPositionValues.html\" title=\"enum umya_spreadsheet::structs::drawing::charts::LegendPositionValues\">LegendPositionValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::legend_position_values::LegendPositionValues"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/charts/enum.TickMarkValues.html\" title=\"enum umya_spreadsheet::structs::drawing::charts::TickMarkValues\">TickMarkValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::tick_mark_values::TickMarkValues"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.ShowMarker.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::ShowMarker\">ShowMarker</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::show_marker::ShowMarker"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/charts/enum.OrientationValues.html\" title=\"enum umya_spreadsheet::structs::drawing::charts::OrientationValues\">OrientationValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::orientation_values::OrientationValues"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/charts/enum.RadarStyleValues.html\" title=\"enum umya_spreadsheet::structs::drawing::charts::RadarStyleValues\">RadarStyleValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::radar_style_values::RadarStyleValues"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/charts/enum.ScatterStyleValues.html\" title=\"enum umya_spreadsheet::structs::drawing::charts::ScatterStyleValues\">ScatterStyleValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::scatter_style_values::ScatterStyleValues"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/charts/enum.ShapeValues.html\" title=\"enum umya_spreadsheet::structs::drawing::charts::ShapeValues\">ShapeValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::shape_values::ShapeValues"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/charts/enum.MarkerStyleValues.html\" title=\"enum umya_spreadsheet::structs::drawing::charts::MarkerStyleValues\">MarkerStyleValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::marker_style_values::MarkerStyleValues"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/charts/enum.TickLabelPositionValues.html\" title=\"enum umya_spreadsheet::structs::drawing::charts::TickLabelPositionValues\">TickLabelPositionValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::tick_label_position_values::TickLabelPositionValues"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.AreaChart.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::AreaChart\">AreaChart</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::area_chart::AreaChart"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Area3DChart.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Area3DChart\">Area3DChart</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::area_3d_chart::Area3DChart"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Pie3DChart.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Pie3DChart\">Pie3DChart</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::pie_3d_chart::Pie3DChart"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.OfPieChart.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::OfPieChart\">OfPieChart</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::of_pie_chart::OfPieChart"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/charts/enum.OfPieValues.html\" title=\"enum umya_spreadsheet::structs::drawing::charts::OfPieValues\">OfPieValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::of_pie_values::OfPieValues"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.OfPieType.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::OfPieType\">OfPieType</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::of_pie_type::OfPieType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.SecondPieSize.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::SecondPieSize\">SecondPieSize</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::second_pie_size::SecondPieSize"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.SeriesLines.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::SeriesLines\">SeriesLines</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::series_lines::SeriesLines"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.Explosion.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::Explosion\">Explosion</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::explosion::Explosion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.AreaChartSeriesList.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::AreaChartSeriesList\">AreaChartSeriesList</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::area_chart_series_list::AreaChartSeriesList"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/charts/struct.SeriesText.html\" title=\"struct umya_spreadsheet::structs::drawing::charts::SeriesText\">SeriesText</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::charts::series_text::SeriesText"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/spreadsheet/struct.Shape.html\" title=\"struct umya_spreadsheet::structs::drawing::spreadsheet::Shape\">Shape</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::spreadsheet::shape::Shape"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/spreadsheet/struct.ShapeStyle.html\" title=\"struct umya_spreadsheet::structs::drawing::spreadsheet::ShapeStyle\">ShapeStyle</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::spreadsheet::shape_style::ShapeStyle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/spreadsheet/struct.TextBody.html\" title=\"struct umya_spreadsheet::structs::drawing::spreadsheet::TextBody\">TextBody</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::spreadsheet::text_body::TextBody"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/spreadsheet/struct.ShapeProperties.html\" title=\"struct umya_spreadsheet::structs::drawing::spreadsheet::ShapeProperties\">ShapeProperties</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::spreadsheet::shape_properties::ShapeProperties"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/spreadsheet/struct.ConnectionShape.html\" title=\"struct umya_spreadsheet::structs::drawing::spreadsheet::ConnectionShape\">ConnectionShape</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::spreadsheet::connection_shape::ConnectionShape"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/spreadsheet/struct.NonVisualShapeProperties.html\" title=\"struct umya_spreadsheet::structs::drawing::spreadsheet::NonVisualShapeProperties\">NonVisualShapeProperties</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::spreadsheet::non_visual_shape_properties::NonVisualShapeProperties"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/spreadsheet/struct.NonVisualDrawingProperties.html\" title=\"struct umya_spreadsheet::structs::drawing::spreadsheet::NonVisualDrawingProperties\">NonVisualDrawingProperties</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::spreadsheet::non_visual_drawing_properties::NonVisualDrawingProperties"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/spreadsheet/struct.NonVisualConnectionShapeProperties.html\" title=\"struct umya_spreadsheet::structs::drawing::spreadsheet::NonVisualConnectionShapeProperties\">NonVisualConnectionShapeProperties</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::spreadsheet::non_visual_connection_shape_properties::NonVisualConnectionShapeProperties"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/spreadsheet/struct.NonVisualConnectorShapeDrawingProperties.html\" title=\"struct umya_spreadsheet::structs::drawing::spreadsheet::NonVisualConnectorShapeDrawingProperties\">NonVisualConnectorShapeDrawingProperties</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::spreadsheet::non_visual_connector_shape_drawing_properties::NonVisualConnectorShapeDrawingProperties"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/spreadsheet/struct.NonVisualPictureProperties.html\" title=\"struct umya_spreadsheet::structs::drawing::spreadsheet::NonVisualPictureProperties\">NonVisualPictureProperties</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::spreadsheet::non_visual_picture_properties::NonVisualPictureProperties"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/spreadsheet/struct.NonVisualPictureDrawingProperties.html\" title=\"struct umya_spreadsheet::structs::drawing::spreadsheet::NonVisualPictureDrawingProperties\">NonVisualPictureDrawingProperties</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::spreadsheet::non_visual_picture_drawing_properties::NonVisualPictureDrawingProperties"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/spreadsheet/struct.Picture.html\" title=\"struct umya_spreadsheet::structs::drawing::spreadsheet::Picture\">Picture</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::spreadsheet::picture::Picture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/spreadsheet/struct.BlipFill.html\" title=\"struct umya_spreadsheet::structs::drawing::spreadsheet::BlipFill\">BlipFill</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::spreadsheet::blip_fill::BlipFill"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/spreadsheet/struct.TwoCellAnchor.html\" title=\"struct umya_spreadsheet::structs::drawing::spreadsheet::TwoCellAnchor\">TwoCellAnchor</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::spreadsheet::two_cell_anchor::TwoCellAnchor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/spreadsheet/struct.WorksheetDrawing.html\" title=\"struct umya_spreadsheet::structs::drawing::spreadsheet::WorksheetDrawing\">WorksheetDrawing</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::spreadsheet::worksheet_drawing::WorksheetDrawing"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/spreadsheet/struct.GraphicFrame.html\" title=\"struct umya_spreadsheet::structs::drawing::spreadsheet::GraphicFrame\">GraphicFrame</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::spreadsheet::graphic_frame::GraphicFrame"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/spreadsheet/struct.NonVisualGraphicFrameProperties.html\" title=\"struct umya_spreadsheet::structs::drawing::spreadsheet::NonVisualGraphicFrameProperties\">NonVisualGraphicFrameProperties</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::spreadsheet::non_visual_graphic_frame_properties::NonVisualGraphicFrameProperties"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/spreadsheet/struct.NonVisualGraphicFrameDrawingProperties.html\" title=\"struct umya_spreadsheet::structs::drawing::spreadsheet::NonVisualGraphicFrameDrawingProperties\">NonVisualGraphicFrameDrawingProperties</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::spreadsheet::non_visual_graphic_frame_drawing_properties::NonVisualGraphicFrameDrawingProperties"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/spreadsheet/struct.Transform.html\" title=\"struct umya_spreadsheet::structs::drawing::spreadsheet::Transform\">Transform</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::spreadsheet::transform::Transform"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/spreadsheet/enum.EditAsValues.html\" title=\"enum umya_spreadsheet::structs::drawing::spreadsheet::EditAsValues\">EditAsValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::spreadsheet::edit_as_values::EditAsValues"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/spreadsheet/struct.OneCellAnchor.html\" title=\"struct umya_spreadsheet::structs::drawing::spreadsheet::OneCellAnchor\">OneCellAnchor</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::spreadsheet::one_cell_anchor::OneCellAnchor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/spreadsheet/struct.Extent.html\" title=\"struct umya_spreadsheet::structs::drawing::spreadsheet::Extent\">Extent</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::spreadsheet::extent::Extent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/spreadsheet/struct.MarkerType.html\" title=\"struct umya_spreadsheet::structs::drawing::spreadsheet::MarkerType\">MarkerType</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::spreadsheet::marker_type::MarkerType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.Transform2D.html\" title=\"struct umya_spreadsheet::structs::drawing::Transform2D\">Transform2D</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::transform2d::Transform2D"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.SolidFill.html\" title=\"struct umya_spreadsheet::structs::drawing::SolidFill\">SolidFill</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::solid_fill::SolidFill"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.SchemeColor.html\" title=\"struct umya_spreadsheet::structs::drawing::SchemeColor\">SchemeColor</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::scheme_color::SchemeColor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.RgbColorModelHex.html\" title=\"struct umya_spreadsheet::structs::drawing::RgbColorModelHex\">RgbColorModelHex</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::rgb_color_model_hex::RgbColorModelHex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.PresetGeometry.html\" title=\"struct umya_spreadsheet::structs::drawing::PresetGeometry\">PresetGeometry</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::preset_geometry::PresetGeometry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.AdjustValueList.html\" title=\"struct umya_spreadsheet::structs::drawing::AdjustValueList\">AdjustValueList</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::adjust_value_list::AdjustValueList"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.ShapeGuide.html\" title=\"struct umya_spreadsheet::structs::drawing::ShapeGuide\">ShapeGuide</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::shape_guide::ShapeGuide"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.StyleMatrixReferenceType.html\" title=\"struct umya_spreadsheet::structs::drawing::StyleMatrixReferenceType\">StyleMatrixReferenceType</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::style_matrix_reference_type::StyleMatrixReferenceType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.Outline.html\" title=\"struct umya_spreadsheet::structs::drawing::Outline\">Outline</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::outline::Outline"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.TailEnd.html\" title=\"struct umya_spreadsheet::structs::drawing::TailEnd\">TailEnd</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::tail_end::TailEnd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.PictureLocks.html\" title=\"struct umya_spreadsheet::structs::drawing::PictureLocks\">PictureLocks</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::picture_locks::PictureLocks"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.Stretch.html\" title=\"struct umya_spreadsheet::structs::drawing::Stretch\">Stretch</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::stretch::Stretch"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.FillRectangle.html\" title=\"struct umya_spreadsheet::structs::drawing::FillRectangle\">FillRectangle</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::fill_rectangle::FillRectangle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.Blip.html\" title=\"struct umya_spreadsheet::structs::drawing::Blip\">Blip</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::blip::Blip"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.SourceRectangle.html\" title=\"struct umya_spreadsheet::structs::drawing::SourceRectangle\">SourceRectangle</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::source_rectangle::SourceRectangle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.EffectList.html\" title=\"struct umya_spreadsheet::structs::drawing::EffectList\">EffectList</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::effect_list::EffectList"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.OuterShadow.html\" title=\"struct umya_spreadsheet::structs::drawing::OuterShadow\">OuterShadow</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::outer_shadow::OuterShadow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.PresetColor.html\" title=\"struct umya_spreadsheet::structs::drawing::PresetColor\">PresetColor</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::preset_color::PresetColor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.Alpha.html\" title=\"struct umya_spreadsheet::structs::drawing::Alpha\">Alpha</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::alpha::Alpha"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.Run.html\" title=\"struct umya_spreadsheet::structs::drawing::Run\">Run</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::run::Run"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.RunProperties.html\" title=\"struct umya_spreadsheet::structs::drawing::RunProperties\">RunProperties</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::run_properties::RunProperties"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.Paragraph.html\" title=\"struct umya_spreadsheet::structs::drawing::Paragraph\">Paragraph</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::paragraph::Paragraph"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.BodyProperties.html\" title=\"struct umya_spreadsheet::structs::drawing::BodyProperties\">BodyProperties</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::body_properties::BodyProperties"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.ListStyle.html\" title=\"struct umya_spreadsheet::structs::drawing::ListStyle\">ListStyle</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::list_style::ListStyle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.Offset.html\" title=\"struct umya_spreadsheet::structs::drawing::Offset\">Offset</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::offset::Offset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.Extents.html\" title=\"struct umya_spreadsheet::structs::drawing::Extents\">Extents</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::extents::Extents"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.Graphic.html\" title=\"struct umya_spreadsheet::structs::drawing::Graphic\">Graphic</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::graphic::Graphic"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.GraphicData.html\" title=\"struct umya_spreadsheet::structs::drawing::GraphicData\">GraphicData</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::graphic_data::GraphicData"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.ParagraphProperties.html\" title=\"struct umya_spreadsheet::structs::drawing::ParagraphProperties\">ParagraphProperties</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::paragraph_properties::ParagraphProperties"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.LatinFont.html\" title=\"struct umya_spreadsheet::structs::drawing::LatinFont\">LatinFont</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::latin_font::LatinFont"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.EastAsianFont.html\" title=\"struct umya_spreadsheet::structs::drawing::EastAsianFont\">EastAsianFont</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::east_asian_font::EastAsianFont"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.NoFill.html\" title=\"struct umya_spreadsheet::structs::drawing::NoFill\">NoFill</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::no_fill::NoFill"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.PatternFill.html\" title=\"struct umya_spreadsheet::structs::drawing::PatternFill\">PatternFill</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::pattern_fill::PatternFill"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.ForegroundColor.html\" title=\"struct umya_spreadsheet::structs::drawing::ForegroundColor\">ForegroundColor</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::foreground_color::ForegroundColor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.BackgroundColor.html\" title=\"struct umya_spreadsheet::structs::drawing::BackgroundColor\">BackgroundColor</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::background_color::BackgroundColor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.GradientFill.html\" title=\"struct umya_spreadsheet::structs::drawing::GradientFill\">GradientFill</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::gradient_fill::GradientFill"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.GradientStopList.html\" title=\"struct umya_spreadsheet::structs::drawing::GradientStopList\">GradientStopList</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::gradient_stop_list::GradientStopList"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.GradientStop.html\" title=\"struct umya_spreadsheet::structs::drawing::GradientStop\">GradientStop</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::gradient_stop::GradientStop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.StartConnection.html\" title=\"struct umya_spreadsheet::structs::drawing::StartConnection\">StartConnection</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::start_connection::StartConnection"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.EndConnection.html\" title=\"struct umya_spreadsheet::structs::drawing::EndConnection\">EndConnection</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::end_connection::EndConnection"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.LinearGradientFill.html\" title=\"struct umya_spreadsheet::structs::drawing::LinearGradientFill\">LinearGradientFill</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::linear_gradient_fill::LinearGradientFill"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/enum.TileFlipValues.html\" title=\"enum umya_spreadsheet::structs::drawing::TileFlipValues\">TileFlipValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::tile_flip_values::TileFlipValues"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.TileRectangle.html\" title=\"struct umya_spreadsheet::structs::drawing::TileRectangle\">TileRectangle</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::tile_rectangle::TileRectangle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.Glow.html\" title=\"struct umya_spreadsheet::structs::drawing::Glow\">Glow</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::glow::Glow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.SoftEdge.html\" title=\"struct umya_spreadsheet::structs::drawing::SoftEdge\">SoftEdge</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::soft_edge::SoftEdge"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.Bevel.html\" title=\"struct umya_spreadsheet::structs::drawing::Bevel\">Bevel</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::bevel::Bevel"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/enum.PresetCameraValues.html\" title=\"enum umya_spreadsheet::structs::drawing::PresetCameraValues\">PresetCameraValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::preset_camera_values::PresetCameraValues"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.Camera.html\" title=\"struct umya_spreadsheet::structs::drawing::Camera\">Camera</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::camera::Camera"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/enum.LightRigDirectionValues.html\" title=\"enum umya_spreadsheet::structs::drawing::LightRigDirectionValues\">LightRigDirectionValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::light_rig_direction_values::LightRigDirectionValues"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/enum.LightRigValues.html\" title=\"enum umya_spreadsheet::structs::drawing::LightRigValues\">LightRigValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::light_rig_values::LightRigValues"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.LightRig.html\" title=\"struct umya_spreadsheet::structs::drawing::LightRig\">LightRig</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::light_rig::LightRig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.Scene3DType.html\" title=\"struct umya_spreadsheet::structs::drawing::Scene3DType\">Scene3DType</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::scene_3d_type::Scene3DType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/enum.BevelPresetValues.html\" title=\"enum umya_spreadsheet::structs::drawing::BevelPresetValues\">BevelPresetValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::bevel_preset_values::BevelPresetValues"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.BevelTop.html\" title=\"struct umya_spreadsheet::structs::drawing::BevelTop\">BevelTop</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::bevel_top::BevelTop"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.BevelBottom.html\" title=\"struct umya_spreadsheet::structs::drawing::BevelBottom\">BevelBottom</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::bevel_bottom::BevelBottom"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.Shape3DType.html\" title=\"struct umya_spreadsheet::structs::drawing::Shape3DType\">Shape3DType</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::shape_3d_type::Shape3DType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/enum.PresetMaterialTypeValues.html\" title=\"enum umya_spreadsheet::structs::drawing::PresetMaterialTypeValues\">PresetMaterialTypeValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::preset_material_type_values::PresetMaterialTypeValues"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/enum.TextWrappingValues.html\" title=\"enum umya_spreadsheet::structs::drawing::TextWrappingValues\">TextWrappingValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::text_wrapping_values::TextWrappingValues"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.ShapeAutoFit.html\" title=\"struct umya_spreadsheet::structs::drawing::ShapeAutoFit\">ShapeAutoFit</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::shape_auto_fit::ShapeAutoFit"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/enum.TextAlignmentTypeValues.html\" title=\"enum umya_spreadsheet::structs::drawing::TextAlignmentTypeValues\">TextAlignmentTypeValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::text_alignment_type_values::TextAlignmentTypeValues"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/enum.TextCapsValues.html\" title=\"enum umya_spreadsheet::structs::drawing::TextCapsValues\">TextCapsValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::text_caps_values::TextCapsValues"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.Tint.html\" title=\"struct umya_spreadsheet::structs::drawing::Tint\">Tint</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::tint::Tint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.Shade.html\" title=\"struct umya_spreadsheet::structs::drawing::Shade\">Shade</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::shade::Shade"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.SaturationModulation.html\" title=\"struct umya_spreadsheet::structs::drawing::SaturationModulation\">SaturationModulation</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::saturation_modulation::SaturationModulation"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/drawing/enum.PresetLineDashValues.html\" title=\"enum umya_spreadsheet::structs::drawing::PresetLineDashValues\">PresetLineDashValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::preset_line_dash_values::PresetLineDashValues"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.PresetDash.html\" title=\"struct umya_spreadsheet::structs::drawing::PresetDash\">PresetDash</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::preset_dash::PresetDash"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.Miter.html\" title=\"struct umya_spreadsheet::structs::drawing::Miter\">Miter</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::miter::Miter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.LineSpacing.html\" title=\"struct umya_spreadsheet::structs::drawing::LineSpacing\">LineSpacing</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::line_spacing::LineSpacing"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.SpacingPercent.html\" title=\"struct umya_spreadsheet::structs::drawing::SpacingPercent\">SpacingPercent</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::spacing_percent::SpacingPercent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.Round.html\" title=\"struct umya_spreadsheet::structs::drawing::Round\">Round</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::round::Round"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.SupplementalFont.html\" title=\"struct umya_spreadsheet::structs::drawing::SupplementalFont\">SupplementalFont</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::supplemental_font::SupplementalFont"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.Theme.html\" title=\"struct umya_spreadsheet::structs::drawing::Theme\">Theme</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::theme::Theme"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/drawing/struct.FontCollectionType.html\" title=\"struct umya_spreadsheet::structs::drawing::FontCollectionType\">FontCollectionType</a>","synthetic":true,"types":["umya_spreadsheet::structs::drawing::font_collection_type::FontCollectionType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/vml/office/enum.InsetMarginValues.html\" title=\"enum umya_spreadsheet::structs::vml::office::InsetMarginValues\">InsetMarginValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::vml::office::inset_margin_values::InsetMarginValues"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/vml/office/enum.ConnectValues.html\" title=\"enum umya_spreadsheet::structs::vml::office::ConnectValues\">ConnectValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::vml::office::connect_values::ConnectValues"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/vml/spreadsheet/enum.ObjectValues.html\" title=\"enum umya_spreadsheet::structs::vml::spreadsheet::ObjectValues\">ObjectValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::vml::spreadsheet::object_values::ObjectValues"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/vml/spreadsheet/struct.ClientData.html\" title=\"struct umya_spreadsheet::structs::vml::spreadsheet::ClientData\">ClientData</a>","synthetic":true,"types":["umya_spreadsheet::structs::vml::spreadsheet::client_data::ClientData"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/vml/spreadsheet/struct.ResizeWithCells.html\" title=\"struct umya_spreadsheet::structs::vml::spreadsheet::ResizeWithCells\">ResizeWithCells</a>","synthetic":true,"types":["umya_spreadsheet::structs::vml::spreadsheet::resize_with_cells::ResizeWithCells"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/vml/spreadsheet/struct.Anchor.html\" title=\"struct umya_spreadsheet::structs::vml::spreadsheet::Anchor\">Anchor</a>","synthetic":true,"types":["umya_spreadsheet::structs::vml::spreadsheet::anchor::Anchor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/vml/spreadsheet/struct.ClipboardFormat.html\" title=\"struct umya_spreadsheet::structs::vml::spreadsheet::ClipboardFormat\">ClipboardFormat</a>","synthetic":true,"types":["umya_spreadsheet::structs::vml::spreadsheet::clipboard_format::ClipboardFormat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/vml/spreadsheet/struct.MoveWithCells.html\" title=\"struct umya_spreadsheet::structs::vml::spreadsheet::MoveWithCells\">MoveWithCells</a>","synthetic":true,"types":["umya_spreadsheet::structs::vml::spreadsheet::move_with_cells::MoveWithCells"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/vml/spreadsheet/struct.AutoFill.html\" title=\"struct umya_spreadsheet::structs::vml::spreadsheet::AutoFill\">AutoFill</a>","synthetic":true,"types":["umya_spreadsheet::structs::vml::spreadsheet::auto_fill::AutoFill"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/vml/spreadsheet/struct.CommentRowTarget.html\" title=\"struct umya_spreadsheet::structs::vml::spreadsheet::CommentRowTarget\">CommentRowTarget</a>","synthetic":true,"types":["umya_spreadsheet::structs::vml::spreadsheet::comment_row_target::CommentRowTarget"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/vml/spreadsheet/struct.CommentColumnTarget.html\" title=\"struct umya_spreadsheet::structs::vml::spreadsheet::CommentColumnTarget\">CommentColumnTarget</a>","synthetic":true,"types":["umya_spreadsheet::structs::vml::spreadsheet::comment_column_target::CommentColumnTarget"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/vml/spreadsheet/struct.Visible.html\" title=\"struct umya_spreadsheet::structs::vml::spreadsheet::Visible\">Visible</a>","synthetic":true,"types":["umya_spreadsheet::structs::vml::spreadsheet::visible::Visible"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/vml/spreadsheet/enum.ClipboardFormatValues.html\" title=\"enum umya_spreadsheet::structs::vml::spreadsheet::ClipboardFormatValues\">ClipboardFormatValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::vml::spreadsheet::clipboard_format_values::ClipboardFormatValues"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/vml/spreadsheet/struct.AutoSizePicture.html\" title=\"struct umya_spreadsheet::structs::vml::spreadsheet::AutoSizePicture\">AutoSizePicture</a>","synthetic":true,"types":["umya_spreadsheet::structs::vml::spreadsheet::auto_size_picture::AutoSizePicture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/vml/struct.Shape.html\" title=\"struct umya_spreadsheet::structs::vml::Shape\">Shape</a>","synthetic":true,"types":["umya_spreadsheet::structs::vml::shape::Shape"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/vml/struct.Fill.html\" title=\"struct umya_spreadsheet::structs::vml::Fill\">Fill</a>","synthetic":true,"types":["umya_spreadsheet::structs::vml::fill::Fill"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/vml/struct.Stroke.html\" title=\"struct umya_spreadsheet::structs::vml::Stroke\">Stroke</a>","synthetic":true,"types":["umya_spreadsheet::structs::vml::stroke::Stroke"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/vml/struct.ImageData.html\" title=\"struct umya_spreadsheet::structs::vml::ImageData\">ImageData</a>","synthetic":true,"types":["umya_spreadsheet::structs::vml::image_data::ImageData"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/vml/struct.Shadow.html\" title=\"struct umya_spreadsheet::structs::vml::Shadow\">Shadow</a>","synthetic":true,"types":["umya_spreadsheet::structs::vml::shadow::Shadow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/vml/struct.Path.html\" title=\"struct umya_spreadsheet::structs::vml::Path\">Path</a>","synthetic":true,"types":["umya_spreadsheet::structs::vml::path::Path"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/vml/struct.TextBox.html\" title=\"struct umya_spreadsheet::structs::vml::TextBox\">TextBox</a>","synthetic":true,"types":["umya_spreadsheet::structs::vml::text_box::TextBox"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Spreadsheet.html\" title=\"struct umya_spreadsheet::structs::Spreadsheet\">Spreadsheet</a>","synthetic":true,"types":["umya_spreadsheet::structs::spreadsheet::Spreadsheet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Worksheet.html\" title=\"struct umya_spreadsheet::structs::Worksheet\">Worksheet</a>","synthetic":true,"types":["umya_spreadsheet::structs::worksheet::Worksheet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Properties.html\" title=\"struct umya_spreadsheet::structs::Properties\">Properties</a>","synthetic":true,"types":["umya_spreadsheet::structs::properties::Properties"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Cell.html\" title=\"struct umya_spreadsheet::structs::Cell\">Cell</a>","synthetic":true,"types":["umya_spreadsheet::structs::cell::Cell"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Cells.html\" title=\"struct umya_spreadsheet::structs::Cells\">Cells</a>","synthetic":true,"types":["umya_spreadsheet::structs::cells::Cells"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Hyperlink.html\" title=\"struct umya_spreadsheet::structs::Hyperlink\">Hyperlink</a>","synthetic":true,"types":["umya_spreadsheet::structs::hyperlink::Hyperlink"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Color.html\" title=\"struct umya_spreadsheet::structs::Color\">Color</a>","synthetic":true,"types":["umya_spreadsheet::structs::color::Color"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.PageSetup.html\" title=\"struct umya_spreadsheet::structs::PageSetup\">PageSetup</a>","synthetic":true,"types":["umya_spreadsheet::structs::page_setup::PageSetup"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.PageMargins.html\" title=\"struct umya_spreadsheet::structs::PageMargins\">PageMargins</a>","synthetic":true,"types":["umya_spreadsheet::structs::page_margins::PageMargins"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.HeaderFooter.html\" title=\"struct umya_spreadsheet::structs::HeaderFooter\">HeaderFooter</a>","synthetic":true,"types":["umya_spreadsheet::structs::header_footer::HeaderFooter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.SheetView.html\" title=\"struct umya_spreadsheet::structs::SheetView\">SheetView</a>","synthetic":true,"types":["umya_spreadsheet::structs::sheet_view::SheetView"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.AutoFilter.html\" title=\"struct umya_spreadsheet::structs::AutoFilter\">AutoFilter</a>","synthetic":true,"types":["umya_spreadsheet::structs::auto_filter::AutoFilter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Column.html\" title=\"struct umya_spreadsheet::structs::Column\">Column</a>","synthetic":true,"types":["umya_spreadsheet::structs::column::Column"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Security.html\" title=\"struct umya_spreadsheet::structs::Security\">Security</a>","synthetic":true,"types":["umya_spreadsheet::structs::security::Security"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Style.html\" title=\"struct umya_spreadsheet::structs::Style\">Style</a>","synthetic":true,"types":["umya_spreadsheet::structs::style::Style"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Font.html\" title=\"struct umya_spreadsheet::structs::Font\">Font</a>","synthetic":true,"types":["umya_spreadsheet::structs::font::Font"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Fill.html\" title=\"struct umya_spreadsheet::structs::Fill\">Fill</a>","synthetic":true,"types":["umya_spreadsheet::structs::fill::Fill"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Border.html\" title=\"struct umya_spreadsheet::structs::Border\">Border</a>","synthetic":true,"types":["umya_spreadsheet::structs::border::Border"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Alignment.html\" title=\"struct umya_spreadsheet::structs::Alignment\">Alignment</a>","synthetic":true,"types":["umya_spreadsheet::structs::alignment::Alignment"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Conditional.html\" title=\"struct umya_spreadsheet::structs::Conditional\">Conditional</a>","synthetic":true,"types":["umya_spreadsheet::structs::conditional::Conditional"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Protection.html\" title=\"struct umya_spreadsheet::structs::Protection\">Protection</a>","synthetic":true,"types":["umya_spreadsheet::structs::protection::Protection"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.RichText.html\" title=\"struct umya_spreadsheet::structs::RichText\">RichText</a>","synthetic":true,"types":["umya_spreadsheet::structs::rich_text::RichText"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.TextElement.html\" title=\"struct umya_spreadsheet::structs::TextElement\">TextElement</a>","synthetic":true,"types":["umya_spreadsheet::structs::text_element::TextElement"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.CellStyle.html\" title=\"struct umya_spreadsheet::structs::CellStyle\">CellStyle</a>","synthetic":true,"types":["umya_spreadsheet::structs::cell_style::CellStyle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.DefinedName.html\" title=\"struct umya_spreadsheet::structs::DefinedName\">DefinedName</a>","synthetic":true,"types":["umya_spreadsheet::structs::defined_name::DefinedName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Comment.html\" title=\"struct umya_spreadsheet::structs::Comment\">Comment</a>","synthetic":true,"types":["umya_spreadsheet::structs::comment::Comment"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Coordinate.html\" title=\"struct umya_spreadsheet::structs::Coordinate\">Coordinate</a>","synthetic":true,"types":["umya_spreadsheet::structs::coordinate::Coordinate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Range.html\" title=\"struct umya_spreadsheet::structs::Range\">Range</a>","synthetic":true,"types":["umya_spreadsheet::structs::range::Range"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.ConditionalSet.html\" title=\"struct umya_spreadsheet::structs::ConditionalSet\">ConditionalSet</a>","synthetic":true,"types":["umya_spreadsheet::structs::conditional_set::ConditionalSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Address.html\" title=\"struct umya_spreadsheet::structs::Address\">Address</a>","synthetic":true,"types":["umya_spreadsheet::structs::address::Address"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Anchor.html\" title=\"struct umya_spreadsheet::structs::Anchor\">Anchor</a>","synthetic":true,"types":["umya_spreadsheet::structs::anchor::Anchor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.BooleanValue.html\" title=\"struct umya_spreadsheet::structs::BooleanValue\">BooleanValue</a>","synthetic":true,"types":["umya_spreadsheet::structs::boolean_value::BooleanValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.UInt32Value.html\" title=\"struct umya_spreadsheet::structs::UInt32Value\">UInt32Value</a>","synthetic":true,"types":["umya_spreadsheet::structs::u_int32_value::UInt32Value"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.UInt16Value.html\" title=\"struct umya_spreadsheet::structs::UInt16Value\">UInt16Value</a>","synthetic":true,"types":["umya_spreadsheet::structs::u_int16_value::UInt16Value"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Int32Value.html\" title=\"struct umya_spreadsheet::structs::Int32Value\">Int32Value</a>","synthetic":true,"types":["umya_spreadsheet::structs::int32_value::Int32Value"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Int16Value.html\" title=\"struct umya_spreadsheet::structs::Int16Value\">Int16Value</a>","synthetic":true,"types":["umya_spreadsheet::structs::int16_value::Int16Value"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.StringValue.html\" title=\"struct umya_spreadsheet::structs::StringValue\">StringValue</a>","synthetic":true,"types":["umya_spreadsheet::structs::string_value::StringValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.DoubleValue.html\" title=\"struct umya_spreadsheet::structs::DoubleValue\">DoubleValue</a>","synthetic":true,"types":["umya_spreadsheet::structs::double_value::DoubleValue"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.EnumValue.html\" title=\"struct umya_spreadsheet::structs::EnumValue\">EnumValue</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["umya_spreadsheet::structs::enum_value::EnumValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.ByteValue.html\" title=\"struct umya_spreadsheet::structs::ByteValue\">ByteValue</a>","synthetic":true,"types":["umya_spreadsheet::structs::byte_value::ByteValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.SByteValue.html\" title=\"struct umya_spreadsheet::structs::SByteValue\">SByteValue</a>","synthetic":true,"types":["umya_spreadsheet::structs::s_byte_value::SByteValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Int64Value.html\" title=\"struct umya_spreadsheet::structs::Int64Value\">Int64Value</a>","synthetic":true,"types":["umya_spreadsheet::structs::int64_value::Int64Value"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Row.html\" title=\"struct umya_spreadsheet::structs::Row\">Row</a>","synthetic":true,"types":["umya_spreadsheet::structs::row::Row"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.FontName.html\" title=\"struct umya_spreadsheet::structs::FontName\">FontName</a>","synthetic":true,"types":["umya_spreadsheet::structs::font_name::FontName"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.FontSize.html\" title=\"struct umya_spreadsheet::structs::FontSize\">FontSize</a>","synthetic":true,"types":["umya_spreadsheet::structs::font_size::FontSize"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.FontFamilyNumbering.html\" title=\"struct umya_spreadsheet::structs::FontFamilyNumbering\">FontFamilyNumbering</a>","synthetic":true,"types":["umya_spreadsheet::structs::font_family_numbering::FontFamilyNumbering"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Bold.html\" title=\"struct umya_spreadsheet::structs::Bold\">Bold</a>","synthetic":true,"types":["umya_spreadsheet::structs::bold::Bold"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Italic.html\" title=\"struct umya_spreadsheet::structs::Italic\">Italic</a>","synthetic":true,"types":["umya_spreadsheet::structs::italic::Italic"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/enum.UnderlineValues.html\" title=\"enum umya_spreadsheet::structs::UnderlineValues\">UnderlineValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::underline_values::UnderlineValues"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Underline.html\" title=\"struct umya_spreadsheet::structs::Underline\">Underline</a>","synthetic":true,"types":["umya_spreadsheet::structs::underline::Underline"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Strike.html\" title=\"struct umya_spreadsheet::structs::Strike\">Strike</a>","synthetic":true,"types":["umya_spreadsheet::structs::strike::Strike"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.FontCharSet.html\" title=\"struct umya_spreadsheet::structs::FontCharSet\">FontCharSet</a>","synthetic":true,"types":["umya_spreadsheet::structs::font_char_set::FontCharSet"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/enum.FontSchemeValues.html\" title=\"enum umya_spreadsheet::structs::FontSchemeValues\">FontSchemeValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::font_scheme_values::FontSchemeValues"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.FontScheme.html\" title=\"struct umya_spreadsheet::structs::FontScheme\">FontScheme</a>","synthetic":true,"types":["umya_spreadsheet::structs::font_scheme::FontScheme"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.PatternFill.html\" title=\"struct umya_spreadsheet::structs::PatternFill\">PatternFill</a>","synthetic":true,"types":["umya_spreadsheet::structs::pattern_fill::PatternFill"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/enum.PatternValues.html\" title=\"enum umya_spreadsheet::structs::PatternValues\">PatternValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::pattern_values::PatternValues"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.NumberingFormat.html\" title=\"struct umya_spreadsheet::structs::NumberingFormat\">NumberingFormat</a>","synthetic":true,"types":["umya_spreadsheet::structs::numbering_format::NumberingFormat"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/enum.BorderStyleValues.html\" title=\"enum umya_spreadsheet::structs::BorderStyleValues\">BorderStyleValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::border_style_values::BorderStyleValues"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/enum.HorizontalAlignmentValues.html\" title=\"enum umya_spreadsheet::structs::HorizontalAlignmentValues\">HorizontalAlignmentValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::horizontal_alignment_values::HorizontalAlignmentValues"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/enum.VerticalAlignmentValues.html\" title=\"enum umya_spreadsheet::structs::VerticalAlignmentValues\">VerticalAlignmentValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::vertical_alignment_values::VerticalAlignmentValues"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.GradientFill.html\" title=\"struct umya_spreadsheet::structs::GradientFill\">GradientFill</a>","synthetic":true,"types":["umya_spreadsheet::structs::gradient_fill::GradientFill"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.GradientStop.html\" title=\"struct umya_spreadsheet::structs::GradientStop\">GradientStop</a>","synthetic":true,"types":["umya_spreadsheet::structs::gradient_stop::GradientStop"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/enum.VerticalAlignmentRunValues.html\" title=\"enum umya_spreadsheet::structs::VerticalAlignmentRunValues\">VerticalAlignmentRunValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::vertical_alignment_run_values::VerticalAlignmentRunValues"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.VerticalTextAlignment.html\" title=\"struct umya_spreadsheet::structs::VerticalTextAlignment\">VerticalTextAlignment</a>","synthetic":true,"types":["umya_spreadsheet::structs::vertical_text_alignment::VerticalTextAlignment"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.CellValue.html\" title=\"struct umya_spreadsheet::structs::CellValue\">CellValue</a>","synthetic":true,"types":["umya_spreadsheet::structs::cell_value::CellValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.RowReference.html\" title=\"struct umya_spreadsheet::structs::RowReference\">RowReference</a>","synthetic":true,"types":["umya_spreadsheet::structs::row_reference::RowReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.ColumnReference.html\" title=\"struct umya_spreadsheet::structs::ColumnReference\">ColumnReference</a>","synthetic":true,"types":["umya_spreadsheet::structs::column_reference::ColumnReference"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.SequenceOfReferences.html\" title=\"struct umya_spreadsheet::structs::SequenceOfReferences\">SequenceOfReferences</a>","synthetic":true,"types":["umya_spreadsheet::structs::sequence_of_references::SequenceOfReferences"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Selection.html\" title=\"struct umya_spreadsheet::structs::Selection\">Selection</a>","synthetic":true,"types":["umya_spreadsheet::structs::selection::Selection"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/enum.PaneValues.html\" title=\"enum umya_spreadsheet::structs::PaneValues\">PaneValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::pane_values::PaneValues"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Pane.html\" title=\"struct umya_spreadsheet::structs::Pane\">Pane</a>","synthetic":true,"types":["umya_spreadsheet::structs::pane::Pane"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/enum.PaneStateValues.html\" title=\"enum umya_spreadsheet::structs::PaneStateValues\">PaneStateValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::pane_state_values::PaneStateValues"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.WorkbookView.html\" title=\"struct umya_spreadsheet::structs::WorkbookView\">WorkbookView</a>","synthetic":true,"types":["umya_spreadsheet::structs::workbook_view::WorkbookView"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.OleObjects.html\" title=\"struct umya_spreadsheet::structs::OleObjects\">OleObjects</a>","synthetic":true,"types":["umya_spreadsheet::structs::ole_objects::OleObjects"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.OleObject.html\" title=\"struct umya_spreadsheet::structs::OleObject\">OleObject</a>","synthetic":true,"types":["umya_spreadsheet::structs::ole_object::OleObject"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.EmbeddedObjectProperties.html\" title=\"struct umya_spreadsheet::structs::EmbeddedObjectProperties\">EmbeddedObjectProperties</a>","synthetic":true,"types":["umya_spreadsheet::structs::embedded_object_properties::EmbeddedObjectProperties"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.ObjectAnchor.html\" title=\"struct umya_spreadsheet::structs::ObjectAnchor\">ObjectAnchor</a>","synthetic":true,"types":["umya_spreadsheet::structs::object_anchor::ObjectAnchor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.FromMarker.html\" title=\"struct umya_spreadsheet::structs::FromMarker\">FromMarker</a>","synthetic":true,"types":["umya_spreadsheet::structs::from_marker::FromMarker"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.ToMarker.html\" title=\"struct umya_spreadsheet::structs::ToMarker\">ToMarker</a>","synthetic":true,"types":["umya_spreadsheet::structs::to_marker::ToMarker"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.TrueFalseValue.html\" title=\"struct umya_spreadsheet::structs::TrueFalseValue\">TrueFalseValue</a>","synthetic":true,"types":["umya_spreadsheet::structs::true_false_value::TrueFalseValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.TrueFalseBlankValue.html\" title=\"struct umya_spreadsheet::structs::TrueFalseBlankValue\">TrueFalseBlankValue</a>","synthetic":true,"types":["umya_spreadsheet::structs::true_false_blank_value::TrueFalseBlankValue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Image.html\" title=\"struct umya_spreadsheet::structs::Image\">Image</a>","synthetic":true,"types":["umya_spreadsheet::structs::image::Image"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Chart.html\" title=\"struct umya_spreadsheet::structs::Chart\">Chart</a>","synthetic":true,"types":["umya_spreadsheet::structs::chart::Chart"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/enum.ChartType.html\" title=\"enum umya_spreadsheet::structs::ChartType\">ChartType</a>","synthetic":true,"types":["umya_spreadsheet::structs::chart_type::ChartType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.PrintOptions.html\" title=\"struct umya_spreadsheet::structs::PrintOptions\">PrintOptions</a>","synthetic":true,"types":["umya_spreadsheet::structs::print_options::PrintOptions"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/enum.OrientationValues.html\" title=\"enum umya_spreadsheet::structs::OrientationValues\">OrientationValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::orientation_values::OrientationValues"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.OddHeader.html\" title=\"struct umya_spreadsheet::structs::OddHeader\">OddHeader</a>","synthetic":true,"types":["umya_spreadsheet::structs::odd_header::OddHeader"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.OddFooter.html\" title=\"struct umya_spreadsheet::structs::OddFooter\">OddFooter</a>","synthetic":true,"types":["umya_spreadsheet::structs::odd_footer::OddFooter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.Break.html\" title=\"struct umya_spreadsheet::structs::Break\">Break</a>","synthetic":true,"types":["umya_spreadsheet::structs::break::Break"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.RowBreaks.html\" title=\"struct umya_spreadsheet::structs::RowBreaks\">RowBreaks</a>","synthetic":true,"types":["umya_spreadsheet::structs::row_breaks::RowBreaks"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.ColumnBreaks.html\" title=\"struct umya_spreadsheet::structs::ColumnBreaks\">ColumnBreaks</a>","synthetic":true,"types":["umya_spreadsheet::structs::column_breaks::ColumnBreaks"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/enum.SheetViewValues.html\" title=\"enum umya_spreadsheet::structs::SheetViewValues\">SheetViewValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::sheet_view_values::SheetViewValues"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.WriterManager.html\" title=\"struct umya_spreadsheet::structs::WriterManager\">WriterManager</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["umya_spreadsheet::structs::writer_manager::WriterManager"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.SheetViews.html\" title=\"struct umya_spreadsheet::structs::SheetViews\">SheetViews</a>","synthetic":true,"types":["umya_spreadsheet::structs::sheet_views::SheetViews"]},{"text":"impl Freeze for <a class=\"struct\" href=\"umya_spreadsheet/structs/struct.CsvWriterOption.html\" title=\"struct umya_spreadsheet::structs::CsvWriterOption\">CsvWriterOption</a>","synthetic":true,"types":["umya_spreadsheet::structs::csv_writer_option::CsvWriterOption"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/enum.CsvEncodeValues.html\" title=\"enum umya_spreadsheet::structs::CsvEncodeValues\">CsvEncodeValues</a>","synthetic":true,"types":["umya_spreadsheet::structs::csv_encode_values::CsvEncodeValues"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/structs/enum.CellRawValue.html\" title=\"enum umya_spreadsheet::structs::CellRawValue\">CellRawValue</a>","synthetic":true,"types":["umya_spreadsheet::structs::cell_raw_value::CellRawValue"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/writer/csv/enum.XlsxError.html\" title=\"enum umya_spreadsheet::writer::csv::XlsxError\">XlsxError</a>","synthetic":true,"types":["umya_spreadsheet::writer::csv::XlsxError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"umya_spreadsheet/writer/xlsx/enum.XlsxError.html\" title=\"enum umya_spreadsheet::writer::xlsx::XlsxError\">XlsxError</a>","synthetic":true,"types":["umya_spreadsheet::writer::xlsx::XlsxError"]}];
implementors["unicode_bidi"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"unicode_bidi/level/struct.Level.html\" title=\"struct unicode_bidi::level::Level\">Level</a>","synthetic":true,"types":["unicode_bidi::level::Level"]},{"text":"impl Freeze for <a class=\"enum\" href=\"unicode_bidi/level/enum.Error.html\" title=\"enum unicode_bidi::level::Error\">Error</a>","synthetic":true,"types":["unicode_bidi::level::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"unicode_bidi/enum.BidiClass.html\" title=\"enum unicode_bidi::BidiClass\">BidiClass</a>","synthetic":true,"types":["unicode_bidi::char_data::tables::BidiClass"]},{"text":"impl Freeze for <a class=\"struct\" href=\"unicode_bidi/struct.HardcodedBidiData.html\" title=\"struct unicode_bidi::HardcodedBidiData\">HardcodedBidiData</a>","synthetic":true,"types":["unicode_bidi::char_data::HardcodedBidiData"]},{"text":"impl Freeze for <a class=\"enum\" href=\"unicode_bidi/enum.Direction.html\" title=\"enum unicode_bidi::Direction\">Direction</a>","synthetic":true,"types":["unicode_bidi::Direction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"unicode_bidi/struct.ParagraphInfo.html\" title=\"struct unicode_bidi::ParagraphInfo\">ParagraphInfo</a>","synthetic":true,"types":["unicode_bidi::ParagraphInfo"]},{"text":"impl&lt;'text&gt; Freeze for <a class=\"struct\" href=\"unicode_bidi/struct.InitialInfo.html\" title=\"struct unicode_bidi::InitialInfo\">InitialInfo</a>&lt;'text&gt;","synthetic":true,"types":["unicode_bidi::InitialInfo"]},{"text":"impl&lt;'text&gt; Freeze for <a class=\"struct\" href=\"unicode_bidi/struct.BidiInfo.html\" title=\"struct unicode_bidi::BidiInfo\">BidiInfo</a>&lt;'text&gt;","synthetic":true,"types":["unicode_bidi::BidiInfo"]},{"text":"impl&lt;'a, 'text&gt; Freeze for <a class=\"struct\" href=\"unicode_bidi/struct.Paragraph.html\" title=\"struct unicode_bidi::Paragraph\">Paragraph</a>&lt;'a, 'text&gt;","synthetic":true,"types":["unicode_bidi::Paragraph"]}];
implementors["unicode_normalization"] = [{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"unicode_normalization/struct.Decompositions.html\" title=\"struct unicode_normalization::Decompositions\">Decompositions</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["unicode_normalization::decompose::Decompositions"]},{"text":"impl Freeze for <a class=\"enum\" href=\"unicode_normalization/enum.IsNormalized.html\" title=\"enum unicode_normalization::IsNormalized\">IsNormalized</a>","synthetic":true,"types":["unicode_normalization::quick_check::IsNormalized"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"unicode_normalization/struct.Recompositions.html\" title=\"struct unicode_normalization::Recompositions\">Recompositions</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["unicode_normalization::recompose::Recompositions"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"unicode_normalization/struct.Replacements.html\" title=\"struct unicode_normalization::Replacements\">Replacements</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["unicode_normalization::replace::Replacements"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"unicode_normalization/struct.StreamSafe.html\" title=\"struct unicode_normalization::StreamSafe\">StreamSafe</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["unicode_normalization::stream_safe::StreamSafe"]}];
implementors["url"] = [{"text":"impl&lt;S&gt; Freeze for <a class=\"enum\" href=\"url/enum.Host.html\" title=\"enum url::Host\">Host</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["url::host::Host"]},{"text":"impl Freeze for <a class=\"enum\" href=\"url/enum.Origin.html\" title=\"enum url::Origin\">Origin</a>","synthetic":true,"types":["url::origin::Origin"]},{"text":"impl Freeze for <a class=\"struct\" href=\"url/struct.OpaqueOrigin.html\" title=\"struct url::OpaqueOrigin\">OpaqueOrigin</a>","synthetic":true,"types":["url::origin::OpaqueOrigin"]},{"text":"impl Freeze for <a class=\"enum\" href=\"url/enum.ParseError.html\" title=\"enum url::ParseError\">ParseError</a>","synthetic":true,"types":["url::parser::ParseError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"url/enum.SyntaxViolation.html\" title=\"enum url::SyntaxViolation\">SyntaxViolation</a>","synthetic":true,"types":["url::parser::SyntaxViolation"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"url/struct.PathSegmentsMut.html\" title=\"struct url::PathSegmentsMut\">PathSegmentsMut</a>&lt;'a&gt;","synthetic":true,"types":["url::path_segments::PathSegmentsMut"]},{"text":"impl Freeze for <a class=\"enum\" href=\"url/enum.Position.html\" title=\"enum url::Position\">Position</a>","synthetic":true,"types":["url::slicing::Position"]},{"text":"impl Freeze for <a class=\"struct\" href=\"url/struct.Url.html\" title=\"struct url::Url\">Url</a>","synthetic":true,"types":["url::Url"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"url/struct.ParseOptions.html\" title=\"struct url::ParseOptions\">ParseOptions</a>&lt;'a&gt;","synthetic":true,"types":["url::ParseOptions"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"url/struct.UrlQuery.html\" title=\"struct url::UrlQuery\">UrlQuery</a>&lt;'a&gt;","synthetic":true,"types":["url::UrlQuery"]}];
implementors["uuid"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"uuid/struct.Builder.html\" title=\"struct uuid::Builder\">Builder</a>","synthetic":true,"types":["uuid::builder::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"uuid/struct.Error.html\" title=\"struct uuid::Error\">Error</a>","synthetic":true,"types":["uuid::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"uuid/fmt/struct.Hyphenated.html\" title=\"struct uuid::fmt::Hyphenated\">Hyphenated</a>","synthetic":true,"types":["uuid::fmt::Hyphenated"]},{"text":"impl Freeze for <a class=\"struct\" href=\"uuid/fmt/struct.Simple.html\" title=\"struct uuid::fmt::Simple\">Simple</a>","synthetic":true,"types":["uuid::fmt::Simple"]},{"text":"impl Freeze for <a class=\"struct\" href=\"uuid/fmt/struct.Urn.html\" title=\"struct uuid::fmt::Urn\">Urn</a>","synthetic":true,"types":["uuid::fmt::Urn"]},{"text":"impl Freeze for <a class=\"struct\" href=\"uuid/fmt/struct.Braced.html\" title=\"struct uuid::fmt::Braced\">Braced</a>","synthetic":true,"types":["uuid::fmt::Braced"]},{"text":"impl Freeze for <a class=\"enum\" href=\"uuid/enum.Version.html\" title=\"enum uuid::Version\">Version</a>","synthetic":true,"types":["uuid::Version"]},{"text":"impl Freeze for <a class=\"enum\" href=\"uuid/enum.Variant.html\" title=\"enum uuid::Variant\">Variant</a>","synthetic":true,"types":["uuid::Variant"]},{"text":"impl Freeze for <a class=\"struct\" href=\"uuid/struct.Uuid.html\" title=\"struct uuid::Uuid\">Uuid</a>","synthetic":true,"types":["uuid::Uuid"]}];
implementors["vec_map"] = [{"text":"impl&lt;V&gt; Freeze for <a class=\"struct\" href=\"vec_map/struct.VecMap.html\" title=\"struct vec_map::VecMap\">VecMap</a>&lt;V&gt;","synthetic":true,"types":["vec_map::VecMap"]},{"text":"impl&lt;'a, V&gt; Freeze for <a class=\"enum\" href=\"vec_map/enum.Entry.html\" title=\"enum vec_map::Entry\">Entry</a>&lt;'a, V&gt;","synthetic":true,"types":["vec_map::Entry"]},{"text":"impl&lt;'a, V&gt; Freeze for <a class=\"struct\" href=\"vec_map/struct.VacantEntry.html\" title=\"struct vec_map::VacantEntry\">VacantEntry</a>&lt;'a, V&gt;","synthetic":true,"types":["vec_map::VacantEntry"]},{"text":"impl&lt;'a, V&gt; Freeze for <a class=\"struct\" href=\"vec_map/struct.OccupiedEntry.html\" title=\"struct vec_map::OccupiedEntry\">OccupiedEntry</a>&lt;'a, V&gt;","synthetic":true,"types":["vec_map::OccupiedEntry"]},{"text":"impl&lt;'a, V&gt; Freeze for <a class=\"struct\" href=\"vec_map/struct.Iter.html\" title=\"struct vec_map::Iter\">Iter</a>&lt;'a, V&gt;","synthetic":true,"types":["vec_map::Iter"]},{"text":"impl&lt;'a, V&gt; Freeze for <a class=\"struct\" href=\"vec_map/struct.IterMut.html\" title=\"struct vec_map::IterMut\">IterMut</a>&lt;'a, V&gt;","synthetic":true,"types":["vec_map::IterMut"]},{"text":"impl&lt;'a, V&gt; Freeze for <a class=\"struct\" href=\"vec_map/struct.Keys.html\" title=\"struct vec_map::Keys\">Keys</a>&lt;'a, V&gt;","synthetic":true,"types":["vec_map::Keys"]},{"text":"impl&lt;'a, V&gt; Freeze for <a class=\"struct\" href=\"vec_map/struct.Values.html\" title=\"struct vec_map::Values\">Values</a>&lt;'a, V&gt;","synthetic":true,"types":["vec_map::Values"]},{"text":"impl&lt;'a, V&gt; Freeze for <a class=\"struct\" href=\"vec_map/struct.ValuesMut.html\" title=\"struct vec_map::ValuesMut\">ValuesMut</a>&lt;'a, V&gt;","synthetic":true,"types":["vec_map::ValuesMut"]},{"text":"impl&lt;V&gt; Freeze for <a class=\"struct\" href=\"vec_map/struct.IntoIter.html\" title=\"struct vec_map::IntoIter\">IntoIter</a>&lt;V&gt;","synthetic":true,"types":["vec_map::IntoIter"]},{"text":"impl&lt;'a, V&gt; Freeze for <a class=\"struct\" href=\"vec_map/struct.Drain.html\" title=\"struct vec_map::Drain\">Drain</a>&lt;'a, V&gt;","synthetic":true,"types":["vec_map::Drain"]}];
implementors["want"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"want/struct.Giver.html\" title=\"struct want::Giver\">Giver</a>","synthetic":true,"types":["want::Giver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"want/struct.Taker.html\" title=\"struct want::Taker\">Taker</a>","synthetic":true,"types":["want::Taker"]},{"text":"impl Freeze for <a class=\"struct\" href=\"want/struct.SharedGiver.html\" title=\"struct want::SharedGiver\">SharedGiver</a>","synthetic":true,"types":["want::SharedGiver"]},{"text":"impl Freeze for <a class=\"struct\" href=\"want/struct.Closed.html\" title=\"struct want::Closed\">Closed</a>","synthetic":true,"types":["want::Closed"]}];
implementors["weezl"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"weezl/decode/struct.Decoder.html\" title=\"struct weezl::decode::Decoder\">Decoder</a>","synthetic":true,"types":["weezl::decode::Decoder"]},{"text":"impl&lt;'d, W&gt; Freeze for <a class=\"struct\" href=\"weezl/decode/struct.IntoStream.html\" title=\"struct weezl::decode::IntoStream\">IntoStream</a>&lt;'d, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["weezl::decode::IntoStream"]},{"text":"impl&lt;'d&gt; Freeze for <a class=\"struct\" href=\"weezl/decode/struct.IntoVec.html\" title=\"struct weezl::decode::IntoVec\">IntoVec</a>&lt;'d&gt;","synthetic":true,"types":["weezl::decode::IntoVec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"weezl/encode/struct.Encoder.html\" title=\"struct weezl::encode::Encoder\">Encoder</a>","synthetic":true,"types":["weezl::encode::Encoder"]},{"text":"impl&lt;'d, W&gt; Freeze for <a class=\"struct\" href=\"weezl/encode/struct.IntoStream.html\" title=\"struct weezl::encode::IntoStream\">IntoStream</a>&lt;'d, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["weezl::encode::IntoStream"]},{"text":"impl&lt;'d&gt; Freeze for <a class=\"struct\" href=\"weezl/encode/struct.IntoVec.html\" title=\"struct weezl::encode::IntoVec\">IntoVec</a>&lt;'d&gt;","synthetic":true,"types":["weezl::encode::IntoVec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"weezl/struct.BufferResult.html\" title=\"struct weezl::BufferResult\">BufferResult</a>","synthetic":true,"types":["weezl::error::BufferResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"weezl/struct.StreamResult.html\" title=\"struct weezl::StreamResult\">StreamResult</a>","synthetic":true,"types":["weezl::error::StreamResult"]},{"text":"impl Freeze for <a class=\"enum\" href=\"weezl/enum.LzwStatus.html\" title=\"enum weezl::LzwStatus\">LzwStatus</a>","synthetic":true,"types":["weezl::error::LzwStatus"]},{"text":"impl Freeze for <a class=\"enum\" href=\"weezl/enum.LzwError.html\" title=\"enum weezl::LzwError\">LzwError</a>","synthetic":true,"types":["weezl::error::LzwError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"weezl/enum.BitOrder.html\" title=\"enum weezl::BitOrder\">BitOrder</a>","synthetic":true,"types":["weezl::BitOrder"]}];
implementors["wide"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"wide/struct.f32x8.html\" title=\"struct wide::f32x8\">f32x8</a>","synthetic":true,"types":["wide::f32x8_::f32x8"]},{"text":"impl Freeze for <a class=\"struct\" href=\"wide/struct.f32x4.html\" title=\"struct wide::f32x4\">f32x4</a>","synthetic":true,"types":["wide::f32x4_::f32x4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"wide/struct.f64x4.html\" title=\"struct wide::f64x4\">f64x4</a>","synthetic":true,"types":["wide::f64x4_::f64x4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"wide/struct.f64x2.html\" title=\"struct wide::f64x2\">f64x2</a>","synthetic":true,"types":["wide::f64x2_::f64x2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"wide/struct.i8x16.html\" title=\"struct wide::i8x16\">i8x16</a>","synthetic":true,"types":["wide::i8x16_::i8x16"]},{"text":"impl Freeze for <a class=\"struct\" href=\"wide/struct.i16x16.html\" title=\"struct wide::i16x16\">i16x16</a>","synthetic":true,"types":["wide::i16x16_::i16x16"]},{"text":"impl Freeze for <a class=\"struct\" href=\"wide/struct.i8x32.html\" title=\"struct wide::i8x32\">i8x32</a>","synthetic":true,"types":["wide::i8x32_::i8x32"]},{"text":"impl Freeze for <a class=\"struct\" href=\"wide/struct.i16x8.html\" title=\"struct wide::i16x8\">i16x8</a>","synthetic":true,"types":["wide::i16x8_::i16x8"]},{"text":"impl Freeze for <a class=\"struct\" href=\"wide/struct.i32x4.html\" title=\"struct wide::i32x4\">i32x4</a>","synthetic":true,"types":["wide::i32x4_::i32x4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"wide/struct.i32x8.html\" title=\"struct wide::i32x8\">i32x8</a>","synthetic":true,"types":["wide::i32x8_::i32x8"]},{"text":"impl Freeze for <a class=\"struct\" href=\"wide/struct.i64x2.html\" title=\"struct wide::i64x2\">i64x2</a>","synthetic":true,"types":["wide::i64x2_::i64x2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"wide/struct.i64x4.html\" title=\"struct wide::i64x4\">i64x4</a>","synthetic":true,"types":["wide::i64x4_::i64x4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"wide/struct.u8x16.html\" title=\"struct wide::u8x16\">u8x16</a>","synthetic":true,"types":["wide::u8x16_::u8x16"]},{"text":"impl Freeze for <a class=\"struct\" href=\"wide/struct.u16x8.html\" title=\"struct wide::u16x8\">u16x8</a>","synthetic":true,"types":["wide::u16x8_::u16x8"]},{"text":"impl Freeze for <a class=\"struct\" href=\"wide/struct.u32x4.html\" title=\"struct wide::u32x4\">u32x4</a>","synthetic":true,"types":["wide::u32x4_::u32x4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"wide/struct.u32x8.html\" title=\"struct wide::u32x8\">u32x8</a>","synthetic":true,"types":["wide::u32x8_::u32x8"]},{"text":"impl Freeze for <a class=\"struct\" href=\"wide/struct.u64x2.html\" title=\"struct wide::u64x2\">u64x2</a>","synthetic":true,"types":["wide::u64x2_::u64x2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"wide/struct.u64x4.html\" title=\"struct wide::u64x4\">u64x4</a>","synthetic":true,"types":["wide::u64x4_::u64x4"]}];
implementors["zip"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"zip/enum.CompressionMethod.html\" title=\"enum zip::CompressionMethod\">CompressionMethod</a>","synthetic":true,"types":["zip::compression::CompressionMethod"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"zip/read/struct.ZipArchive.html\" title=\"struct zip::read::ZipArchive\">ZipArchive</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["zip::read::zip_archive::ZipArchive"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"zip/read/struct.ZipFile.html\" title=\"struct zip::read::ZipFile\">ZipFile</a>&lt;'a&gt;","synthetic":true,"types":["zip::read::ZipFile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"zip/result/struct.InvalidPassword.html\" title=\"struct zip::result::InvalidPassword\">InvalidPassword</a>","synthetic":true,"types":["zip::result::InvalidPassword"]},{"text":"impl Freeze for <a class=\"enum\" href=\"zip/result/enum.ZipError.html\" title=\"enum zip::result::ZipError\">ZipError</a>","synthetic":true,"types":["zip::result::ZipError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"zip/struct.DateTime.html\" title=\"struct zip::DateTime\">DateTime</a>","synthetic":true,"types":["zip::types::DateTime"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"zip/write/struct.ZipWriter.html\" title=\"struct zip::write::ZipWriter\">ZipWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["zip::write::zip_writer::ZipWriter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"zip/write/struct.FileOptions.html\" title=\"struct zip::write::FileOptions\">FileOptions</a>","synthetic":true,"types":["zip::write::FileOptions"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()